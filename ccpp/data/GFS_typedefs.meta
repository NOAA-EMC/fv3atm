[ccpp-table-properties]
  name = GFS_statein_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_statein_type
  type = ddt
[phii]
  standard_name = geopotential_at_interface
  long_name = geopotential at model layer interfaces
  units = m2 s-2
  dimensions = (horizontal_loop_extent,vertical_interface_dimension)
  type = real
  kind = kind_phys
[prsi]
  standard_name = air_pressure_at_interface
  long_name = air pressure at model layer interfaces
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_interface_dimension)
  type = real
  kind = kind_phys
[prsi(:,1)]
  standard_name = air_pressure_at_lowest_model_interface
  long_name = air pressure at lowest model interface
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[prsik]
  standard_name = dimensionless_exner_function_at_interface
  long_name = dimensionless Exner function at model layer interfaces
  units = none
  dimensions = (horizontal_loop_extent,vertical_interface_dimension)
  type = real
  kind = kind_phys
[prsik(:,1)]
  standard_name = surface_dimensionless_exner_function
  long_name = dimensionless Exner function at lowest model interface
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[phil]
  standard_name = geopotential
  long_name = geopotential at model layer centers
  units = m2 s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[prsl]
  standard_name = air_pressure
  long_name = mean layer pressure
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[prsl(:,1)]
  standard_name = air_pressure_at_surface_adjacent_layer
  long_name = mean pressure at lowest model layer
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[prslk]
  standard_name = dimensionless_exner_function
  long_name = dimensionless Exner function at model layer centers
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[prslk(:,1)]
  standard_name = dimensionless_exner_function_at_surface_adjacent_layer
  long_name = dimensionless Exner function at lowest model layer
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[pgr]
  standard_name = surface_air_pressure
  long_name = surface pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ugrs]
  standard_name = x_wind
  long_name = zonal wind
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[ugrs(:,1)]
  standard_name = x_wind_at_surface_adjacent_layer
  long_name = zonal wind at lowest model layer
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vgrs]
  standard_name = y_wind
  long_name = meridional wind
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[vgrs(:,1)]
  standard_name = y_wind_at_surface_adjacent_layer
  long_name = meridional wind at lowest model layer
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vvl]
  standard_name = lagrangian_tendency_of_air_pressure
  long_name = layer mean vertical velocity
  units = Pa s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[tgrs]
  standard_name = air_temperature
  long_name = model layer mean temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[tgrs(:,1)]
  standard_name = air_temperature_at_surface_adjacent_layer
  long_name = mean temperature at lowest model layer
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qgrs]
  standard_name = tracer_concentration
  long_name = model layer mean tracer concentration
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,number_of_tracers)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_specific_humidity_in_tracer_concentration_array)]
  standard_name = specific_humidity
  long_name = water vapor specific humidity
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,1,index_of_specific_humidity_in_tracer_concentration_array)]
  standard_name = specific_humidity_at_surface_adjacent_layer
  long_name = water vapor specific humidity at lowest model layer
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_cloud_liquid_water_mixing_ratio_in_tracer_concentration_array)]
  standard_name = cloud_liquid_water_mixing_ratio
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,1,index_of_cloud_liquid_water_mixing_ratio_in_tracer_concentration_array)]
  standard_name = cloud_liquid_water_mixing_ratio_at_surface_adjacent_layer
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates) at lowest model layer
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_cloud_ice_mixing_ratio_in_tracer_concentration_array)]
  standard_name = cloud_ice_mixing_ratio
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_rain_mixing_ratio_in_tracer_concentration_array)]
  standard_name = rain_mixing_ratio
  long_name = ratio of mass of rain water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_snow_mixing_ratio_in_tracer_concentration_array)]
  standard_name = snow_mixing_ratio
  long_name = ratio of mass of snow water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_graupel_mixing_ratio_in_tracer_concentration_array)]
  standard_name = graupel_mixing_ratio
  long_name = ratio of mass of graupel to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_hail_mixing_ratio_in_tracer_concentration_array)]
  standard_name = hail_mixing_ratio
  long_name = ratio of mass of hail to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_hail_mixing_ratio_in_tracer_concentration_array > 0)
[qgrs(:,:,index_of_ozone_mixing_ratio_in_tracer_concentration_array)]
  standard_name = ozone_mixing_ratio
  long_name = ozone mixing ratio
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_mass_number_concentration_of_hygroscopic_aerosols_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_hygroscopic_aerosols
  long_name = number concentration of water-friendly aerosols
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  active = (index_of_mass_number_concentration_of_hygroscopic_aerosols_in_tracer_concentration_array > 0)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_mass_number_concentration_of_nonhygroscopic_ice_nucleating_aerosols_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_nonhygroscopic_ice_nucleating_aerosols
  long_name = number concentration of ice-friendly aerosols
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  active = (index_of_mass_number_concentration_of_nonhygroscopic_ice_nucleating_aerosols_in_tracer_concentration_array > 0)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_mass_number_concentration_of_cloud_droplets_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_cloud_liquid_water_particles_in_air
  long_name = number concentration of cloud droplets (liquid)
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_mass_number_concentration_of_cloud_droplets_in_tracer_concentration_array > 0)
[qgrs(:,:,index_of_mass_number_concentration_of_cloud_ice_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_cloud_ice_water_crystals_in_air
  long_name = number concentration of ice
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_mass_number_concentration_of_rain_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_rain_water_in_air
  long_name = number concentration of rain
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_mass_number_concentration_of_snow_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_snow_in_air
  long_name = number concentration of snow
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_mass_number_concentration_of_graupel_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_graupel_in_air
  long_name = number concentration of graupel
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_mass_number_concentration_of_hail_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_hail_in_air
  long_name = number concentration of hail
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_mass_number_concentration_of_hail_in_tracer_concentration_array > 0)
[qgrs(:,:,index_of_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array)]
  standard_name = cloud_condensation_nuclei_number_concentration
  long_name = number concentration of cloud condensation nuclei
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array > 0 )
[qgrs(:,:,index_of_activated_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array)]
  standard_name = activated_cloud_condensation_nuclei_number_concentration
  long_name = number concentration of activated cloud condensation nuclei
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_activated_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array > 0 )
[qgrs(:,:,index_of_graupel_volume_in_tracer_concentration_array)]
  standard_name = graupel_volume
  long_name = graupel particle volume
  units = m3 kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_graupel_volume_in_tracer_concentration_array > 0 )
[qgrs(:,:,index_of_hail_volume_in_tracer_concentration_array)]
  standard_name = hail_volume
  long_name = hail particle volume
  units = m3 kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_hail_volume_in_tracer_concentration_array > 0 )
[qgrs(:,:,index_of_turbulent_kinetic_energy_in_tracer_concentration_array)]
  standard_name = turbulent_kinetic_energy
  long_name = turbulent kinetic energy
  units = J
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_of_updraft_area_fraction_in_tracer_concentration_array)]
  standard_name = prognostic_updraft_area_fraction_in_convection
  long_name = convective updraft area fraction
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_updraft_area_fraction_in_tracer_concentration_array > 0 )
[qgrs(:,:,index_for_smoke_in_tracer_concentration_array)]
  standard_name = smoke_tracer_concentration
  long_name = concentration of smoke
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_dust_in_tracer_concentration_array)]
  standard_name = dust_tracer_concentration
  long_name = concentration of dust
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[diss_est]
  standard_name = dissipation_estimate_of_air_temperature_at_model_layers
  long_name = dissipation estimate model layer mean temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_stateout_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_stateout_type
  type = ddt
[gu0]
  standard_name = x_wind_of_new_state
  long_name = zonal wind updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gu0(:,1)]
  standard_name = x_wind_of_new_state_at_surface_adjacent_layer
  long_name = zonal wind at lowest model layer updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gv0]
  standard_name = y_wind_of_new_state
  long_name = meridional wind updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gv0(:,1)]
  standard_name = y_wind_of_new_state_at_surface_adjacent_layer
  long_name = meridional wind at lowest model layer updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gt0]
  standard_name = air_temperature_of_new_state
  long_name = temperature updated by physics
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gt0(:,1)]
  standard_name = air_temperature_of_new_state_at_surface_adjacent_layer
  long_name = temperature at lowest model layer updated by physics
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gq0]
  standard_name = tracer_concentration_of_new_state
  long_name = tracer concentration updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,number_of_tracers)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_specific_humidity_in_tracer_concentration_array)]
  standard_name = specific_humidity_of_new_state
  long_name = water vapor specific humidity updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,1,index_of_specific_humidity_in_tracer_concentration_array)]
  standard_name = specific_humidity_of_new_state_at_surface_adjacent_layer
  long_name = water vapor specific humidity at lowest model layer updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_ozone_mixing_ratio_in_tracer_concentration_array)]
  standard_name = ozone_concentration_of_new_state
  long_name = ozone concentration updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_cloud_liquid_water_mixing_ratio_in_tracer_concentration_array)]
  standard_name = cloud_liquid_water_mixing_ratio_of_new_state
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_cloud_ice_mixing_ratio_in_tracer_concentration_array)]
  standard_name = cloud_ice_mixing_ratio_of_new_state
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_rain_mixing_ratio_in_tracer_concentration_array)]
  standard_name = rain_mixing_ratio_of_new_state
  long_name = ratio of mass of rain water to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_snow_mixing_ratio_in_tracer_concentration_array)]
  standard_name = snow_mixing_ratio_of_new_state
  long_name = ratio of mass of snow water to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_graupel_mixing_ratio_in_tracer_concentration_array)]
  standard_name = graupel_mixing_ratio_of_new_state
  long_name = ratio of mass of graupel to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_hail_mixing_ratio_in_tracer_concentration_array)]
  standard_name = hail_mixing_ratio_of_new_state
  long_name = ratio of mass of hail to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_hail_mixing_ratio_in_tracer_concentration_array > 0 )
[gq0(:,:,index_of_mass_weighted_rime_factor_in_tracer_concentration_array)]
  standard_name = mass_weighted_rime_factor_of_new_state
  long_name = mass weighted rime factor updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_mass_number_concentration_of_hygroscopic_aerosols_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_hygroscopic_aerosols_of_new_state
  long_name = number concentration of water-friendly aerosols updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_mass_number_concentration_of_hygroscopic_aerosols_in_tracer_concentration_array > 0)
[gq0(:,:,index_of_mass_number_concentration_of_nonhygroscopic_ice_nucleating_aerosols_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_nonhygroscopic_ice_nucleating_aerosols_of_new_state
  long_name = number concentration of ice-friendly aerosols updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_mass_number_concentration_of_nonhygroscopic_ice_nucleating_aerosols_in_tracer_concentration_array > 0)
[gq0(:,:,index_of_mass_number_concentration_of_cloud_droplets_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_cloud_liquid_water_particles_in_air_of_new_state
  long_name = number concentration of cloud droplets updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_mass_number_concentration_of_cloud_droplets_in_tracer_concentration_array > 0)
[gq0(:,:,index_of_mass_number_concentration_of_cloud_ice_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_cloud_ice_water_crystals_in_air_of_new_state
  long_name = number concentration of ice updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_mass_number_concentration_of_rain_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_rain_of_new_state
  long_name = number concentration of rain updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_mass_number_concentration_of_snow_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_snow_of_new_state
  long_name = number concentration of snow updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_mass_number_concentration_of_graupel_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_graupel_of_new_state
  long_name = number concentration of graupel updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_mass_number_concentration_of_hail_in_tracer_concentration_array)]
  standard_name = mass_number_concentration_of_hail_of_new_state
  long_name = number concentration of hail updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_mass_number_concentration_of_hail_in_tracer_concentration_array > 0 )
[gq0(:,:,index_of_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array)]
  standard_name = cloud_condensation_nuclei_number_concentration_of_new_state
  long_name = number concentration of cloud condensation nuclei updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array > 0 )
[gq0(:,:,index_of_activated_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array)]
  standard_name = activated_cloud_condensation_nuclei_number_concentration_of_new_state
  long_name = number concentration of cloud condensation nuclei updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_activated_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array > 0 )
[gq0(:,:,index_of_graupel_volume_in_tracer_concentration_array)]
  standard_name = graupel_volume_of_new_state
  long_name = graupel volume updated by physics
  units = m3 kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_graupel_volume_in_tracer_concentration_array > 0 )
[gq0(:,:,index_of_hail_volume_in_tracer_concentration_array)]
  standard_name = hail_volume_of_new_state
  long_name = hail volume updated by physics
  units = m3 kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_hail_volume_in_tracer_concentration_array > 0 )
[gq0(:,:,index_of_cloud_area_fraction_in_atmosphere_layer_in_tracer_concentration_array)]
  standard_name = cloud_area_fraction_in_atmosphere_layer_of_new_state
  long_name = cloud fraction updated by physics
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_of_updraft_area_fraction_in_tracer_concentration_array)]
  standard_name = updraft_area_fraction_updated_by_physics
  long_name = convective updraft area fraction updated by physics
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( index_of_updraft_area_fraction_in_tracer_concentration_array > 0 )
########################################################################
[ccpp-table-properties]
  name = GFS_sfcprop_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_sfcprop_type
  type = ddt
[slmsk]
  standard_name = area_type
  long_name = landmask: sea/land/ice=0/1/2
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[oceanfrac]
  standard_name = sea_area_fraction
  long_name = fraction of horizontal grid area occupied by ocean
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[landfrac]
  standard_name = land_area_fraction
  long_name = fraction of horizontal grid area occupied by land
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[lakefrac]
  standard_name = lake_area_fraction
  long_name = fraction of horizontal grid area occupied by lake
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[lakedepth]
  standard_name = lake_depth
  long_name = lake depth
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfc]
  standard_name = surface_skin_temperature
  long_name = surface skin temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfco]
  standard_name = sea_surface_temperature
  long_name = sea surface temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfcl]
  standard_name = surface_skin_temperature_over_land
  long_name = surface skin temperature over land
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tisfc]
  standard_name = surface_skin_temperature_over_ice
  long_name = surface skin temperature over ice
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tiice]
  standard_name = temperature_in_ice_layer
  long_name = sea ice internal temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension_of_sea_ice)
  type = real
  kind = kind_phys
[snowd]
  standard_name = lwe_surface_snow
  long_name = water equivalent snow depth
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorl]
  standard_name = surface_roughness_length
  long_name = surface roughness length
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorlw]
  standard_name = surface_roughness_length_over_water
  long_name = surface roughness length over water
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorll]
  standard_name = surface_roughness_length_over_land
  long_name = surface roughness length over land
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorli]
  standard_name = surface_roughness_length_over_ice
  long_name = surface roughness length over ice
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorlwav]
  standard_name = surface_roughness_length_from_wave_model
  long_name = surface roughness length from wave model
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fice]
  standard_name = sea_ice_area_fraction_of_sea_area_fraction
  long_name = ice fraction over open water
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snodl]
  standard_name = surface_snow_thickness_water_equivalent_over_land
  long_name = water equivalent snow depth over land
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[weasdl]
  standard_name = water_equivalent_accumulated_snow_depth_over_land
  long_name = water equiv of acc snow depth over land
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snodi]
  standard_name = surface_snow_thickness_water_equivalent_over_ice
  long_name = water equivalent snow depth over ice
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[weasdi]
  standard_name = water_equivalent_accumulated_snow_depth_over_ice
  long_name = water equiv of acc snow depth over land
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[hprime]
  standard_name = statistical_measures_of_subgrid_orography_collection_array
  long_name = orographic metrics
  units = mixed
  dimensions = (horizontal_loop_extent,number_of_statistical_measures_of_subgrid_orography)
  type = real
  kind = kind_phys
[hprime(:,1)]
  standard_name = standard_deviation_of_subgrid_orography
  long_name = standard deviation of subgrid height_above_mean_sea_level
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dust12m_in]
  standard_name = fengsha_dust12m_input
  long_name = fengsha dust input
  units = various
  dimensions = (horizontal_dimension,12,5)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[emi_in]
  standard_name = anthropogenic_background_input
  long_name = anthropogenic background input
  units = various
  dimensions = (horizontal_dimension,1)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[smoke_GBBEPx]
  standard_name = emission_smoke_GBBEPx
  long_name = emission fire GBBEPx
  units = various
  dimensions = (horizontal_dimension,24,3)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[z0base]
  standard_name = baseline_surface_roughness_length
  long_name = baseline surface roughness length for momentum in meter
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[semisbase]
  standard_name = baseline_surface_longwave_emissivity
  long_name = baseline surface lw emissivity in fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sncovr]
  standard_name = surface_snow_area_fraction_over_land
  long_name = surface snow area fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sncovr_ice]
  standard_name = surface_snow_area_fraction_over_ice
  long_name = surface snow area fraction over ice
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[snoalb]
  standard_name = upper_bound_of_max_albedo_assuming_deep_snow
  long_name = maximum snow albedo
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[emis_lnd]
  standard_name = surface_longwave_emissivity_over_land
  long_name = surface lw emissivity in fraction over land
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[emis_ice]
  standard_name = surface_longwave_emissivity_over_ice
  long_name = surface lw emissivity in fraction over ice
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[emis_wat]
  standard_name = surface_longwave_emissivity_over_water
  long_name = surface lw emissivity in fraction over water
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfalb_lnd]
  standard_name = surface_diffused_shortwave_albedo_over_land
  long_name = mean surface diffused sw albedo over land
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[sfalb_ice]
  standard_name = surface_diffused_shortwave_albedo_over_ice
  long_name = mean surface diffused sw albedo over ice
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[sfalb_lnd_bck]
  standard_name = surface_snow_free_albedo_over_land
  long_name = surface snow-free albedo over ice
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[alvwf]
  standard_name = vis_albedo_weak_cosz
  long_name = mean vis albedo with weak cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[alnwf]
  standard_name = nir_albedo_weak_cosz
  long_name = mean nir albedo with weak cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[slope]
  standard_name = surface_slope_classification
  long_name = sfc slope type for lsm
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[slope_save]
  standard_name = surface_slope_classification_save
  long_name = sfc slope type for lsm save
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[shdmin]
  standard_name = min_vegetation_area_fraction
  long_name = min fractional coverage of green vegetation
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[shdmax]
  standard_name = max_vegetation_area_fraction
  long_name = max fractional coverage of green vegetation
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tg3]
  standard_name = deep_soil_temperature
  long_name = deep soil temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vfrac]
  standard_name = vegetation_area_fraction
  long_name = areal fractional cover of green vegetation
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vtype]
  standard_name = vegetation_type_classification
  long_name = vegetation type for lsm
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[vtype_save]
  standard_name = vegetation_type_classification_save
  long_name = vegetation type for lsm save
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[stype]
  standard_name = soil_type_classification
  long_name = soil type for lsm
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[stype_save]
  standard_name = soil_type_classification_save
  long_name = soil type for lsm save
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[uustar]
  standard_name = surface_friction_velocity
  long_name = boundary layer parameter
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[oro]
  standard_name = height_above_mean_sea_level
  long_name = height_above_mean_sea_level
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[oro_uf]
  standard_name = unfiltered_height_above_mean_sea_level
  long_name = unfiltered height_above_mean_sea_level
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[conv_act]
  standard_name = consecutive_calls_for_grell_freitas_convection
  long_name = Memory counter for GF
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection)
[conv_act_m]
  standard_name = consecutive_calls_for_grell_freitas_mid_level_convection
  long_name = Memory counter for GF midlevel
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection)
[hice]
  standard_name = sea_ice_thickness
  long_name = sea ice thickness
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[weasd]
  standard_name = lwe_thickness_of_surface_snow_amount
  long_name = water equiv of acc snow depth over land and sea ice
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[canopy]
  standard_name = canopy_water_amount
  long_name = canopy water amount
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ffmm]
  standard_name = Monin_Obukhov_similarity_function_for_momentum
  long_name = Monin-Obukhov similarity function for momentum
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ffhh]
  standard_name = Monin_Obukhov_similarity_function_for_heat
  long_name = Monin-Obukhov similarity function for heat
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[f10m]
  standard_name = ratio_of_wind_at_surface_adjacent_layer_to_wind_at_10m
  long_name = ratio of sigma level 1 wind and 10m wind
  units = ratio
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rca]
  standard_name = aerodynamic_resistance_in_canopy
  long_name = canopy resistance
  units = s m-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tprcp]
  standard_name = nonnegative_lwe_thickness_of_precipitation_amount_on_dynamics_timestep
  long_name = total precipitation amount in each time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[srflag]
  standard_name = precipitation_type
  long_name = snow/rain flag for precipitation
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[slc]
  standard_name = volume_fraction_of_unfrozen_water_in_soil
  long_name = liquid soil moisture
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension_of_soil)
  type = real
  kind = kind_phys
[smc]
  standard_name = volume_fraction_of_condensed_water_in_soil
  long_name = total soil moisture
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension_of_soil)
  type = real
  kind = kind_phys
[stc]
  standard_name = soil_temperature
  long_name = soil temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension_of_soil)
  type = real
  kind = kind_phys
[t2m]
  standard_name = air_temperature_at_2m
  long_name = 2 meter temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[th2m]
  standard_name = air_potential_temperature_at_2m
  long_name = 2 meter potential temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[q2m]
  standard_name = specific_humidity_at_2m
  long_name = 2 meter specific humidity
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tref]
  standard_name = reference_sea_surface_temperature
  long_name = sea surface reference temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[z_c]
  standard_name = molecular_sublayer_thickness_in_sea_water
  long_name = sub-layer cooling thickness
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[c_0]
  standard_name = coefficient_c_0
  long_name = coefficient 1 to calculate d(Tz)/d(Ts)
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[c_d]
  standard_name = coefficient_c_d
  long_name = coefficient 2 to calculate d(Tz)/d(Ts)
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[w_0]
  standard_name = coefficient_w_0
  long_name = coefficient 3 to calculate d(Tz)/d(Ts)
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[w_d]
  standard_name = coefficient_w_d
  long_name = coefficient 4 to calculate d(Tz)/d(Ts)
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[xt]
  standard_name = heat_content_in_diurnal_thermocline
  long_name = heat content in diurnal thermocline layer
  units = K m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[xs]
  standard_name = sea_water_salinity_in_diurnal_thermocline
  long_name = salinity  content in diurnal thermocline layer
  units = ppt m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[xu]
  standard_name = x_current_in_diurnal_thermocline
  long_name = u-current content in diurnal thermocline layer
  units = m2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[xv]
  standard_name = y_current_in_diurnal_thermocline
  long_name = v-current content in diurnal thermocline layer
  units = m2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[xz]
  standard_name = diurnal_thermocline_layer_thickness
  long_name = diurnal thermocline layer thickness
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[zm]
  standard_name = ocean_mixed_layer_thickness
  long_name = mixed layer thickness
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[xtts]
  standard_name = derivative_of_heat_content_in_diurnal_thermocline_wrt_surface_skin_temperature
  long_name = d(xt)/d(ts)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[xzts]
  standard_name = derivative_of_diurnal_thermocline_layer_thickness_wrt_surface_skin_temperature
  long_name = d(xz)/d(ts)
  units = m K-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[d_conv]
  standard_name = free_convection_layer_thickness_in_sea_water
  long_name = thickness of free convection layer (FCL)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[ifd]
  standard_name = control_for_diurnal_thermocline_calculation
  long_name = index to start dtlm run or not
  units = index
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[dt_cool]
  standard_name = molecular_sublayer_temperature_correction_in_sea_water
  long_name = sub-layer cooling amount
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[qrain]
  standard_name = surface_sensible_heat_due_to_rainfall
  long_name = sensible heat flux due to rainfall
  units = W
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_nsstm > 0)
[snowxy]
  standard_name = number_of_snow_layers
  long_name = number of snow layers
  units = count
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[tvxy]
  standard_name = canopy_temperature
  long_name = vegetation temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[tgxy]
  standard_name = ground_temperature
  long_name = ground temperature for noahmp
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[canicexy]
  standard_name = canopy_intercepted_ice_mass
  long_name = canopy intercepted ice mass
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[canliqxy]
  standard_name = canopy_intercepted_liquid_water
  long_name = canopy intercepted liquid water
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[eahxy]
  standard_name = air_vapor_pressure_in_canopy
  long_name = canopy air vapor pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[tahxy]
  standard_name = air_temperature_in_canopy
  long_name = canopy air temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[cmxy]
  standard_name = surface_drag_coefficient_for_momentum_for_noahmp
  long_name = surface drag coefficient for momentum for noahmp
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[chxy]
  standard_name = surface_drag_coefficient_for_heat_and_moisture_for_noahmp
  long_name = surface exchange coeff heat & moisture for noahmp
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[fwetxy]
  standard_name = wet_canopy_area_fraction
  long_name = area fraction of canopy that is wetted/snowed
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[sneqvoxy]
  standard_name = lwe_thickness_of_snowfall_amount_on_previous_timestep
  long_name = snow mass at previous time step
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[alboldxy]
  standard_name = surface_albedo_assuming_deep_snow_on_previous_timestep
  long_name = snow albedo at previous time step
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[qsnowxy]
  standard_name = lwe_snowfall_rate
  long_name = snow precipitation rate at surface
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[wslakexy]
  standard_name = water_storage_in_lake
  long_name = lake water storage
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[zwtxy]
  standard_name = water_table_depth
  long_name = water table depth
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[waxy]
  standard_name = water_storage_in_aquifer
  long_name = water storage in aquifer
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[wtxy]
  standard_name = water_storage_in_aquifer_and_saturated_soil
  long_name = water storage in aquifer and saturated soil
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[tsnoxy]
  standard_name = temperature_in_surface_snow
  long_name = temperature_in_surface_snow
  units = K
  dimensions = (horizontal_loop_extent, lower_bound_of_vertical_dimension_of_surface_snow:0)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[zsnsoxy]
  standard_name = depth_from_snow_surface_at_bottom_interface
  long_name = depth from the top of the snow surface at the bottom of the layer
  units = m
  dimensions = (horizontal_loop_extent, lower_bound_of_vertical_dimension_of_surface_snow:vertical_dimension_of_soil_internal_to_land_surface_scheme)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[snicexy]
  standard_name = lwe_thickness_of_ice_in_surface_snow
  long_name = snow layer ice
  units = mm
  dimensions = (horizontal_loop_extent, lower_bound_of_vertical_dimension_of_surface_snow:0)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[snliqxy]
  standard_name = lwe_thickness_of_liquid_water_in_surface_snow
  long_name = snow layer liquid water
  units = mm
  dimensions = (horizontal_loop_extent, lower_bound_of_vertical_dimension_of_surface_snow:0)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[lfmassxy]
  standard_name = leaf_mass_content
  long_name = leaf mass
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[rtmassxy]
  standard_name = fine_root_mass_content
  long_name = fine root mass
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[stmassxy]
  standard_name = stem_mass_content
  long_name = stem mass
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[woodxy]
  standard_name = wood_mass_content
  long_name = wood mass including woody roots
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[stblcpxy]
  standard_name = slow_soil_pool_mass_content_of_carbon
  long_name = stable carbon in deep soil
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[fastcpxy]
  standard_name = fast_soil_pool_mass_content_of_carbon
  long_name = short-lived carbon in shallow soil
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[xlaixy]
  standard_name = leaf_area_index
  long_name = leaf area index
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noah_land_surface_scheme .or. control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme .or. (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .and. flag_for_reading_leaf_area_index_from_input))
[xsaixy]
  standard_name = stem_area_index
  long_name = stem area index
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[taussxy]
  standard_name = dimensionless_age_of_surface_snow
  long_name = non-dimensional snow age
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[smoiseq]
  standard_name = volumetric_equilibrium_soil_moisture
  long_name = equilibrium soil water content
  units = m3 m-3
  dimensions = (horizontal_loop_extent,vertical_dimension_of_soil_internal_to_land_surface_scheme)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[smcwtdxy]
  standard_name = volumetric_soil_moisture_between_soil_bottom_and_water_table
  long_name = soil water content between the bottom of the soil and the water table
  units = m3 m-3
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[deeprechxy]
  standard_name = water_table_recharge_assuming_deep
  long_name = recharge to or from the water table when deep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[rechxy]
  standard_name = water_table_recharge_assuming_shallow
  long_name = recharge to or from the water table when shallow
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[albdirvis_lnd]
  standard_name = surface_albedo_direct_visible_over_land
  long_name = direct surface albedo visible band over land
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[albdirnir_lnd]
  standard_name = surface_albedo_direct_NIR_over_land
  long_name = direct surface albedo NIR band over land
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[albdifvis_lnd]
  standard_name = surface_albedo_diffuse_visible_over_land
  long_name = diffuse surface albedo visible band over land
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[albdifnir_lnd]
  standard_name = surface_albedo_diffuse_NIR_over_land
  long_name = diffuse surface albedo NIR band over land
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[albdirvis_ice]
  standard_name = surface_albedo_direct_visible_over_ice
  long_name = direct surface albedo visible band over ice
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .or. flag_for_cice_albedo)
[albdifvis_ice]
  standard_name = surface_albedo_diffuse_visible_over_ice
  long_name = diffuse surface albedo visible band over ice
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .or. flag_for_cice_albedo)
[albdirnir_ice]
  standard_name = surface_albedo_direct_NIR_over_ice
  long_name = direct surface albedo NIR band over ice
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .or. flag_for_cice_albedo)
[albdifnir_ice]
  standard_name = surface_albedo_diffuse_NIR_over_ice
  long_name = diffuse surface albedo NIR band over ice
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .or. flag_for_cice_albedo)
[wetness]
  standard_name = normalized_soil_wetness_for_land_surface_model
  long_name = normalized soil wetness for lsm
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[sh2o]
  standard_name = volume_fraction_of_unfrozen_soil_moisture_for_land_surface_model
  long_name = volume fraction of unfrozen soil moisture for lsm
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension_of_soil_internal_to_land_surface_scheme)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[keepsmfr]
  standard_name = volume_fraction_of_frozen_soil_moisture_for_land_surface_model
  long_name = volume fraction of frozen soil moisture for lsm
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension_of_soil_internal_to_land_surface_scheme)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[smois]
  standard_name = volume_fraction_of_soil_moisture_for_land_surface_model
  long_name = volumetric fraction of soil moisture for lsm
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension_of_soil_internal_to_land_surface_scheme)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[tslb]
  standard_name = soil_temperature_for_land_surface_model
  long_name = soil temperature for land surface model
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension_of_soil_internal_to_land_surface_scheme)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[clw_surf_land]
  standard_name = cloud_condensed_water_mixing_ratio_at_surface_over_land
  long_name = moist cloud water mixing ratio at surface over land
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[clw_surf_ice]
  standard_name = cloud_condensed_water_mixing_ratio_at_surface_over_ice
  long_name = moist cloud water mixing ratio at surface over ice
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[qwv_surf_land]
  standard_name = water_vapor_mixing_ratio_at_surface_over_land
  long_name = water vapor mixing ratio at surface over land
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[qwv_surf_ice]
  standard_name = water_vapor_mixing_ratio_at_surface_over_ice
  long_name = water vapor mixing ratio at surface over ice
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[flag_frsoil]
  standard_name = control_for_frozen_soil_physics
  long_name = flag for frozen soil physics (RUC)
  units = flag
  dimensions = (horizontal_loop_extent,vertical_dimension_of_soil_internal_to_land_surface_scheme)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[rhofr]
  standard_name = frozen_precipitation_density
  long_name = density of frozen precipitation
  units = kg m-3
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[tsnow_land]
  standard_name = temperature_in_surface_snow_at_surface_adjacent_layer_over_land
  long_name = snow temperature at the bottom of the first snow layer over land
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[tsnow_ice]
  standard_name = temperature_in_surface_snow_at_surface_adjacent_layer_over_ice
  long_name = snow temperature at the bottom of the first snow layer over ice
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[snowfallac_land]
  standard_name = surface_snow_amount_over_land
  long_name = run-total snow accumulation on the ground
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[snowfallac_ice]
  standard_name = surface_snow_amount_over_ice
  long_name = run-total snow accumulation on the ice
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[ustm]
  standard_name = surface_friction_velocity_for_momentum
  long_name = friction velocity isolated for momentum only
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme)
[zol]
  standard_name = ratio_of_height_to_monin_obukhov_length
  long_name = monin obukhov surface stability parameter
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme)
[mol]
  standard_name = surface_temperature_scale
  long_name = temperature flux divided by ustar (temperature scale)
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme)
[rmol]
  standard_name = reciprocal_of_obukhov_length
  long_name = one over obukhov length
  units = m-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme)
[flhc]
  standard_name = surface_exchange_coefficient_for_heat
  long_name = surface exchange coefficient for heat
  units = W m-2 K-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme)
[flqc]
  standard_name = surface_exchange_coefficient_for_moisture
  long_name = surface exchange coefficient for moisture
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme)
[chs2]
  standard_name = surface_exchange_coefficient_for_heat_at_2m
  long_name = exchange coefficient for heat at 2 meters
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme)
[cqs2]
  standard_name = surface_exchange_coefficient_for_moisture_at_2m
  long_name = exchange coefficient for moisture at 2 meters
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme)
[lh]
  standard_name = surface_upward_latent_heat_flux
  long_name = latent heating at the surface (pos = up)
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme)
[evap]
  standard_name = surface_upward_specific_humidity_flux
  long_name = kinematic surface upward latent heat flux
  units = kg kg-1 m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[hflx]
  standard_name = surface_upward_temperature_flux
  long_name = kinematic surface upward sensible heat flux
  units = K m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qss]
  standard_name = surface_specific_humidity
  long_name = surface air saturation specific humidity
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[raincprv]
  standard_name = lwe_thickness_of_convective_precipitation_amount_on_previous_timestep
  long_name = convective_precipitation_amount from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .or. control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[rainncprv]
  standard_name = lwe_thickness_of_explicit_precipitation_amount_on_previous_timestep
  long_name = explicit rainfall from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .or. control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[iceprv]
  standard_name = lwe_thickness_of_ice_precipitation_amount_on_previous_timestep
  long_name = ice amount from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .or. control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[snowprv]
  standard_name = snow_mass_on_previous_timestep
  long_name = snow amount from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .or. control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[graupelprv]
  standard_name = lwe_thickness_of_graupel_amount_on_previous_timestep
  long_name = graupel amount from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme .or. control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[draincprv]
  standard_name = convective_precipitation_rate_on_previous_timestep
  long_name = convective precipitation rate from previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[drainncprv]
  standard_name = explicit_precipitation_rate_on_previous_timestep
  long_name = explicit rainfall rate previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[diceprv]
  standard_name = ice_precipitation_rate_on_previous_timestep
  long_name = ice precipitation rate from previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[dsnowprv]
  standard_name = snowfall_rate_on_previous_timestep
  long_name = snow precipitation rate from previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[dgraupelprv]
  standard_name = graupel_precipitation_rate_on_previous_timestep
  long_name = graupel precipitation rate from previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[alvsf]
  standard_name = vis_albedo_strong_cosz
  long_name = mean vis albedo with strong cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[alnsf]
  standard_name = nir_albedo_strong_cosz
  long_name = mean nir albedo with strong cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[facsf]
  standard_name =strong_cosz_area_fraction
  long_name = fractional coverage with strong cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[facwf]
  standard_name = weak_cosz_area_fraction
  long_name = fractional coverage with weak cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_coupling_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_coupling_type
  type = ddt
[nirbmdi]
  standard_name = surface_downwelling_direct_nir_shortwave_flux_on_radiation_timestep
  long_name = sfc nir beam sw downward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[nirdfdi]
  standard_name = surface_downwelling_diffuse_nir_shortwave_flux_on_radiation_timestep
  long_name = sfc nir diff sw downward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[visbmdi]
  standard_name = surface_downwelling_direct_uv_and_vis_shortwave_flux_on_radiation_timestep
  long_name = sfc uv+vis beam sw downward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[visdfdi]
  standard_name = surface_downwelling_diffuse_uv_and_vis_shortwave_flux_on_radiation_timestep
  long_name = sfc uv+vis diff sw downward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[nirbmui]
  standard_name = surface_upwelling_direct_nir_shortwave_flux_on_radiation_timestep
  long_name = sfc nir beam sw upward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[nirdfui]
  standard_name = surface_upwelling_diffuse_nir_shortwave_flux_on_radiation_timestep
  long_name = sfc nir diff sw upward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[visbmui]
  standard_name = surface_upwelling_direct_uv_and_vis_shortwave_flux_on_radiation_timestep
  long_name = sfc uv+vis beam sw upward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[visdfui]
  standard_name = surface_upwelling_diffuse_uv_and_vis_shortwave_flux_on_radiation_timestep
  long_name = sfc uv+vis diff sw upward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfcdsw]
  standard_name = surface_downwelling_shortwave_flux_on_radiation_timestep
  long_name = total sky sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfcnsw]
  standard_name = surface_net_downwelling_shortwave_flux_on_radiation_timestep
  long_name = total sky sfc netsw flx into ground
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfcdlw]
  standard_name = surface_downwelling_longwave_flux_on_radiation_timestep
  long_name = total sky sfc downward lw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfculw]
  standard_name = surface_upwelling_longwave_flux_on_radiation_timestep
  long_name = total sky sfc upward lw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rain_cpl]
  standard_name = cumulative_lwe_thickness_of_precipitation_amount_for_coupling
  long_name = total rain precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_stochastic_physics_perturbations .or. flag_for_chemistry_coupling .or. flag_for_global_cellular_automata)
[rainc_cpl]
  standard_name = cumulative_lwe_thickness_of_convective_precipitation_amount_for_coupling
  long_name = total convective precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_chemistry_coupling)
[snow_cpl]
  standard_name = cumulative_lwe_thickness_of_snow_amount_for_coupling
  long_name = total snow precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_stochastic_physics_perturbations .or. flag_for_chemistry_coupling .or. flag_for_global_cellular_automata)
[dusfc_cpl]
  standard_name = cumulative_surface_x_momentum_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc x momentum flux multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dvsfc_cpl]
  standard_name = cumulative_surface_y_momentum_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc y momentum flux multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dtsfc_cpl]
  standard_name = cumulative_surface_upward_sensible_heat_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc sensible heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dqsfc_cpl]
  standard_name = cumulative_surface_upward_latent_heat_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dlwsfc_cpl]
  standard_name = cumulative_surface_downwelling_longwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc downward lw flux mulitplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dswsfc_cpl]
  standard_name = cumulative_surface_downwelling_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dnirbm_cpl]
  standard_name = cumulative_surface_downwelling_direct_nir_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc nir beam downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dnirdf_cpl]
  standard_name = cumulative_surface_downwelling_diffuse_nir_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc nir diff downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dvisbm_cpl]
  standard_name = cumulative_surface_downwelling_direct_uv_and_vis_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc uv+vis beam dnwd sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dvisdf_cpl]
  standard_name = cumulative_surface_downwelling_diffuse_uv_and_vis_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc uv+vis diff dnwd sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nlwsfc_cpl]
  standard_name = cumulative_surface_net_downwelling_longwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net downward lw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nswsfc_cpl]
  standard_name = cumulative_surface_net_downwelling_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nnirbm_cpl]
  standard_name = cumulative_surface_net_downwelling_direct_nir_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net nir beam downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nnirdf_cpl]
  standard_name = cumulative_surface_net_downwellling_diffuse_nir_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net nir diff downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nvisbm_cpl]
  standard_name = cumulative_surface_net_downwelling_direct_uv_and_vis_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net uv+vis beam downward sw rad flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nvisdf_cpl]
  standard_name = cumulative_surface_net_downwelling_diffuse_uv_and_vis_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net uv+vis diff downward sw rad flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dusfci_cpl]
  standard_name = surface_x_momentum_flux_for_coupling
  long_name = instantaneous sfc x momentum flux
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dvsfci_cpl]
  standard_name = surface_y_momentum_flux_for_coupling
  long_name = instantaneous sfc y momentum flux
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dtsfci_cpl]
  standard_name = surface_upward_sensible_heat_flux_for_coupling
  long_name = instantaneous sfc sensible heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_air_quality_coupling)
[dqsfci_cpl]
  standard_name = surface_upward_latent_heat_flux_for_coupling
  long_name = instantaneous sfc latent heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_air_quality_coupling)
[dlwsfci_cpl]
  standard_name = surface_downwelling_longwave_flux_for_coupling
  long_name = instantaneous sfc downward lw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dswsfci_cpl]
  standard_name = surface_downwelling_shortwave_flux_for_coupling
  long_name = instantaneous sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dnirbmi_cpl]
  standard_name = surface_downwelling_direct_nir_shortwave_flux_for_coupling
  long_name = instantaneous sfc nir beam downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dnirdfi_cpl]
  standard_name = surface_downwelling_diffuse_nir_shortwave_flux_for_coupling
  long_name = instantaneous sfc nir diff downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dvisbmi_cpl]
  standard_name = surface_downwelling_direct_uv_and_vis_shortwave_flux_for_coupling
  long_name = instantaneous sfc uv+vis beam downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dvisdfi_cpl]
  standard_name = surface_downwelling_diffuse_uv_and_vis_shortwave_flux_for_coupling
  long_name = instantaneous sfc uv+vis diff downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nlwsfci_cpl]
  standard_name = surface_net_downwelling_longwave_flux_for_coupling
  long_name = instantaneous net sfc downward lw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nswsfci_cpl]
  standard_name = surface_net_downwelling_shortwave_flux_for_coupling
  long_name = instantaneous net sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_air_quality_coupling)
[nnirbmi_cpl]
  standard_name = surface_net_downwelling_direct_nir_shortwave_flux_for_coupling
  long_name = instantaneous net nir beam sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nnirdfi_cpl]
  standard_name = surface_net_downwelling_diffuse_nir_shortwave_flux_for_coupling
  long_name = instantaneous net nir diff sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nvisbmi_cpl]
  standard_name = surface_net_downwelling_direct_uv_and_vis_shortwave_flux_for_coupling
  long_name = instantaneous net uv+vis beam downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[nvisdfi_cpl]
  standard_name = surface_net_downwelling_diffuse_uv_and_vis_shortwave_flux_for_coupling
  long_name = instantaneous net uv+vis diff downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[t2mi_cpl]
  standard_name = temperature_at_2m_for_coupling
  long_name = instantaneous T2m
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_air_quality_coupling)
[q2mi_cpl]
  standard_name = specific_humidity_at_2m_for_coupling
  long_name = instantaneous Q2m
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_air_quality_coupling)
[u10mi_cpl]
  standard_name = x_wind_at_10m_for_coupling
  long_name = instantaneous U10m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_ocean_wave_coupling)
[v10mi_cpl]
  standard_name = y_wind_at_10m_for_coupling
  long_name = instantaneous V10m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_ocean_wave_coupling)
[tsfci_cpl]
  standard_name = surface_skin_temperature_for_coupling
  long_name = instantaneous sfc temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[psurfi_cpl]
  standard_name = surface_air_pressure_for_coupling
  long_name = instantaneous sfc pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_air_quality_coupling)
[ulwsfcin_cpl]
  standard_name = surface_upwelling_longwave_flux_from_coupled_process
  long_name = surface upwelling LW flux for coupling
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dusfcin_cpl]
  standard_name = surface_x_momentum_flux_from_coupled_process
  long_name = sfc x momentum flux for coupling
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dvsfcin_cpl]
  standard_name = surface_y_momentum_flux_from_coupled_process
  long_name = sfc y momentum flux for coupling
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dtsfcin_cpl]
  standard_name = surface_upward_sensible_heat_flux_from_coupled_process
  long_name = sfc sensible heat flux input
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[dqsfcin_cpl]
  standard_name = surface_upward_latent_heat_flux_from_coupled_process
  long_name = sfc latent heat flux input for coupling
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[ulwsfcin_med]
  standard_name = surface_upwelling_longwave_flux_over_ocean_from_mediator
  long_name = surface upwelling LW flux over ocean for coupling
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .and. do_mediator_atmosphere_ocean_fluxes)
[dusfcin_med]
  standard_name = surface_x_momentum_flux_over_ocean_from_mediator
  long_name = sfc x momentum flux over ocean for coupling
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .and. do_mediator_atmosphere_ocean_fluxes)
[dvsfcin_med]
  standard_name = surface_y_momentum_flux_over_ocean_from_mediator
  long_name = sfc y momentum flux over ocean for coupling
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .and. do_mediator_atmosphere_ocean_fluxes)
[dtsfcin_med]
  standard_name = surface_upward_sensible_heat_flux_over_ocean_from_mediator
  long_name = sfc sensible heat flux input over ocean for coupling
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .and. do_mediator_atmosphere_ocean_fluxes)
[dqsfcin_med]
  standard_name = surface_upward_latent_heat_flux_over_ocean_from_mediator
  long_name = sfc latent heat flux input over ocean for coupling
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .and. do_mediator_atmosphere_ocean_fluxes)
[hsnoin_cpl]
  standard_name = lwe_surface_snow_from_coupled_process
  long_name = sfc snow depth in meters over sea ice for coupling
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[slimskin_cpl]
  standard_name = area_type_from_coupled_process
  long_name = sea/land/ice mask input (=0/1/2)
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling)
[tmf]
  standard_name = instantaneous_tendency_of_specific_humidity_due_to_PBL
  long_name = instantaneous_tendency_of_specific_humidity_due_to_PBL
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_prognostic_updraft_area_fraction)
[dqdt_qmicro]
  standard_name = instantaneous_tendency_of_specific_humidity_due_to_microphysics
  long_name = instantaneous_tendency_of_specific_humidity_due_to_microphysics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_prognostic_updraft_area_fraction)
[ca_deep]
  standard_name = cellular_automata_area_fraction_for_deep_convection_from_coupled_process
  long_name = fraction of cellular automata for deep convection
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_cellular_automata)
[ca1]
  standard_name = cellular_automata_global_pattern_from_coupled_process
  long_name = cellular automata global pattern
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_cellular_automata)
[condition]
  standard_name = physics_field_for_coupling
  long_name = physics_field_for_coupling
  units = m2 s-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[shum_wts]
  standard_name = shum_weights_from_coupled_process
  long_name = weights for stochastic shum perturbation
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_shum_option)
[sppt_wts]
  standard_name = sppt_weights_from_coupled_process
  long_name = weights for stochastic sppt perturbation
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_physics_perturbations .or. flag_for_global_cellular_automata)
[skebu_wts]
  standard_name = skeb_x_wind_weights_from_coupled_process
  long_name = weights for stochastic skeb perturbation of x wind
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_skeb_option)
[skebv_wts]
  standard_name = skeb_y_wind_weights_from_coupled_process
  long_name = weights for stochastic skeb perturbation of y wind
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_skeb_option)
[spp_wts_pbl]
  standard_name = spp_weights_for_pbl_scheme
  long_name = spp weights for pbl scheme
  units = 1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_stochastically_perturbed_parameterizations)
[spp_wts_sfc]
  standard_name = spp_weights_for_surface_layer_scheme 
  long_name = spp weights for surface layer scheme
  units = 1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_stochastically_perturbed_parameterizations)
[spp_wts_mp]
  standard_name = spp_weights_for_microphysics_scheme
  long_name = spp weights for microphysics scheme 
  units = 1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_stochastically_perturbed_parameterizations)
[spp_wts_gwd]
  standard_name = spp_weights_for_gravity_wave_drag_scheme
  long_name = spp weights for gravity wave drag scheme 
  units = 1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_stochastically_perturbed_parameterizations)
[spp_wts_rad]
  standard_name = spp_weights_for_radiation_scheme
  long_name = spp weights for radiation scheme 
  units = 1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_stochastically_perturbed_parameterizations)
[sfc_wts]
  standard_name = surface_stochastic_weights_from_coupled_process
  long_name = weights for stochastic surface physics perturbation
  units = 1
  dimensions = (horizontal_loop_extent,number_of_perturbed_land_surface_variables)
  type = real
  kind = kind_phys
  active = (control_for_stochastic_land_surface_perturbation /= 0)
[dqdti]
  standard_name = instantaneous_water_vapor_specific_humidity_tendency_due_to_convection
  long_name = instantaneous moisture tendency due to convection
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[nwfa2d]
  standard_name = tendency_of_hygroscopic_aerosols_at_surface_adjacent_layer
  long_name = instantaneous water-friendly sfc aerosol source
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_microphysics_scheme == identifier_for_thompson_microphysics_scheme .and. flag_for_aerosol_physics)
[nifa2d]
  standard_name = tendency_of_nonhygroscopic_ice_nucleating_aerosols_at_surface_adjacent_layer
  long_name = instantaneous ice-friendly sfc aerosol source
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_microphysics_scheme == identifier_for_thompson_microphysics_scheme .and. flag_for_aerosol_physics)
[emdust]
  standard_name = emission_of_dust_for_smoke
  long_name = emission of dust for smoke
  units = ug m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[emseas]
  standard_name = emission_of_seas_for_smoke
  long_name = emission of seas for smoke
  units = ug m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[emanoc]
  standard_name = emission_of_anoc_for_thompson_mp
  long_name = emission of anoc for thompson mp
  units = ug m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[ebb_smoke_hr]
  standard_name = surface_smoke_emission
  long_name = emission of surface smoke
  units = ug m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[frp_hr]
  standard_name = frp_hourly
  long_name = hourly fire radiative power
  units = MW
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[frp_std_hr]
  standard_name = frp_std_hourly
  long_name = hourly stdandard deviation of fire radiative power
  units = MW
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[fhist]
  standard_name = fire_hist
  long_name = coefficient to scale the fire activity depending on the fire duration
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[coef_bb_dc]
  standard_name = coef_bb_dc
  long_name = coef to estimate the fire emission
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[ebu_smoke]
  standard_name = ebu_smoke
  long_name = buffer of vertical fire emission
  units = various
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[smoke_ext]
  standard_name = extinction_coefficient_in_air_due_to_smoke
  long_name = extinction coefficient in air due to smoke
  units = various
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[dust_ext]
  standard_name = extinction_coefficient_in_air_due_to_dust
  long_name = extinction coefficient in air due to dust
  units = various
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[chem3d]
  standard_name = chem3d_mynn_pbl_transport
  long_name = mynn pbl transport of smoke and dust
  units = various
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,2)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[min_fplume]
  standard_name = minimum_fire_plume_sigma_pressure_level
  long_name = minimum model level of fire plumerise
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[max_fplume]
  standard_name = maximum_fire_plume_sigma_pressure_level
  long_name = maximum model level of fire plumerise
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[rrfs_hwp]
  standard_name = hourly_wildfire_potential
  long_name = rrfs hourly fire weather potential
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_smoke_coupling)
[ushfsfci]
  standard_name = surface_upward_sensible_heat_flux_for_chemistry_coupling
  long_name = instantaneous upward sensible heat flux for chemistry coupling
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_chemistry_coupling)
[qci_conv]
  standard_name = convective_cloud_condesate_after_rainout
  long_name = convective cloud condesate after rainout
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection)
[pfi_lsan]
  standard_name = ice_flux_due_to_large_scale_precipitation
  long_name = instantaneous 3D flux of ice from nonconvective precipitation
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_chemistry_coupling)
[pfl_lsan]
  standard_name = liquid_flux_due_to_large_scale_precipitation
  long_name = instantaneous 3D flux of liquid water from nonconvective precipitation
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_chemistry_coupling)
[htrlw]
  standard_name = updated_tendency_of_air_temperature_due_to_longwave_heating_on_physics_timestep
  long_name = total sky longwave heating rate on physics time step
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[tsfc_radtime]
  standard_name = surface_skin_temperature_on_radiation_timestep
  long_name = surface skin temperature on radiation timestep
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[fluxlwUP_jac]
  standard_name = RRTMGP_jacobian_of_lw_flux_upward
  long_name = RRTMGP Jacobian upward longwave flux profile
  units = W m-2 K-1
  dimensions = (horizontal_loop_extent,vertical_interface_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[fluxlwUP_radtime]
  standard_name = RRTMGP_lw_flux_profile_upward_allsky_on_radiation_timestep
  long_name = RRTMGP upward longwave all-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_interface_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[fluxlwDOWN_radtime]
  standard_name = RRTMGP_lw_flux_profile_downward_allsky_on_radiation_timestep
  long_name = RRTMGP downward longwave all-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_interface_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)

########################################################################
[ccpp-table-properties]
  name = GFS_control_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_control_type
  type = ddt
[me]
  standard_name = mpi_rank
  long_name = current MPI-rank
  units = index
  dimensions = ()
  type = integer
[master]
  standard_name = mpi_root
  long_name = master MPI-rank
  units = index
  dimensions = ()
  type = integer
[communicator]
  standard_name = mpi_communicator
  long_name = MPI communicator
  units = index
  dimensions = ()
  type = integer
[ntasks]
  standard_name = number_of_mpi_tasks
  long_name = number of MPI tasks in communicator
  units = count
  dimensions = ()
  type = integer
[nthreads]
  standard_name = number_of_openmp_threads
  long_name = number of OpenMP threads available for physics schemes
  units = count
  dimensions = ()
  type = integer
[nlunit]
  standard_name = iounit_of_namelist
  long_name = fortran unit number for file opens
  units = none
  dimensions = ()
  type = integer
[fhzero]
  standard_name = period_of_diagnostics_reset
  long_name = hours between clearing of diagnostic buckets
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[fn_nml]
  standard_name = filename_of_namelist
  long_name = namelist filename
  units = none
  dimensions = ()
  type = character
  kind = len=64
[input_nml_file_length]
  standard_name = number_of_lines_in_internal_namelist
  long_name = lines in namelist file for internal file reads
  units = count
  dimensions = ()
  type = integer
[input_nml_file]
  standard_name = filename_of_internal_namelist
  long_name = namelist filename for internal file reads
  units = none
  dimensions = (number_of_lines_in_internal_namelist)
  type = character
  kind = len=256
  active = (number_of_lines_in_internal_namelist > 0)
[logunit]
  standard_name = iounit_of_log
  long_name = fortran unit number for logfile
  units = none
  dimensions = ()
  type = integer
[ldiag3d]
  standard_name = flag_for_diagnostics_3D
  long_name = flag for 3d diagnostic fields
  units = flag
  dimensions = ()
  type = logical
[qdiag3d]
  standard_name = flag_for_tracer_diagnostics_3D
  long_name = flag for 3d tracer diagnostic fields
  units = flag
  dimensions = ()
  type = logical
[flag_for_gwd_generic_tend]
  standard_name = flag_for_generic_tendency_due_to_gravity_wave_drag
  long_name = true if GFS_GWD_generic should calculate tendencies
  units = flag
  dimensions = ()
  type = logical
[flag_for_pbl_generic_tend]
  standard_name = flag_for_generic_tendency_due_to_planetary_boundary_layer
  long_name = true if GFS_PBL_generic should calculate tendencies
  units = flag
  dimensions = ()
  type = logical
[flag_for_dcnv_generic_tend]
  standard_name = flag_for_generic_tendency_due_to_deep_convection
  long_name = true if GFS_DCNV_generic should calculate tendencies
  units = flag
  dimensions = ()
  type = logical
[flag_for_scnv_generic_tend]
  standard_name = flag_for_generic_tendency_due_to_shallow_convection
  long_name = true if GFS_SCNV_generic should calculate tendencies
  units = flag
  dimensions = ()
  type = logical
[lssav]
  standard_name = flag_for_diagnostics
  long_name = logical flag for storing diagnostics
  units = flag
  dimensions = ()
  type = logical
[isc]
  standard_name = starting_x_index_for_this_MPI_rank
  long_name = starting index in the x direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
[jsc]
  standard_name = starting_y_index_for_this_MPI_rank
  long_name = starting index in the y direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
[nx]
  standard_name = number_of_points_in_x_direction_for_this_MPI_rank
  long_name = number of points in x direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
[ny]
  standard_name = number_of_points_in_y_direction_for_this_MPI_rank
  long_name = number of points in y direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
[cnx]
  standard_name = number_of_x_points_for_current_cubed_sphere_tile
  long_name = number of points in x direction for this cubed sphere face
  units = count
  dimensions = ()
  type = integer
[cny]
  standard_name = number_of_y_points_for_current_cubed_sphere_tile
  long_name = number of points in y direction for this cubed sphere face
  units = count
  dimensions = ()
  type = integer
[naux2d]
  standard_name = number_of_xy_dimensioned_auxiliary_arrays
  long_name = number of 2d auxiliary arrays to output (for debugging)
  units = count
  dimensions = ()
  type = integer
[naux3d]
  standard_name = number_of_xyz_dimensioned_auxiliary_arrays
  long_name = number of 3d auxiliary arrays to output (for debugging)
  units = count
  dimensions = ()
  type = integer
[levs]
  standard_name = vertical_layer_dimension
  long_name = number of vertical levels
  units = count
  dimensions = ()
  type = integer
[ak]
  standard_name = sigma_pressure_hybrid_coordinate_a_coefficient
  long_name = a parameter for sigma pressure level calculations
  units = Pa
  dimensions = (vertical_interface_dimension)
  type = real
[bk]
  standard_name = sigma_pressure_hybrid_coordinate_b_coefficient
  long_name = b parameter for sigma pressure level calculations
  units = none
  dimensions = (vertical_interface_dimension)
  type = real
[levsp1]
  standard_name = vertical_interface_dimension
  long_name = number of vertical levels plus one
  units = count
  dimensions = ()
  type = integer
[levsm1]
  standard_name = vertical_layer_dimension_minus_one
  long_name = number of vertical levels minus one
  units = count
  dimensions = ()
  type = integer
[lonr]
  standard_name = number_of_equatorial_longitude_points
  long_name = number of global points in x-dir (i) along the equator
  units = count
  dimensions = ()
  type = integer
[latr]
  standard_name = number_of_latitude_points
  long_name = number of global points in y-dir (j) along the meridian
  units = count
  dimensions = ()
  type = integer
[nblks]
  standard_name = ccpp_block_count
  long_name = for explicit data blocking: number of blocks
  units = count
  dimensions = ()
  type = integer
[blksz]
  standard_name = ccpp_block_sizes
  long_name = for explicit data blocking: block sizes of all blocks
  units = count
  dimensions = (ccpp_block_count)
  type = integer
[blksz(ccpp_block_number)]
  standard_name = horizontal_loop_extent
  long_name = horizontal loop extent
  units = count
  dimensions = ()
  type = integer
[ncols]
  standard_name = horizontal_dimension
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
[tile_num]
  standard_name = index_of_cubed_sphere_tile
  long_name = tile number
  units = none
  dimensions = ()
  type = integer
[cplflx]
  standard_name = flag_for_surface_flux_coupling
  long_name = flag controlling cplflx collection (default off)
  units = flag
  dimensions = ()
  type = logical
[cplice]
  standard_name = flag_for_sea_ice_coupling
  long_name = flag controlling cplice collection (default on)
  units = flag
  dimensions = ()
  type = logical
[cplocn2atm]
  standard_name = flag_for_one_way_ocean_coupling_to_atmosphere
  long_name = flag controlling ocean coupling to the atmosphere (default on)
  units = flag
  dimensions = ()
  type = logical
[cplwav]
  standard_name = flag_for_ocean_wave_coupling
  long_name = flag controlling cplwav collection (default off)
  units = flag
  dimensions = ()
  type = logical
[cplwav2atm]
  standard_name = flag_for_one_way_ocean_wave_coupling_to_atmosphere
  long_name = flag controlling ocean wave coupling to the atmosphere (default off)
  units = flag
  dimensions = ()
  type = logical
[cplaqm]
  standard_name = flag_for_air_quality_coupling
  long_name = flag controlling cplaqm collection (default off)
  units = flag
  dimensions = ()
  type = logical
[cplchm]
  standard_name = flag_for_chemistry_coupling
  long_name = flag controlling cplchm collection (default off)
  units = flag
  dimensions = ()
  type = logical
[rrfs_smoke]
  standard_name = do_smoke_coupling
  long_name = flag controlling rrfs_smoke collection (default off)
  units = flag
  dimensions = ()
  type = logical
[dust_smoke_rrtmg_band_number]
  standard_name = index_of_shortwave_band_affected_by_smoke
  long_name = rrtmg band number that smoke and dust should affect
  units = count
  dimensions = ()
  type = integer
[cpl_imp_mrg]
  standard_name = flag_for_merging_imported_data
  long_name = flag controlling cpl_imp_mrg for imported data (default off)
  units = flag
  dimensions = ()
  type = logical
[cpl_imp_dbg]
  standard_name = flag_for_debugging_merged_imported_data
  long_name = flag controlling cpl_imp_dbg for imported data (default off)
  units = flag
  dimensions = ()
  type = logical
[use_cice_alb]
 standard_name = flag_for_cice_albedo
 long_name = flag for using ice albedos form CICE when coupled (default false)
  units = flag
  dimensions = ()
  type = logical
[lsidea]
  standard_name = flag_for_integrated_dynamics_through_earths_atmosphere
  long_name = flag for idealized physics
  units = flag
  dimensions = ()
  type = logical
[use_med_flux]
  standard_name = do_mediator_atmosphere_ocean_fluxes
  long_name = flag for using atmosphere-ocean fluxes form mediator (default false)
  units = flag
  dimensions = ()
  type = logical
[fhcyc]
  standard_name = frequency_for_surface_cycling_calls
  long_name = frequency for surface cycling calls
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[nscyc]
  standard_name = number_of_timesteps_between_surface_cycling_calls
  long_name = number of timesteps between surface cycling calls
  units = count
  dimensions = ()
  type = integer
[nszero]
  standard_name = number_of_timesteps_between_diagnostics_resetting
  long_name = number of timesteps between calls to clear diagnostic variables
  units = count
  dimensions = ()
  type = integer
[dtp]
  standard_name = timestep_for_physics
  long_name = physics timestep
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[dtf]
  standard_name = timestep_for_dynamics
  long_name = dynamics timestep
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[idat]
  standard_name = date_and_time_at_model_initialization_in_iso_order
  long_name = initialization date and time
  units = none
  dimensions = (8)
  type = integer
[idate]
  standard_name = date_and_time_at_model_initialization_in_united_states_order
  long_name = initial date with different size and ordering
  units = none
  dimensions = (4)
  type = integer
[nsswr]
  standard_name = number_of_timesteps_between_shortwave_radiation_calls
  long_name = number of timesteps between shortwave radiation calls
  units =
  dimensions = ()
  type = integer
[nslwr]
  standard_name = number_of_timesteps_between_longwave_radiation_calls
  long_name = number of timesteps between longwave radiation calls
  units =
  dimensions = ()
  type = integer
[fhswr]
  standard_name = period_of_shortwave_radiation_calls
  long_name = frequency for shortwave radiation
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[fhlwr]
  standard_name = period_of_longwave_radiation_calls
  long_name = frequency for longwave radiation
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[nhfrad]
  standard_name = number_of_timesteps_for_concurrent_radiation_and_remainder_physics_calls_after_model_initialization
  long_name = number of timesteps for radiation calls on physics timestep (coldstarts only)
  units = count
  dimensions = ()
  type = integer
[levr]
  standard_name = vertical_dimension_for_radiation
  long_name = number of vertical levels for radiation calculations
  units = count
  dimensions = ()
  type = integer
[levrp1]
  standard_name = vertical_interface_dimension_for_radiation
  long_name = number of vertical levels for radiation calculations + 1
  units = count
  dimensions = ()
  type = integer
[nfxr]
  standard_name = number_of_diagnostics_variables_for_radiation
  long_name = number of variables stored in the fluxr array
  units = count
  dimensions = ()
  type = integer
[iaerclm]
  standard_name = flag_for_aerosol_input_MG_radiation
  long_name = flag for using aerosols in Morrison-Gettelman MP_radiation
  units = flag
  dimensions = ()
  type = logical
[ntrcaer]
  standard_name = number_of_aerosol_tracers_MG
  long_name = number of aerosol tracers for Morrison Gettelman MP
  units = count
  dimensions = ()
  type = integer
[nrcm]
  standard_name = number_of_random_numbers
  long_name = second dimension of random number stream for RAS
  units = count
  dimensions = ()
  type = integer
[iflip]
  standard_name = control_for_vertical_index_direction
  long_name = iflip - is not the same as flipv
  units = flag
  dimensions = ()
  type = integer
[isol]
  standard_name = control_for_solar_constant
  long_name = use prescribed solar constant
  units = flag
  dimensions = ()
  type = integer
[ico2]
  standard_name = control_for_co2
  long_name = prescribed global mean value (old opernl)
  units = flag
  dimensions = ()
  type = integer
[ialb]
  standard_name = control_for_surface_albedo
  long_name = flag for using climatology alb, based on sfc type
  units = flag
  dimensions = ()
  type = integer
[iems]
  standard_name = control_for_surface_emissivity
  long_name = surface emissivity control flag, use fixed value of 1
  units = flag
  dimensions = ()
  type = integer
[iaer]
  standard_name = control_for_shortwave_radiation_aerosols
  long_name = default aerosol effect in sw only
  units = flag
  dimensions = ()
  type = integer
[icliq_sw]
  standard_name = control_for_shortwave_radiation_liquid_clouds
  long_name = sw optical property for liquid clouds
  units = flag
  dimensions = ()
  type = integer
[icice_sw]
  standard_name = flag_for_optical_property_for_ice_clouds_for_shortwave_radiation
  long_name = sw optical property for ice clouds
  units = flag
  dimensions = ()
  type = integer
[icliq_lw]
  standard_name = flag_for_optical_property_for_liquid_clouds_for_longwave_radiation
  long_name = lw optical property for liquid clouds
  units = flag
  dimensions = ()
  type = integer
[icice_lw]
  standard_name = flag_for_optical_property_for_ice_clouds_for_longwave_radiation
  long_name = lw optical property for ice clouds
  units = flag
  dimensions = ()
  type = integer
[iovr]
  standard_name = flag_for_cloud_overlap_method_for_radiation
  long_name = flag for cloud overlap method
  units = flag
  dimensions = ()
  type = integer
[idcor]
  standard_name = flag_for_decorrelation_length_method
  long_name = flag for decorrelation length method used in cloud overlap method (iovr)
  units = flag
  dimensions = ()
  type = integer
[ictm]
  standard_name = flag_for_initial_time_date_control
  long_name = flag for initial conditions and forcing
  units = flag
  dimensions = ()
  type = integer
[isubc_sw]
  standard_name = flag_for_sw_clouds_grid_approximation
  long_name = flag for sw clouds sub-grid approximation
  units = flag
  dimensions = ()
  type = integer
[isubc_lw]
  standard_name = flag_for_lw_clouds_sub_grid_approximation
  long_name = flag for lw clouds sub-grid approximation
  units = flag
  dimensions = ()
  type = integer
[crick_proof]
  standard_name = flag_for_CRICK_proof_cloud_water
  long_name = flag for CRICK-Proof cloud water
  units = flag
  dimensions = ()
  type = logical
[ccnorm]
  standard_name = flag_for_in_cloud_condensate
  long_name = flag for cloud condensate normalized by cloud cover
  units = flag
  dimensions = ()
  type = logical
[norad_precip]
  standard_name = flag_for_turning_off_precipitation_radiative_effect
  long_name = radiation precip flag for Ferrier/Moorthi
  units = flag
  dimensions = ()
  type = logical
[lwhtr]
  standard_name = flag_for_output_of_tendency_of_air_temperature_due_to_longwave_heating_on_radiation_timestep_assuming_clear_sky
  long_name = flag to output lw heating rate (Radtend%lwhc)
  units = flag
  dimensions = ()
  type = logical
[swhtr]
  standard_name = flag_for_output_of_tendency_of_air_temperature_due_to_shortwave_heating_on_radiation_timestep_assuming_clear_sky
  long_name = flag to output sw heating rate (Radtend%swhc)
  units = flag
  dimensions = ()
  type = logical
[active_gases]
  standard_name = active_gases_used_by_RRTMGP
  long_name = active gases used by RRTMGP
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[nGases]
  standard_name = number_of_active_gases_used_by_RRTMGP
  long_name = number of gases available used by RRTMGP (Model%nGases)
  units = count
  dimensions =  ()
  type = integer
[active_gases_array]
  standard_name = list_of_active_gases_used_by_RRTMGP
  long_name = list of active gases used by RRTMGP
  units = none
  dimensions =  (number_of_active_gases_used_by_RRTMGP)
  type = character
  kind = len=128
  active = (flag_for_rrtmgp_radiation_scheme)
[rrtmgp_root]
  standard_name = directory_for_rte_rrtmgp_source_code
  long_name = directory for rte+rrtmgp source code (Model%rrtmgp_root)
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[lw_file_gas]
  standard_name = filename_of_rrtmgp_longwave_k_distribution
  long_name = file containing RRTMGP LW k-distribution (Model%lw_file_gas)
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[lw_file_clouds]
  standard_name = filename_of_rrtmgp_longwave_cloud_optics_coefficients
  long_name = file containing coefficients for RRTMGP LW cloud optics (Model%lw_file_clouds)
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[rrtmgp_nBandsLW]
  standard_name = number_of_longwave_bands
  long_name = number of lw bands used in RRTMGP (Model%rrtmgp_nBandsLW)
  units = count
  dimensions =  ()
  type = integer
[rrtmgp_nGptsLW]
  standard_name = number_of_longwave_spectral_points
  long_name = number of spectral points in RRTMGP LW calculation (model%rrtmgp_nGptsLW)
  units = count
  dimensions =  ()
  type = integer
[sw_file_gas]
  standard_name = filename_of_rrtmgp_shortwave_k_distribution
  long_name = file containing RRTMGP SW k-distribution (Model%sw_file_gas)
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[sw_file_clouds]
  standard_name = filename_of_rrtmgp_shortwave_cloud_optics_coefficients
  long_name = file containing coefficients for RRTMGP SW cloud optics (Model%sw_file_clouds)
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[rrtmgp_nBandsSW]
  standard_name = number_of_shortwave_bands
  long_name = number of sw bands used in RRTMGP (Model%rrtmgp_nBandsSW)
  units = count
  dimensions =  ()
  type = integer
[rrtmgp_nGptsSW]
  standard_name = number_of_shortwave_spectral_points
  long_name = number of spectral points in RRTMGP SW calculation (model%rrtmgp_nGptsSW)
  units = count
  dimensions =  ()
  type = integer
[doG_cldoptics]
  standard_name = flag_to_calc_lw_cld_optics_using_RRTMG
  long_name = logical flag to control cloud optics scheme.
  units = flag
  dimensions = ()
  type = logical
[doGP_cldoptics_PADE]
  standard_name = flag_to_calc_lw_cld_optics_using_RRTMGP_PADE
  long_name = logical flag to control cloud optics scheme.
  units = flag
  dimensions = ()
  type = logical
[doGP_cldoptics_LUT]
  standard_name = flag_to_calc_lw_cld_optics_using_RRTMGP_LUT
  long_name = logical flag to control cloud optics scheme.
  units = flag
  dimensions = ()
  type = logical
[use_LW_jacobian]
  standard_name = flag_to_calc_RRTMGP_LW_jacobian
  long_name = logical flag to control RRTMGP LW calculation
  units = flag
  dimensions = ()
  type = logical
[damp_LW_fluxadj]
  standard_name = flag_to_damp_RRTMGP_LW_jacobian_flux_adjustment
  long_name = logical flag to control RRTMGP LW calculation
  units = flag
  dimensions = ()
  type = logical
[lfnc_k]
  standard_name = transition_pressure_length_scale_for_flux_damping
  long_name = depth of transition layer	in logistic function for LW flux adjustment damping
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[lfnc_p0]
  standard_name = transition_pressure_for_flux_damping
  long_name = transition pressure for LW flux adjustment damping
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[doGP_lwscat]
  standard_name = flag_to_include_longwave_scattering_in_cloud_optics
  long_name = logical flag to control the addition of LW scattering in RRTMGP
  units = flag
  dimensions = ()
  type = logical
[doGP_sgs_cnv]
  standard_name = flag_to_include_sgs_convective_cloud_in_RRTMGP
  long_name = logical flag to control sgs convective cloud in RRTMGP
  units = flag
  dimensions = ()
  type = logical
[doGP_sgs_mynn]
  standard_name = flag_to_include_sgs_MYNN_EDMF_cloud_in_RRTMGP
  long_name = logical flag to control MYNN-EDMF PBL cloud in RRTMGP
  units = flag
  dimensions = ()
  type = logical
[iovr_convcld]
  standard_name = flag_for_convective_cloud_overlap_method_for_radiation
  long_name = flag for convective cloud overlap method
  units = flag
  dimensions = ()
  type = integer
[rrtmgp_nrghice]
  standard_name = number_of_ice_roughness_categories
  long_name = number of ice-roughness categories in RRTMGP calculation (Model%rrtmgp_nrghice)
  units = count
  dimensions =  ()
  type = integer
[rrtmgp_nGauss_ang]
  standard_name = number_of_gaussian_quadrature_angles_for_radiation
  long_name = Number of angles used in Gaussian quadrature
  units = count
  dimensions =  ()
  type = integer
[do_RRTMGP]
  standard_name = flag_for_rrtmgp_radiation_scheme
  long_name = flag for RRTMGP scheme
  units = flag
  dimensions =  ()
  type = logical
[do_GPsw_Glw]
  standard_name = flag_for_rrtmgp_shortwave_and_rrtmg_longwave_radiation
  long_name = When true GP is used for SW calculation and G is used for LW calculation
  units = flag
  dimensions =  ()
  type = logical
[minGPpres]
  standard_name = minimum_pressure_in_RRTMGP
  long_name = minimum pressure allowed in RRTMGP
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[maxGPpres]
  standard_name = maximum_pressure_in_RRTMGP
  long_name = maximum pressure allowed in RRTMGP
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[minGPtemp]
  standard_name = minimum_temperature_in_RRTMGP
  long_name = minimum temperature allowed in RRTMGP
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[maxGPtemp]
  standard_name = maximum_temperature_in_RRTMGP
  long_name = maximum temperature allowed in RRTMGP
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[top_at_1]
  standard_name = flag_for_vertical_ordering_in_RRTMGP
  long_name = flag for vertical ordering in RRTMGP
  units = flag
  dimensions = ()
  type = logical
[iSFC]
  standard_name = vertical_index_for_surface_in_RRTMGP
  long_name = index for surface layer in RRTMGP
  units = flag
  dimensions = ()
  type = integer
[iTOA]
  standard_name = vertical_index_for_TOA_in_RRTMGP
  long_name = index for TOA layer in RRTMGP
  units = flag
  dimensions = ()
  type = integer
[convert_dry_rho]
  standard_name = flag_for_converting_hydrometeors_from_moist_to_dry_air
  long_name = flag for converting hydrometeors from moist to dry air
  units = flag
  dimensions = ()
  type = logical
[imp_physics]
  standard_name = control_for_microphysics_scheme
  long_name = choice of microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_fer_hires]
  standard_name = identifier_for_fer_hires_microphysics_scheme
  long_name = choice of Ferrier-Aligo microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_gfdl]
  standard_name = identifier_for_gfdl_microphysics_scheme
  long_name = choice of GFDL microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_thompson]
  standard_name = identifier_for_thompson_microphysics_scheme
  long_name = choice of Thompson microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_wsm6]
  standard_name = identifier_for_wsm6_microphysics_scheme
  long_name = choice of WSM6 microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_zhao_carr]
  standard_name = identifier_for_zhao_carr_microphysics_scheme
  long_name = choice of Zhao-Carr microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_zhao_carr_pdf]
  standard_name = identifier_for_zhao_carr_pdf_microphysics_scheme
  long_name = choice of Zhao-Carr microphysics scheme with PDF clouds
  units = flag
  dimensions = ()
  type = integer
[imp_physics_mg]
  standard_name = identifier_for_morrison_gettelman_microphysics_scheme
  long_name = choice of Morrison-Gettelman microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_nssl]
  standard_name = identifier_for_nssl_microphysics_scheme
  long_name = choice of NSSL 2-moment microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_nssl2mccn]
  standard_name = identifier_for_nssl2mccn_microphysics_scheme
  long_name = choice of NSSL 2-moment microphysics scheme with CCN
  units = flag
  dimensions = ()
  type = integer
[iovr_exp]
  standard_name = flag_for_exponential_cloud_overlap_method
  long_name = choice of exponential cloud overlap method
  units         = flag
  dimensions = ()
  type = integer
[iovr_exprand]
  standard_name = flag_for_exponential_random_cloud_overlap_method
  long_name = choice of exponential-random cloud overlap method
  units     = flag
  dimensions = ()
  type = integer
[iovr_max]
  standard_name = flag_for_maximum_cloud_overlap_method
  long_name = choice of maximum cloud overlap method
  units = flag
  dimensions = ()
  type = integer
[iovr_rand]
  standard_name = flag_for_random_cloud_overlap_method
  long_name = choice of random cloud overlap method
  units = flag
  dimensions = ()
  type = integer
[iovr_maxrand]
  standard_name = flag_for_maximum_random_cloud_overlap_method
  long_name = choice of maximum-random cloud overlap method
  units = flag
  dimensions = ()
  type = integer
[iovr_dcorr]
  standard_name = flag_for_decorrelation_length_cloud_overlap_method
  long_name = choice of decorrelation-length cloud overlap method
  units         = flag
  dimensions = ()
  type = integer
[idcor_con]
  standard_name = flag_for_constant_decorrelation_length_method
  long_name = choice of decorrelation length computation (costant)
  units = flag
  dimensions = ()
  type = integer
[idcor_hogan]
  standard_name = flag_for_hogan_decorrelation_length_method
  long_name = choice of decorrelation length computation (hogan)
  units = flag
  dimensions = ()
  type = integer
[idcor_oreopoulos]
  standard_name = flag_for_oreopoulos_decorrelation_length_method
  long_name = choice of decorrelation length computation (oreopoulos)
  units = flag
  dimensions = ()
  type = integer
[dcorr_con]
  standard_name = decorrelation_length_used_by_overlap_method
  long_name = decorrelation length (default) used by cloud overlap method (iovr)
  units = km
  dimensions = ()
  type = real
[psautco]
  standard_name = autoconversion_to_snow_coefficient
  long_name = auto conversion coeff from ice to snow
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[prautco]
  standard_name = autoconversion_to_rain_coefficient
  long_name = auto conversion coeff from cloud to rain
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[psauras]
  standard_name = autoconversion_to_snow_coefficient_for_deep_convection
  long_name = conversion coefficient from cloud ice to snow in ras
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[prauras]
  standard_name = autoconversion_to_rain_coefficient_for_deep_convection
  long_name = conversion coefficient from cloud water to rain in ras
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[evpco]
  standard_name = precipitation_evaporation_coefficient
  long_name = coeff for evaporation of largescale rain
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[wminco]
  standard_name = cloud_condensate_autoconversion_threshold_coefficient
  long_name = water and ice minimum threshold for Zhao
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[wminras]
  standard_name = cloud_condensate_autoconversion_threshold_coefficient_for_deep_convection
  long_name = conversion coefficient from cloud liquid and ice to precipitation in ras
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[seed0]
  standard_name = seed_random_numbers_RAS
  long_name = random number seed for the RAS scheme
  units = none
  dimensions = ()
  type = integer
[dlqf]
  standard_name = cloud_condensate_detrainment_coefficient
  long_name = condensate fraction detrained with in a updraft layers
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[avg_max_length]
  standard_name = period_of_maximum_diagnostics_reset
  long_name = reset time interval for maximum hourly fields
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[fprcp]
  standard_name = number_of_frozen_precipitation_species
  long_name = number of frozen precipitation species
  units = count
  dimensions = ()
  type = integer
[pdfflag]
  standard_name = control_for_pdf_shape_for_microphysics
  long_name = pdf flag for MG macrophysics
  units = flag
  dimensions = ()
  type = integer
[mg_dcs]
  standard_name = autoconverion_to_snow_size_threshold
  long_name = autoconversion size threshold for cloud ice to snow for MG microphysics
  units = um
  dimensions = ()
  type = real
  kind = kind_phys
[mg_qcvar]
  standard_name = relative_variance_of_subgrid_cloud_condensate_distribution
  long_name = cloud water relative variance for MG microphysics
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[mg_ts_auto_ice]
  standard_name = timescale_for_autoconversion_to_snow
  long_name = autoconversion time scale for ice for MG microphysics
  units = s
  dimensions = (2)
  type = real
  kind = kind_phys
[mg_rhmini]
  standard_name = relative_humidity_threshold_for_ice_nucleation
  long_name = relative humidity threshold parameter for nucleating ice for MG microphysics
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[mg_ncnst]
  standard_name = prescribed_cloud_droplet_number_concentration
  long_name = droplet concentration constant for MG microphysics
  units = m-3
  dimensions = ()
  type = real
  kind = kind_phys
[mg_ninst]
  standard_name = prescribed_cloud_ice_number_concentration
  long_name = ice concentration constant for MG microphysics
  units = m-3
  dimensions = ()
  type = real
  kind = kind_phys
[mg_ngnst]
  standard_name = prescribed_graupel_number_concentration
  long_name = graupel concentration constant for MG microphysics
  units = m-3
  dimensions = ()
  type = real
  kind = kind_phys
[mg_berg_eff_factor]
  standard_name = bergeron_findeisen_process_efficiency_factor
  long_name = bergeron efficiency factor for MG microphysics
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[mg_alf]
  standard_name = alpha_tuning_coefficient_for_morrison_gettelman_microphysics_scheme
  long_name = tuning factor for alphas (alpha = 1 - critical relative humidity)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[mg_qcmin]
  standard_name = minimum_cloud_condensate_mixing_ratio_threshold
  long_name = minimum cloud condensed water and ice mixing ratio in MG macro clouds
  units = kg kg-1
  dimensions = (2)
  type = real
  kind = kind_phys
[mg_qcmin(1)]
  standard_name = minimum_cloud_liquid_water_mixing_ratio_threshold
  long_name = minimum cloud condensed water mixing ratio in MG macro clouds
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[mg_qcmin(2)]
  standard_name = minimum_cloud_ice_mixing_ratio_threshold
  long_name = minimum ice mixing ratio in MG macro clouds
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[mg_precip_frac_method]
  standard_name = control_for_precipitation_area_fraction_method
  long_name = type of precip fraction method for MG microphysics (in_cloud or max_overlap)
  units = none
  dimensions = ()
  type = character
  kind = len=16
[nssl_cccn]
  standard_name = nssl_ccn_concentration
  long_name = CCN concentration
  units = m-3
  dimensions = ()
  type = real
  kind = kind_phys
[nssl_alphah]
  standard_name = nssl_alpha_graupel
  long_name = graupel PSD shape parameter in NSSL micro
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[nssl_alphahl]
  standard_name = nssl_alpha_hail
  long_name = hail PSD shape parameter in NSSL micro
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[nssl_ccn_on]
  standard_name = nssl_ccn_on
  long_name = CCN activation flag in NSSL micro
  units = flag
  dimensions = ()
  type = logical
[nssl_hail_on]
  standard_name = nssl_hail_on
  long_name = hail activation flag in NSSL micro
  units = flag
  dimensions = ()
  type = logical
[nssl_invertccn]
  standard_name = nssl_invertccn
  long_name = flag to invert CCN in NSSL micro
  units = flag
  dimensions = ()
  type = logical
[tf]
  standard_name = all_ice_cloud_threshold_temperature
  long_name = threshold temperature below which all cloud is ice
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[tcr]
  standard_name = cloud_phase_transition_threshold_temperature
  long_name = threshold temperature below which cloud starts to freeze
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[tcrf]
  standard_name = reciprocal_of_cloud_phase_transition_temperature_range
  long_name = denominator in cloud phase transition = 1/(tcr-tf)
  units = K-1
  dimensions = ()
  type = real
  kind = kind_phys
[num_dfi_radar]
  standard_name = number_of_radar_derived_temperature_or_convection_suppression_intervals
  long_name = number of time ranges with radar-derived microphysics temperature tendencies or radar-derived convection suppression
  units = count
  dimensions = ()
  type = integer
[dfi_radar_max_intervals]
  standard_name = maximum_number_of_radar_derived_temperature_or_convection_suppression_intervals
  long_name = maximum allowed number of time ranges with radar-derived microphysics temperature tendencies or radar-derived convection suppression
  units = count
  dimensions = ()
  type = integer
[dfi_radar_max_intervals_plus_one]
  standard_name = maximum_number_of_radar_derived_temperature_or_convection_suppression_intervals_plus_one
  long_name = one more than the maximum allowed number of time ranges with radar-derived microphysics temperature tendencies or radar-derived convection suppression
  units = count
  dimensions = ()
  type = integer
[effr_in]
  standard_name = flag_for_cloud_effective_radii
  long_name = flag for cloud effective radii calculations in GFDL microphysics
  units = flag
  dimensions = ()
  type = logical
[microp_uniform]
  standard_name = flag_for_uniform_subcolumns
  long_name = flag for uniform subcolumns for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[do_cldice]
  standard_name = flag_for_cloud_ice_processes
  long_name = flag for cloud ice processes for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[hetfrz_classnuc]
  standard_name = flag_for_heterogeneous_nucleation
  long_name = flag for heterogeneous freezing for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[mg_nccons]
  standard_name = flag_for_prescribed_cloud_droplet_number_concentration
  long_name = flag for constant droplet concentration for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[mg_nicons]
  standard_name = flag_for_prescribed_cloud_ice_number_concentration
  long_name = flag for constant ice concentration for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[mg_ngcons]
  standard_name = flag_for_prescribed_graupel_number_concentration
  long_name = flag for constant graupel concentration for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[sed_supersat]
  standard_name = flag_for_allowance_of_supersaturation_after_sedimentation
  long_name = allow supersaturation after sedimentation for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[do_sb_physics]
  standard_name = flag_for_seifert_and_beheng_2001_autoconversion
  long_name = flag for SB 2001 autoconversion or accretion for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[mg_do_graupel]
  standard_name = flag_for_graupel_instead_of_hail
  long_name = flag for graupel for MG microphysics (hail possible if false)
  units = flag
  dimensions = ()
  type = logical
[mg_do_hail]
  standard_name = flag_for_hail_instead_of_graupel
  long_name = flag for hail for MG microphysics (graupel possible if false)
  units = flag
  dimensions = ()
  type = logical
[mg_do_ice_gmao]
  standard_name = flag_for_gmao_autoconversion_to_snow
  long_name = flag for gmao ice formulation
  units = flag
  dimensions = ()
  type = logical
[mg_do_liq_liu]
  standard_name = flag_for_liu_autoconversion_to_rain
  long_name = flag for liu liquid treatment
  units = flag
  dimensions = ()
  type = logical
[radar_tten_limits]
  standard_name = allowed_bounds_of_radar_prescribed_tendencies
  long_name = allowed bounds of prescribed microphysics temperature tendencies
  units = K s-1
  dimensions = (2)
  type = real
  kind = kind_phys
[do_cap_suppress]
  standard_name = flag_for_radar_derived_convection_suppression
  long_name = flag for radar-derived convection suppression
  units = flag
  dimensions = ()
  type = logical
[fh_dfi_radar]
  standard_name = forecast_lead_times_bounding_radar_derived_temperature_or_convection_suppression_intervals
  long_name = forecast lead times bounding radar derived temperature or convection suppression intervals
  units = h
  dimensions = (maximum_number_of_radar_derived_temperature_or_convection_suppression_intervals_plus_one)
  type = real
  kind = kind_phys
[ix_dfi_radar]
  standard_name = indices_with_radar_derived_temperature_or_convection_suppression_data
  long_name = indices with radar derived temperature or convection suppression data
  units = index
  dimensions = (maximum_number_of_radar_derived_temperature_or_convection_suppression_intervals)
  type = integer
[shoc_parm(1)]
  standard_name = pressure_threshold_for_increased_tke_dissipation
  long_name = pressure below which extra TKE diss. is applied in SHOC
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[shoc_parm(2)]
  standard_name = multiplicative_tunable_parameter_for_tke_dissipation
  long_name = mult. tuning parameter for TKE diss. in SHOC
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[shoc_parm(3)]
  standard_name = multiplicative_tunable_parameter_for_tke_dissipation_at_surface_adjacent_layer
  long_name = mult. tuning parameter for TKE diss. at surface in SHOC
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[shoc_parm(4)]
  standard_name = shoc_implicit_TKE_integration_uncentering_term
  long_name = uncentering term for TKE integration in SHOC
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[shoc_parm(5)]
  standard_name = shoc_flag_for_optional_surface_TKE_dissipation
  long_name = flag for alt. TKE diss. near surface in SHOC (>0 = ON)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[ncnd]
  standard_name = number_of_condensate_species
  long_name = number of cloud condensate types
  units = count
  dimensions = ()
  type = integer
[ltaerosol]
  standard_name = flag_for_aerosol_physics
  long_name = flag for aerosol physics
  units = flag
  dimensions = ()
  type = logical
[lradar]
  standard_name = flag_for_radar_reflectivity
  long_name = flag for radar reflectivity
  units = flag
  dimensions = ()
  type = logical
[ttendlim]
  standard_name = max_tendency_of_air_potential_temperature_due_to_large_scale_precipitation
  long_name = temperature tendency limiter per physics time step
  units = K s-1
  dimensions = ()
  type = real
  kind = kind_phys
[ext_diag_thompson]
  standard_name = flag_for_extended_diagnostic_output_from_thompson_microphysics
  long_name = flag for extended diagnostic output from thompson microphysics
  units = flag
  dimensions = ()
  type = logical
[thompson_ext_ndiag3d]
  standard_name = number_of_3d_diagnostic_output_arrays_from_thompson_microphysics
  long_name = number of 3d arrays for extended diagnostic output from thompson microphysics
  units = count
  dimensions = ()
  type = integer
[dt_inner]
  standard_name = time_step_for_inner_loop
  long_name = time step for inner loop
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[sedi_semi]
  standard_name = flag_for_semi_Lagrangian_sedi_rain
  long_name = flag for semi Lagrangian sedi of rain
  units = flag
  dimensions = ()
  type = logical
[decfl]
  standard_name = deformed_CFL_factor
  long_name = deformed CFL factor
  units = count
  dimensions = ()
  type = integer
[lgfdlmprad]
  standard_name = flag_for_GFDL_microphysics_radiation_interaction
  long_name = flag for GFDL microphysics-radiation interaction
  units = flag
  dimensions = ()
  type = logical
[lsm]
  standard_name = control_for_land_surface_scheme
  long_name = flag for land surface model
  units = flag
  dimensions = ()
  type = integer
[lsm_noah]
  standard_name = identifier_for_noah_land_surface_scheme
  long_name = flag for NOAH land surface model
  units = flag
  dimensions = ()
  type = integer
[lsm_noahmp]
  standard_name = identifier_for_noahmp_land_surface_scheme
  long_name = flag for NOAH MP land surface model
  units = flag
  dimensions = ()
  type = integer
[lsm_ruc]
  standard_name = identifier_for_ruc_land_surface_scheme
  long_name = flag for RUC land surface model
  units = flag
  dimensions = ()
  type = integer
[kice]
  standard_name = vertical_dimension_of_sea_ice
  long_name = vertical loop extent for ice levels, start at 1
  units = count
  dimensions = ()
  type = integer
[lsoil]
  standard_name = vertical_dimension_of_soil
  long_name = number of soil layers
  units = count
  dimensions = ()
  type = integer
[lsoil_lsm]
  standard_name = vertical_dimension_of_soil_internal_to_land_surface_scheme
  long_name = number of soil layers internal to land surface model
  units = count
  dimensions = ()
  type = integer
[lsnow_lsm]
  standard_name = vertical_dimension_of_surface_snow
  long_name = maximum number of snow layers for land surface model
  units = count
  dimensions = ()
  type = integer
[lsnow_lsm_lbound]
  standard_name = lower_bound_of_vertical_dimension_of_surface_snow
  long_name = lower bound of of snow-related arrays for land surface model
  units = count
  dimensions = ()
  type = integer
[lsnow_lsm_ubound]
  standard_name = upper_bound_of_vertical_dimension_of_surface_snow
  long_name = upper bound of of snow-related arrays for land surface model
  units = count
  dimensions = ()
  type = integer
[zs]
  standard_name = depth_of_soil_layers
  long_name = depth of soil levels for land surface model
  units = m
  dimensions = (vertical_dimension_of_soil_internal_to_land_surface_scheme)
  type = real
  kind = kind_phys
[dzs]
  standard_name = thickness_of_soil_layers_for_land_surface_model
  long_name = thickness of soil levels for land surface model
  units = m
  dimensions = (vertical_dimension_of_soil_internal_to_land_surface_scheme)
  type = real
  kind = kind_phys
[pores]
  standard_name = maximum_soil_moisture_content_for_land_surface_model
  long_name = maximum soil moisture for a given soil type for land surface model
  units = m
  dimensions = (30)
  type = real
  kind = kind_phys
[resid]
  standard_name = minimum_soil_moisture_content_for_land_surface_model
  long_name = minimum soil moisture for a given soil type for land surface model
  units = m
  dimensions = (30)
  type = real
  kind = kind_phys
[rdlai]
  standard_name = flag_for_reading_leaf_area_index_from_input
  long_name = flag for reading leaf area index from initial conditions
  units = flag
  dimensions = ()
  type = logical
[ua_phys]
  standard_name = flag_for_noah_lsm_ua_extension
  long_name = flag for using University of Arizona(?) extension for NOAH LSM WRFv4 (see module_sf_noahlsm.F)
  units = flag
  dimensions = ()
  type = logical
[usemonalb]
  standard_name = flag_for_reading_surface_albedo_for_diffused_shortwave_from_input
  long_name = flag for reading surface diffused shortwave albedo for NOAH LSM WRFv4 (see module_sf_noahlsm.F)
  units = flag
  dimensions = ()
  type = logical
[aoasis]
  standard_name = multiplicative_tuning_parameter_for_potential_evaporation
  long_name = potential evaporation multiplicative factor for NOAH LSM WRFv4 (see module_sf_noahlsm.F)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[fasdas]
  standard_name = control_for_flux_adjusting_surface_data_assimilation_system
  long_name = flag to use the flux adjusting surface data assimilation system for NOAH LSM WRFv4 (see module_sf_noahlsm.F)
  units = flag
  dimensions = ()
  type = integer
[ivegsrc]
  standard_name = control_for_vegetation_dataset
  long_name = land use dataset choice
  units = index
  dimensions = ()
  type = integer
[isot]
  standard_name = control_for_soil_type_dataset
  long_name = soil type dataset choice
  units = index
  dimensions = ()
  type = integer
[iopt_thcnd]
  standard_name = control_for_land_surface_scheme_thermal_conductivity_option
  long_name = choice for thermal conductivity option (see module_sf_noahlsm)
  units = index
  dimensions = ()
  type = integer
[spec_adv]
  standard_name = flag_for_separate_advection_of_condensate_species
  long_name = flag for individual cloud species advected
  units = flag
  dimensions = ()
  type = logical
[flgmin]
  standard_name = minimum_large_ice_fraction
  long_name = minimum large ice fraction in F-A mp scheme
  units = frac
  dimensions = (2)
  type = real
  kind = kind_phys
[iopt_dveg]
  standard_name = control_for_land_surface_scheme_dynamic_vegetation
  long_name = choice for dynamic vegetation option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_crs]
  standard_name = control_for_land_surface_scheme_canopy_stomatal_resistance
  long_name = choice for canopy stomatal resistance option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_btr]
  standard_name = control_for_land_surface_scheme_soil_moisture_factor_stomatal_resistance
  long_name = choice for soil moisture factor for canopy stomatal resistance option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_run]
  standard_name = control_for_land_surface_scheme_runoff_and_groundwater
  long_name = choice for runoff and groundwater option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_sfc]
  standard_name = control_for_land_surface_scheme_surface_layer_drag_coefficient
  long_name = choice for surface layer drag coefficient option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_frz]
  standard_name = control_for_land_surface_scheme_supercooled_liquid_water
  long_name = choice for supercooled liquid water option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_inf]
  standard_name = control_for_land_surface_scheme_frozen_soil_permeability
  long_name = choice for frozen soil permeability option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_rad]
  standard_name = control_for_land_surface_scheme_radiative_transfer
  long_name = choice for radiation transfer option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_alb]
  standard_name = control_for_land_surface_scheme_surface_snow_albedo
  long_name = choice for ground snow surface albedo option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_snf]
  standard_name = control_for_land_surface_scheme_precipitation_type_partition
  long_name = choice for precipitation partition option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_tbot]
  standard_name = control_for_land_surface_scheme_lower_boundary_soil_temperature
  long_name = choice for lower boundary soil temperature option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_stc]
  standard_name = control_for_land_surface_scheme_soil_and_snow_temperature_time_integration
  long_name = choice for soil and snow temperature time stepping option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_trs]
  standard_name = control_for_land_surface_scheme_surface_thermal_roughness
  long_name = choice for surface thermal roughness option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[use_ufo]
  standard_name = flag_for_gcycle_surface_option
  long_name = flag for gcycle surface option
  units = flag
  dimensions = ()
  type = logical
[lcurr_sf]
  standard_name = flag_for_surface_layer_scheme_ocean_currents
  long_name = flag for taking ocean currents into account in surface layer scheme
  units = flag
  dimensions = ()
  type = logical
[pert_cd]
  standard_name = flag_for_surface_layer_scheme_surface_drag_coefficient_for_momentum_in_air_perturbations
  long_name = flag for perturbing the surface drag coefficient for momentum in surface layer scheme
  units = flag
  dimensions = ()
  type = logical
[ntsflg]
  standard_name = control_for_surface_layer_scheme_skin_temperature_update
  long_name = flag for updating skin temperature in the surface layer scheme
  units = flag
  dimensions = ()
  type = integer
[sfenth]
  standard_name = surface_layer_scheme_enthalpy_flux_factor
  long_name = enthalpy flux factor used in surface layer scheme
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[lkm]
  standard_name = control_for_lake_surface_scheme
  long_name = flag for lake surface model
  units = flag
  dimensions = ()
  type = integer
[ras]
  standard_name = flag_for_relaxed_arakawa_schubert_deep_convection
  long_name = flag for ras convection scheme
  units = flag
  dimensions = ()
  type = logical
[rhgrd]
  standard_name = relative_humidity_threshold_for_condensation
  long_name = relative humidity threshold parameter for condensation for FA scheme
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[flipv]
  standard_name = flag_flip
  long_name = vertical flip logical
  units = flag
  dimensions = ()
  type = logical
[trans_trac]
  standard_name = flag_for_convective_transport_of_tracers
  long_name = flag for convective transport of tracers
  units = flag
  dimensions = ()
  type = logical
[old_monin]
  standard_name = flag_for_old_PBL_scheme
  long_name = flag for using old PBL schemes
  units = flag
  dimensions = ()
  type = logical
[mstrat]
  standard_name = flag_for_moorthi_stratus
  long_name = flag for moorthi approach for stratus
  units = flag
  dimensions = ()
  type = logical
[cscnv]
  standard_name = flag_for_Chikira_Sugiyama_deep_convection
  long_name = flag for Chikira-Sugiyama convection
  units = flag
  dimensions = ()
  type = logical
[satmedmf]
  standard_name = flag_for_scale_aware_TKE_moist_EDMF_PBL
  long_name = flag for scale-aware TKE moist EDMF PBL scheme
  units = flag
  dimensions = ()
  type = logical
[shinhong]
  standard_name = flag_for_scale_aware_Shinhong_PBL
  long_name = flag for scale-aware Shinhong PBL scheme
  units = flag
  dimensions = ()
  type = logical
[do_ysu]
  standard_name = flag_for_ysu_pbl_scheme
  long_name = flag for YSU PBL scheme
  units = flag
  dimensions = ()
  type = logical
[cal_pre]
  standard_name = flag_for_dominant_precipitation_type_partition
  long_name = flag controls precip type algorithm
  units = flag
  dimensions = ()
  type = logical
[do_aw]
  standard_name = flag_for_Arakawa_Wu_adjustment
  long_name = flag for Arakawa Wu scale-aware adjustment
  units = flag
  dimensions = ()
  type = logical
[do_awdd]
  standard_name = flag_for_arakawa_wu_downdrafts_for_deep_convection
  long_name = AW scale-aware option in cs convection downdraft
  units = flag
  dimensions = ()
  type = logical
[flx_form]
  standard_name = flag_flux_form_CS
  long_name = enable use of flux form of equations in CS scheme
  units = flag
  dimensions = ()
  type = logical
[do_shoc]
  standard_name = flag_for_shoc
  long_name = flag for SHOC
  units = flag
  dimensions = ()
  type = logical
[shocaftcnv]
  standard_name = flag_for_shoc_after_convection
  long_name = flag to execute SHOC after convection
  units = flag
  dimensions = ()
  type = logical
[oz_phys]
  standard_name = flag_for_nrl_2006_ozone_scheme
  long_name = flag for old (2006) ozone physics
  units = flag
  dimensions = ()
  type = logical
[oz_phys_2015]
  standard_name = flag_for_nrl_2015_ozone_scheme
  long_name = flag for new (2015) ozone physics
  units = flag
  dimensions = ()
  type = logical
[h2o_phys]
  standard_name = flag_for_stratospheric_water_vapor_physics
  long_name = flag for stratospheric water vapor physics
  units = flag
  dimensions = ()
  type = logical
[shcnvcw]
  standard_name = flag_for_saving_shallow_convective_cloud_area_fraction
  long_name = flag for shallow convective cloud
  units =
  dimensions = ()
  type = logical
[redrag]
  standard_name = flag_for_limited_surface_roughness_length_over_ocean
  long_name = flag for reduced drag coeff. over sea
  units = flag
  dimensions = ()
  type = logical
[thsfc_loc]
  standard_name = flag_for_reference_pressure_theta
  long_name = flag for reference pressure in theta calculation
  units = flag
  dimensions = ()
  type = logical
[hybedmf]
  standard_name = flag_for_hybrid_edmf_pbl_scheme
  long_name = flag for hybrid edmf pbl scheme (moninedmf)
  units = flag
  dimensions = ()
  type = logical
[dspheat]
  standard_name = flag_TKE_dissipation_heating
  long_name = flag for tke dissipative heating
  units = flag
  dimensions = ()
  type = logical
[hurr_pbl]
  standard_name = flag_hurricane_PBL
  long_name = flag for hurricane-specific options in PBL scheme
  units = flag
  dimensions = ()
  type = logical
[lheatstrg]
  standard_name = flag_for_canopy_heat_storage_in_land_surface_scheme
  long_name = flag for canopy heat storage parameterization
  units = flag
  dimensions = ()
  type = logical
[lseaspray]
  standard_name = flag_for_sea_spray
  long_name = flag for sea spray parameterization
  units = flag
  dimensions = ()
  type = logical
[random_clds]
  standard_name = flag_for_random_clouds_for_RAS
  long_name = flag for using random clouds with the RAS scheme
  units = flag
  dimensions = ()
  type = logical
[shal_cnv]
  standard_name = flag_for_simplified_arakawa_schubert_shallow_convection
  long_name = flag for calling shallow convection
  units = flag
  dimensions = ()
  type = logical
[imfshalcnv]
  standard_name = control_for_shallow_convection_scheme
  long_name = flag for mass-flux shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfshalcnv_sas]
  standard_name = identifier_for_simplified_arakawa_schubert_shallow_convection
  long_name = flag for SAS shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfshalcnv_samf]
  standard_name = identifier_for_scale_aware_mass_flux_shallow_convection
  long_name = flag for SAMF shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfshalcnv_gf]
  standard_name = identifier_for_grell_freitas_shallow_convection
  long_name = flag for Grell-Freitas shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfshalcnv_ntiedtke]
  standard_name = identifier_for_new_tiedtke_shallow_convection
  long_name = flag for new Tiedtke shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv]
  standard_name = control_for_deep_convection_scheme
  long_name = flag for mass-flux deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv_sas]
  standard_name = identifier_for_simplified_arakawa_schubert_deep_convection
  long_name = flag for SAS deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv_samf]
  standard_name = identifer_for_scale_aware_mass_flux_deep_convection
  long_name = flag for SAMF deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv_gf]
  standard_name = identifier_for_grell_freitas_deep_convection
  long_name = flag for Grell-Freitas deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv_ntiedtke]
  standard_name = identifier_for_new_tiedtke_deep_convection
  long_name = flag for new Tiedtke deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[hwrf_samfdeep]
  standard_name = flag_for_hurricane_specific_code_in_scale_aware_mass_flux_deep_convection
  long_name = flag for hwrf samfdeepcnv scheme
  units = flag
  dimensions = ()
  type = logical
[hwrf_samfshal]
  standard_name = flag_for_hurricane_specific_code_in_scale_aware_mass_flux_shallow_convection
  long_name = flag for hwrf samfshalcnv scheme
  units = flag
  dimensions = ()
  type = logical
[progsigma]
  standard_name = do_prognostic_updraft_area_fraction
  long_name = do_prognostic_updraft_area_fraction
  units = flag
  dimensions = ()
  type = logical
[isatmedmf]
  standard_name = choice_of_scale_aware_TKE_moist_EDMF_PBL
  long_name = choice of scale-aware TKE moist EDMF PBL scheme
  units = none
  dimensions = ()
  type = integer
[isatmedmf_vdif]
  standard_name = choice_of_original_scale_aware_TKE_moist_EDMF_PBL
  long_name = choice of original scale-aware TKE moist EDMF PBL scheme
  units = none
  dimensions = ()
  type = integer
[isatmedmf_vdifq]
  standard_name = choice_of_updated_scale_aware_TKE_moist_EDMF_PBL
  long_name = choice of updated scale-aware TKE moist EDMF PBL scheme
  units = none
  dimensions = ()
  type = integer
[nmtvr]
  standard_name = number_of_statistical_measures_of_subgrid_orography
  long_name = number of topographic variables in GWD
  units = count
  dimensions = ()
  type = integer
[jcap]
  standard_name = number_of_spectral_wave_truncation_for_simplified_arakawa_schubert_convection
  long_name = number of spectral wave trancation used only by sascnv and shalcnv
  units = count
  dimensions = ()
  type = integer
[cs_parm(1)]
  standard_name = updraft_velocity_tunable_parameter_1_CS
  long_name = tunable parameter 1 for Chikira-Sugiyama convection
  units = m s-1
  dimensions = ()
  type = real
  kind = kind_phys
[cs_parm(2)]
  standard_name = updraft_velocity_tunable_parameter_2_CS
  long_name = tunable parameter 2 for Chikira-Sugiyama convection
  units = m s-1
  dimensions = ()
  type = real
  kind = kind_phys
[cs_parm(3)]
  standard_name = detrainment_and_precipitation_tunable_parameter_3_CS
  long_name = partition water between detrainment and precipitation (decrease for more precipitation)
  units = m
  dimensions = ()
  type = real
  kind = kind_phys
[cs_parm(4)]
  standard_name = detrainment_and_precipitation_tunable_parameter_4_CS
  long_name = partition water between detrainment and precipitation (decrease for more precipitation)
  units = m
  dimensions = ()
  type = real
  kind = kind_phys
[cs_parm(9)]
  standard_name = entrainment_efficiency_tunable_parameter_9_CS
  long_name = entrainment efficiency
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[cgwf]
  standard_name = tunable_parameters_for_convective_gravity_wave_drag
  long_name = multiplication factor for convective GWD
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[cdmbgwd]
  standard_name = multiplicative_tunable_parameters_for_mountain_blocking_and_orographic_gravity_wave_drag
  long_name = multiplication factors for cdmb and gwd
  units = none
  dimensions = (4)
  type = real
  kind = kind_phys
[ccwf]
  standard_name = tunable_parameter_for_critical_cloud_workfunction_in_relaxed_arakawa_schubert_deep_convection
  long_name = multiplication factor for tical_cloud_workfunction
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[sup]
  standard_name = tunable_parameter_for_ice_supersaturation
  long_name = ice supersaturation parameter for PDF clouds
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[ctei_rm]
  standard_name = tunable_parameter_for_critical_cloud_top_entrainment_instability_criteria
  long_name = critical cloud top entrainment instability criteria
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[crtrh(1)]
  standard_name = critical_relative_humidity_at_surface
  long_name = critical relative humidity at the surface
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[crtrh(2)]
  standard_name = critical_relative_humidity_at_PBL_top
  long_name = critical relative humidity at the PBL top
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[crtrh(3)]
  standard_name = critical_relative_humidity_at_toa
  long_name = critical relative humidity at the top of atmosphere
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[prslrd0]
  standard_name = air_pressure_at_bottom_extent_of_rayleigh_damping
  long_name = pressure level from which Rayleigh Damping is applied
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[ral_ts]
  standard_name = timescale_for_rayleigh_damping
  long_name = time scale for Rayleigh damping in days
  units = d
  dimensions = ()
  type = real
  kind = kind_phys
[clam_deep]
  standard_name = entrainment_rate_coefficient_for_deep_convection
  long_name = entrainment rate coefficient for deep convection
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[c0s_deep]
  standard_name = rain_conversion_parameter_for_deep_convection
  long_name = convective rain conversion parameter for deep convection
  units = m-1
  dimensions = ()
  type = real
  kind = kind_phys
[c1_deep]
  standard_name = detrainment_conversion_parameter_for_deep_convection
  long_name = convective detrainment conversion parameter for deep convection
  units = m-1
  dimensions = ()
  type = real
  kind = kind_phys
[betal_deep]
  standard_name = downdraft_fraction_reaching_surface_over_land_for_deep_convection
  long_name = downdraft fraction reaching surface over land for deep convection
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[betas_deep]
  standard_name = downdraft_fraction_reaching_surface_over_water_for_deep_convection
  long_name = downdraft fraction reaching surface over water for deep convection
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[evef]
  standard_name = rain_evaporation_coefficient_for_convection
  long_name = convective rain evaporation coefficient for convection
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[evfact_deep]
  standard_name = rain_evaporation_coefficient_over_ocean_for_deep_convection
  long_name = convective rain evaporation coefficient over ocean for deep convection
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[evfactl_deep]
  standard_name = rain_evaporation_coefficient_over_land_for_deep_convection
  long_name = convective rain evaporation coefficient over land for deep convection
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[pgcon_deep]
  standard_name = momentum_transport_reduction_factor_due_to_pressure_gradient_force_for_deep_convection
  long_name = reduction factor in momentum transport due to deep convection induced pressure gradient force
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[asolfac_deep]
  standard_name = aerosol_aware_multiplicative_rain_conversion_parameter_for_deep_convection
  long_name = aerosol-aware parameter inversely proportional to CCN number concentraion from Lim (2011) for deep convection
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[clam_shal]
  standard_name = entrainment_rate_coefficient_for_shallow_convection
  long_name = entrainment rate coefficient for shallow convection
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[c0s_shal]
  standard_name = rain_conversion_parameter_for_shallow_convection
  long_name = convective rain conversion parameter for shallow convection
  units = m-1
  dimensions = ()
  type = real
  kind = kind_phys
[c1_shal]
  standard_name = detrainment_conversion_parameter_for_shallow_convection
  long_name = convective detrainment conversion parameter for shallow convection
  units = m-1
  dimensions = ()
  type = real
  kind = kind_phys
[pgcon_shal]
  standard_name = momentum_transport_reduction_factor_due_to_pressure_gradient_force_for_shallow_convection
  long_name = reduction factor in momentum transport due to shallow convection induced pressure gradient force
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[asolfac_shal]
  standard_name = aerosol_aware_multiplicative_rain_conversion_parameter_for_shallow_convection
  long_name = aerosol-aware parameter inversely proportional to CCN number concentraion from Lim (2011) for shallow convection
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[xkzm_m]
  standard_name = atmosphere_momentum_diffusivity_due_to_background
  long_name = background vertical diffusion for momentum
  units = m2 s-1
  dimensions = ()
  type = real
  kind = kind_phys
[xkzm_h]
  standard_name = atmosphere_heat_diffusivity_due_to_background
  long_name = background vertical diffusion for heat q
  units = m2 s-1
  dimensions = ()
  type = real
  kind = kind_phys
[xkzm_s]
  standard_name = sigma_pressure_threshold_at_upper_extent_of_background_diffusion
  long_name = sigma threshold for background mom. diffusion
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[nst_anl]
  standard_name = flag_for_nsstm_analysis_in_gcycle
  long_name = flag for NSSTM analysis in gcycle/sfcsub
  units = flag
  dimensions = ()
  type = logical
[nstf_name(1)]
  standard_name = control_for_nsstm
  long_name = NSSTM flag: off/uncoupled/coupled=0/1/2
  units = flag
  dimensions = ()
  type = integer
[nstf_name(4)]
  standard_name = lower_bound_for_depth_of_sea_temperature_for_nsstm
  long_name = zsea1 in mm
  units = mm
  dimensions = ()
  type = integer
[nstf_name(5)]
  standard_name = upper_bound_for_depth_of_sea_temperature_for_nsstm
  long_name = zsea2 in mm
  units = mm
  dimensions = ()
  type = integer
[frac_grid]
  standard_name = flag_for_fractional_landmask
  long_name = flag for fractional grid
  units = flag
  dimensions = ()
  type = logical
[min_lakeice]
  standard_name = min_lake_ice_area_fraction
  long_name = minimum lake ice value
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[min_seaice]
  standard_name = min_sea_ice_area_fraction
  long_name = minimum sea ice value
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[rho_h2o]
  standard_name = density_of_fresh_water
  long_name = density of fresh water
  units = kg m-3
  dimensions = ()
  type = real
  kind = kind_phys
[sfc_z0_type]
  standard_name = flag_for_surface_roughness_option_over_water
  long_name = surface roughness options over water
  units = flag
  dimensions = ()
  type = integer
[xkzminv]
  standard_name = max_atmosphere_heat_diffusivity_due_to_background
  long_name = maximum background value of heat diffusivity
  units = m2 s-1
  dimensions = ()
  type = real
  kind = kind_phys
[moninq_fac]
  standard_name = multiplicative_tuning_parameter_for_atmosphere_diffusivity
  long_name = multiplicative constant for atmospheric diffusivities (AKA alpha)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[dspfac]
  standard_name = multiplicative_tuning_parameter_for_tke_dissipative_heating
  long_name = tke dissipative heating factor
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[bl_upfr]
  standard_name = updraft_area_fraction_in_scale_aware_tke_moist_edmf_pbl_scheme
  long_name = updraft fraction in boundary layer mass flux scheme
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[bl_dnfr]
  standard_name = downdraft_area_fraction_in_scale_aware_tke_moist_edmf_pbl_scheme
  long_name = downdraft fraction in boundary layer mass flux scheme
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[rlmx]
  standard_name = maximum_allowed_mixing_length_in_boundary_layer_mass_flux_scheme
  long_name = maximum allowed mixing length in boundary layer mass flux scheme
  units = m
  dimensions = ()
  type = real
  kind = kind_phys
[elmx]
  standard_name = maximum_allowed_dissipation_mixing_length_in_boundary_layer_mass_flux_scheme
  long_name = maximum allowed dissipation mixing length in boundary layer mass flux scheme
  units = m
  dimensions = ()
  type = real
  kind = kind_phys
[sfc_rlm]
  standard_name = choice_of_near_surface_mixing_length_in_boundary_layer_mass_flux_scheme
  long_name = choice of near surface mixing length in boundary layer mass flux scheme
  units = none
  dimensions = ()
  type = integer
[h0facu]
  standard_name = multiplicative_tuning_parameter_for_reduced_surface_heat_fluxes_due_to_canopy_heat_storage
  long_name = canopy heat storage factor for sensible heat flux in unstable surface layer
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[h0facs]
  standard_name = multiplicative_tuning_parameter_for_reduced_latent_heat_flux_due_to_canopy_heat_storage
  long_name = canopy heat storage factor for sensible heat flux in stable surface layer
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[do_ca]
  standard_name = flag_for_cellular_automata
  long_name = cellular automata main switch
  units = flag
  dimensions = ()
  type = logical
[ca_sgs]
  standard_name = flag_for_sgs_cellular_automata
  long_name = switch for sgs ca
  units = flag
  dimensions = ()
  type = logical
[ca_global]
  standard_name = flag_for_global_cellular_automata
  long_name = switch for global ca
  units = flag
  dimensions = ()
  type = logical
[vfact_ca]
  standard_name = cellular_automata_vertical_weight
  long_name = vertical weight for ca
  units = frac
  dimensions = (vertical_layer_dimension)
  type = real
  kind = kind_phys
[ca_closure]
  standard_name = flag_for_global_cellular_automata_closure
  long_name = switch for ca on closure
  units = flag
  dimensions = ()
  type = logical
[ca_entr]
  standard_name =  flag_for_global_cellular_automata_deep_convective_entrainment
  long_name = switch for ca on entr
  units = flag
  dimensions = ()
  type = logical
[ca_trigger]
  standard_name = flag_for_global_cellular_automata_trigger
  long_name = switch for ca on trigger
  units = flag
  dimensions = ()
  type = logical
[nthresh]
  standard_name =  cellular_automata_vertical_velocity_perturbation_threshold_for_deep_convection
  long_name = threshold used for perturbed vertical velocity
  units = m s-1
  dimensions = ()
  type = real
  kind = kind_phys
[do_sppt]
  standard_name = flag_for_stochastic_physics_perturbations
  long_name = flag for stochastic physics perturbations
  units = flag
  dimensions = ()
  type = logical
[pert_mp]
  standard_name = flag_for_stochastic_microphysics_perturbations
  long_name = flag for stochastic microphysics perturbations
  units = flag
  dimensions = ()
  type = logical
[pert_clds]
  standard_name = flag_for_stochastic_cloud_fraction_perturbations
  long_name = flag for stochastic cloud fraction perturbations
  units = flag
  dimensions = ()
  type = logical
[sppt_amp]
  standard_name = total_amplitude_of_sppt_perturbation
  long_name = toal ampltidue of stochastic sppt perturbation
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[pert_radtend]
  standard_name = flag_for_stochastic_radiative_heating_perturbations
  long_name = flag for stochastic radiative heating perturbations
  units = flag
  dimensions = ()
  type = logical
[use_zmtnblck]
  standard_name = flag_for_mountain_blocking_for_sppt
  long_name = flag for mountain blocking
  units = flag
  dimensions = ()
  type = logical
[do_shum]
  standard_name = flag_for_stochastic_shum_option
  long_name = flag for stochastic shum option
  units = flag
  dimensions = ()
  type = logical
[do_skeb]
  standard_name = flag_for_stochastic_skeb_option
  long_name = flag for stochastic skeb option
  units = flag
  dimensions = ()
  type = logical
[do_spp]
  standard_name = do_stochastically_perturbed_parameterizations
  long_name = flag for stochastic spp option
  units = flag
  dimensions = ()
  type = logical
[lndp_type]
  standard_name = control_for_stochastic_land_surface_perturbation
  long_name = index for stochastic land surface perturbations type
  units = index
  dimensions = ()
  type = integer
[n_var_lndp]
  standard_name = number_of_perturbed_land_surface_variables
  long_name = number of land surface variables perturbed
  units = count
  dimensions = ()
  type = integer
[lndp_prt_list]
  standard_name =land_surface_perturbation_magnitudes
  long_name = magnitude of perturbations for landperts
  units = variable
  dimensions = (number_of_perturbed_land_surface_variables)
  type = real
  kind = kind_phys
  active = (control_for_stochastic_land_surface_perturbation /= 0)
[lndp_var_list]
  standard_name = land_surface_perturbation_variables
  long_name = variables to be perturbed for landperts
  units = none
  dimensions =  (number_of_perturbed_land_surface_variables)
  type = character
  kind = len=3
  active = (control_for_stochastic_land_surface_perturbation /= 0)
[n_var_spp]
  standard_name = number_of_perturbed_spp_schemes
  long_name = number of perturbed spp schemes
  units = count
  dimensions = ()
  type = integer
[spp_prt_list]
  standard_name = magnitude_of_spp_perturbations
  long_name = magnitude of spp perturbations
  units = 1
  dimensions = (number_of_perturbed_spp_schemes)
  type = real
  kind = kind_phys
  active = (do_stochastically_perturbed_parameterizations)
[spp_stddev_cutoff]
  standard_name = magnitude_of_spp_standard_deviation_cutoff
  long_name = magnitude of spp standard deviation cutoff
  units = 1
  dimensions = (number_of_perturbed_spp_schemes)
  type = real
  kind = kind_phys
  active = (do_stochastically_perturbed_parameterizations)
[spp_var_list]
  standard_name = perturbed_spp_schemes
  long_name = perturbed spp schemes
  units = none
  dimensions =  (number_of_perturbed_spp_schemes)
  type = character
  kind = len=3
  active = (do_stochastically_perturbed_parameterizations)
[spp_pbl]
  standard_name = control_for_pbl_spp_perturbations
  long_name = control for pbl spp perturbations
  units = count
  dimensions = ()
  type = integer
[spp_sfc]
  standard_name = control_for_surface_layer_spp_perturbations
  long_name = control for surface layer spp perturbations
  units = count
  dimensions = ()
  type = integer
[spp_mp]
  standard_name = control_for_microphysics_spp_perturbations
  long_name = control for microphysics spp perturbations
  units = count
  dimensions = ()
  type = integer
[spp_rad]
  standard_name = control_for_radiation_spp_perturbations
  long_name = control for radiation spp perturbations
  units = count
  dimensions = ()
  type = integer
[spp_gwd]
  standard_name = control_for_gravity_wave_drag_spp_perturbations
  long_name = control for gravity wave drag spp perturbations
  units = count
  dimensions = ()
  type = integer
[ntrac]
  standard_name = number_of_tracers
  long_name = number of tracers
  units = count
  dimensions = ()
  type = integer
[ntracp1]
  standard_name = number_of_tracers_plus_one
  long_name = number of tracers plus one
  units = count
  dimensions = ()
  type = integer
[ntracp100]
  standard_name = number_of_tracers_plus_one_hundred
  long_name = number of tracers plus one hundred
  units = count
  dimensions = ()
  type = integer
[nprocess]
  standard_name = number_of_cumulative_change_processes
  long_name = number of processes that cause changes in state variables
  units = count
  dimensions = ()
  type = integer
[nprocess_summed]
  standard_name = number_of_physics_causes_of_tracer_changes
  long_name = number of causes in dtidx per tracer summed for total physics tendency
  units = count
  dimensions = ()
  type = integer
[dtidx]
  standard_name = cumulative_change_of_state_variables_outer_index
  long_name = index of state-variable and process in last dimension of diagnostic tendencies array AKA cumulative_change_index
  units = index
  dimensions = (number_of_tracers_plus_one_hundred,number_of_cumulative_change_processes)
  type = integer
[ndtend]
  standard_name = cumulative_change_of_state_variables_outer_index_max
  long_name = last dimension of array of diagnostic tendencies for state variables
  units = count
  dimensions = ()
  type = integer
[index_of_process_pbl]
  standard_name = index_of_subgrid_scale_vertical_mixing_process_in_cumulative_change_index
  long_name = index of subgrid scale vertical mixing process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_dcnv]
  standard_name = index_of_deep_convection_process_process_in_cumulative_change_index
  long_name = index of deep convection process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_scnv]
  standard_name = index_of_shallow_convection_process_process_in_cumulative_change_index
  long_name = index of shallow convection process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_mp]
  standard_name = index_of_microphysics_process_process_in_cumulative_change_index
  long_name = index of microphysics transport process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_prod_loss]
  standard_name = index_of_production_and_loss_process_in_cumulative_change_index
  long_name = index of production and loss effect in photochemistry process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_ozmix]
  standard_name = index_of_ozone_mixing_ratio_process_in_cumulative_change_index
  long_name = index of ozone mixing ratio effect in photochemistry process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_temp]
  standard_name = index_of_temperature_process_in_cumulative_change_index
  long_name = index of temperature effect in photochemistry process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_overhead_ozone]
  standard_name = index_of_overhead_process_in_cumulative_change_index
  long_name = index of overhead ozone effect in photochemistry process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_longwave]
  standard_name = index_of_longwave_heating_process_in_cumulative_change_index
  long_name = index of longwave heating process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_shortwave]
  standard_name = index_of_shortwave_heating_process_in_cumulative_change_index
  long_name = index of shortwave heating process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_orographic_gwd]
  standard_name = index_of_orographic_gravity_wave_drag_process_in_cumulative_change_index
  long_name = index of orographic gravity wave drag process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_rayleigh_damping]
  standard_name = index_of_rayleigh_damping_process_in_cumulative_change_index
  long_name = index of rayleigh damping process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_nonorographic_gwd]
  standard_name = index_of_nonorographic_gravity_wave_drag_process_in_cumulative_change_index
  long_name = index of nonorographic gravity wave drag process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_conv_trans]
  standard_name = index_of_convective_transport_process_in_cumulative_change_index
  long_name = index of convective transport process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_dfi_radar]
  standard_name = index_of_radar_derived_microphysics_temperature_forcing_in_cumulative_change_index
  long_name = index of radar-derived microphysics temperature forcing in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_physics]
  standard_name = index_of_all_physics_process_in_cumulative_change_index
  long_name = index of all physics transport process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_non_physics]
  standard_name = index_of_non_physics_process_in_cumulative_change_index
  long_name = index of non-physics transport process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_process_photochem]
  standard_name = index_of_photochemistry_process_in_cumulative_change_index
  long_name = index of photochemistry process in second dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[is_photochem]
  standard_name = flags_for_photochemistry_processes_to_sum
  long_name = flags for photochemistry processes to sum as the total photochemistry process cumulative change
  units = flag
  dimensions = (number_of_cumulative_change_processes)
  type = logical
[index_of_temperature]
  standard_name = index_of_temperature_in_cumulative_change_index
  long_name = index of temperature in first dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_x_wind]
  standard_name = index_of_x_wind_in_cumulative_change_index
  long_name = index of x-wind in first dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[index_of_y_wind]
  standard_name = index_of_y_wind_in_cumulative_change_index
  long_name = index of x-wind in first dimension of array cumulative change index
  units = index
  dimensions = ()
  type = integer
[ntqv]
  standard_name = index_of_specific_humidity_in_tracer_concentration_array
  long_name = tracer index for water vapor (specific humidity)
  units = index
  dimensions = ()
  type = integer
[ntoz]
  standard_name = index_of_ozone_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for ozone mixing ratio
  units = index
  dimensions = ()
  type = integer
[ntcw]
  standard_name = index_of_cloud_liquid_water_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for cloud condensate (or liquid water)
  units = index
  dimensions = ()
  type = integer
[ntiw]
  standard_name = index_of_cloud_ice_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for  ice water
  units = index
  dimensions = ()
  type = integer
[ntrw]
  standard_name = index_of_rain_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for rain water
  units = index
  dimensions = ()
  type = integer
[ntsw]
  standard_name = index_of_snow_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for snow water
  units = index
  dimensions = ()
  type = integer
[ntgl]
  standard_name = index_of_graupel_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for graupel
  units = index
  dimensions = ()
  type = integer
[nthl]
  standard_name = index_of_hail_mixing_ratio_in_tracer_concentration_array
  long_name = tracer index for hail
  units = index
  dimensions = ()
  type = integer
[ntclamt]
  standard_name = index_of_cloud_area_fraction_in_atmosphere_layer_in_tracer_concentration_array
  long_name = tracer index for cloud amount integer
  units = index
  dimensions = ()
  type = integer
[ntlnc]
  standard_name = index_of_mass_number_concentration_of_cloud_droplets_in_tracer_concentration_array
  long_name = tracer index for liquid number concentration
  units = index
  dimensions = ()
  type = integer
[ntinc]
  standard_name = index_of_mass_number_concentration_of_cloud_ice_in_tracer_concentration_array
  long_name = tracer index for ice    number concentration
  units = index
  dimensions = ()
  type = integer
[ntrnc]
  standard_name = index_of_mass_number_concentration_of_rain_in_tracer_concentration_array
  long_name = tracer index for rain   number concentration
  units = index
  dimensions = ()
  type = integer
[ntsnc]
  standard_name = index_of_mass_number_concentration_of_snow_in_tracer_concentration_array
  long_name = tracer index for snow   number concentration
  units = index
  dimensions = ()
  type = integer
[ntgnc]
  standard_name = index_of_mass_number_concentration_of_graupel_in_tracer_concentration_array
  long_name = tracer index for graupel number concentration
  units = index
  dimensions = ()
  type = integer
[nthnc]
  standard_name = index_of_mass_number_concentration_of_hail_in_tracer_concentration_array
  long_name = tracer index for hail number concentration
  units = index
  dimensions = ()
  type = integer
[ntccn]
  standard_name = index_of_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array
  long_name = tracer index for cloud condensation nuclei number concentration
  units = index
  dimensions = ()
  type = integer
[ntccna]
  standard_name = index_of_activated_cloud_condensation_nuclei_number_concentration_in_tracer_concentration_array
  long_name = tracer index for activated cloud condensation nuclei number concentration
  units = index
  dimensions = ()
  type = integer
[ntgv]
  standard_name = index_of_graupel_volume_in_tracer_concentration_array
  long_name = tracer index for graupel particle volume
  units = index
  dimensions = ()
  type = integer
[nthv]
  standard_name = index_of_hail_volume_in_tracer_concentration_array
  long_name = tracer index for hail particle volume
  units = index
  dimensions = ()
  type = integer
[ntke]
  standard_name = index_of_turbulent_kinetic_energy_in_tracer_concentration_array
  long_name = tracer index for turbulent kinetic energy
  units = index
  dimensions = ()
  type = integer
[ntsigma]
  standard_name = index_of_updraft_area_fraction_in_tracer_concentration_array
  long_name = tracer index of updraft_area_fraction
  units = index
  dimensions = ()
  type = integer
[nqrimef]
  standard_name = index_of_mass_weighted_rime_factor_in_tracer_concentration_array
  long_name = tracer index for mass weighted rime factor
  units = index
  dimensions = ()
  type = integer
[ntwa]
  standard_name = index_of_mass_number_concentration_of_hygroscopic_aerosols_in_tracer_concentration_array
  long_name = tracer index for water friendly aerosol
  units = index
  dimensions = ()
  type = integer
[ntia]
  standard_name = index_of_mass_number_concentration_of_nonhygroscopic_ice_nucleating_aerosols_in_tracer_concentration_array
  long_name = tracer index for ice friendly aerosol
  units = index
  dimensions = ()
  type = integer
[ntsmoke]
  standard_name = index_for_smoke_in_tracer_concentration_array
  long_name = tracer index for smoke
  units = index
  dimensions = ()
  type = integer
[ntdust]
  standard_name = index_for_dust_in_tracer_concentration_array
  long_name = tracer index for dust
  units = index
  dimensions = ()
  type = integer
[nchem]
  standard_name = number_of_chemical_species_vertically_mixed
  long_name = number of chemical vertically mixed
  units = count
  dimensions = ()
  type = integer
[ndvel]
  standard_name = number_of_chemical_species_deposited
  long_name = number of chemical pbl deposited
  units = count
  dimensions = ()
  type = integer
[ntchm]
  standard_name = number_of_chemical_tracers
  long_name = number of chemical tracers
  units = count
  dimensions = ()
  type = integer
[ntchs]
  standard_name = index_of_first_chemical_tracer_in_tracer_concentration_array
  long_name = tracer index for first chemical tracer
  units = index
  dimensions = ()
  type = integer
[ntche]
  standard_name = index_for_last_chemical_tracer
  long_name = tracer index for last chemical tracer
  units = index
  dimensions = ()
  type = integer
[ntdu1]
  standard_name = index_for_dust_bin1
  long_name = index for dust bin1
  units = index
  dimensions = ()
  type = integer
[ntdu2]
  standard_name = index_for_dust_bin2
  long_name = index for dust bin2
  units = index
  dimensions = ()
  type = integer
[ntdu3]
  standard_name = index_for_dust_bin3
  long_name = index for dust bin3
  units = index
  dimensions = ()
  type = integer
[ntdu4]
  standard_name = index_for_dust_bin4
  long_name = index for dust bin4
  units = index
  dimensions = ()
  type = integer
[ntdu5]
  standard_name = index_for_dust_bin5
  long_name = index for dust bin5
  units = index
  dimensions = ()
  type = integer
[ntss1]
  standard_name = index_for_seasalt_bin1
  long_name = index for seasalt bin1
  units = index
  dimensions = ()
  type = integer
[ntss2]
  standard_name = index_for_seasalt_bin2
  long_name = index for seasalt bin2
  units = index
  dimensions = ()
  type = integer
[ntss3]
  standard_name = index_for_seasalt_bin3
  long_name = index for seasalt bin3
  units = index
  dimensions = ()
  type = integer
[ntss4]
  standard_name = index_for_seasalt_bin4
  long_name = index for seasalt bin4
  units = index
  dimensions = ()
  type = integer
[ntss5]
  standard_name = index_for_seasalt_bin5
  long_name = index for seasalt bin5
  units = index
  dimensions = ()
  type = integer
[ntsu]
  standard_name = index_for_sulfate
  long_name = index for sulfate
  units = index
  dimensions = ()
  type = integer
[ntbcb]
  standard_name = index_for_bcphobic
  long_name = index for bcphobic
  units = index
  dimensions = ()
  type = integer
[ntbcl]
  standard_name = index_for_bcphilic
  long_name = index for bcphilic 
  units = index
  dimensions = ()
  type = integer
[ntocb]
  standard_name = index_for_ocphobic
  long_name = index for ocphobic
  units = index
  dimensions = ()
  type = integer
[ntocl]
  standard_name = index_for_ocphilic
  long_name = index for ocphilic 
  units = index
  dimensions = ()
  type = integer
[ndchm]
  standard_name = number_of_diagnostic_chemical_tracers
  long_name = number of diagnostic chemical tracers
  units = count
  dimensions = ()
  type = integer
[ndchs]
  standard_name = index_for_first_diagnostic_chemical_tracer
  long_name = tracer index for first diagnostic chemical tracer
  units = index
  dimensions = ()
  type = integer
[ndche]
  standard_name = index_for_last_diagnostic_chemical_tracer
  long_name = tracer index for last diagnostic chemical tracer
  units = index
  dimensions = ()
  type = integer
[ntdiag]
  standard_name = flags_for_chemical_tracer_diagnostics
  long_name = array to control diagnostics for chemical tracers
  units = flag
  dimensions = (number_of_chemical_tracers)
  type = logical
[fscav]
  standard_name = chemical_tracer_scavenging_fractions
  long_name = array of aerosol scavenging coefficients
  units = none
  dimensions = (number_of_chemical_tracers)
  type = real
  kind = kind_phys
[ntot2d]
  standard_name = number_of_variables_in_xy_dimensioned_restart_array
  long_name = total number of variables for phyf2d
  units = count
  dimensions = ()
  type = integer
[ntot3d]
  standard_name = number_of_variables_in_xyz_dimensioned_restart_array
  long_name = total number of variables for phyf3d
  units = count
  dimensions = ()
  type = integer
[indcld]
  standard_name = index_of_cloud_area_fraction_in_atmosphere_layer_in_xyz_dimensioned_restart_array
  long_name = index of cloud fraction in phyf3d (used only for SHOC or MG)
  units = index
  dimensions = ()
  type = integer
[num_p2d]
  standard_name = number_of_microphysics_varaibles_in_xy_dimensioned_restart_array
  long_name = number of 2D arrays needed for microphysics
  units = count
  dimensions = ()
  type = integer
[num_p3d]
  standard_name = number_of_microphysics_variables_in_xyz_dimensioned_restart_array
  long_name = number of 3D arrays needed for microphysics
  units = count
  dimensions = ()
  type = integer
[nkbfshoc]
  standard_name = index_of_upward_virtual_potential_temperature_flux_in_xyz_dimensioned_restart_array
  long_name = the index of upward kinematic buoyancy flux from SHOC in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nahdshoc]
  standard_name = index_of_atmosphere_heat_diffusivity_in_xyz_dimensioned_restart_array
  long_name = the index of diffusivity for heat from from SHOC in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nscfshoc]
  standard_name = index_of_subgrid_cloud_area_fracation_in_atmosphere_layer_in_xyz_dimensioned_restart_array
  long_name = the index of subgrid-scale cloud fraction from from SHOC in phy_f3d
  units = index
  dimensions = ()
  type = integer
[mix_chem]
  standard_name = do_planetary_boundary_layer_smoke_mixing
  long_name = flag for rrfs smoke mynn tracer mixing
  units = flag
  dimensions = ()
  type = logical
  active = (do_smoke_coupling)
[fire_turb]
  standard_name = do_planetary_boundary_layer_fire_enhancement
  long_name = flag for rrfs smoke mynn enh vermix
  units = flag
  dimensions = ()
  type = logical
  active = (do_smoke_coupling)
[seas_opt]
  standard_name = control_for_smoke_sea_salt
  long_name = rrfs smoke sea salt emission option
  units = index
  dimensions = ()
  type = integer
  active = (do_smoke_coupling)
[dust_opt]
  standard_name = control_for_smoke_dust
  long_name = rrfs smoke dust chem option
  units = index
  dimensions = ()
  type = integer
  active = (do_smoke_coupling)
[biomass_burn_opt]
  standard_name = control_for_smoke_biomass_burn
  long_name = rrfs smoke biomass burning option
  units = index
  dimensions = ()
  type = integer
  active = (do_smoke_coupling)
[drydep_opt]
  standard_name = control_for_smoke_dry_deposition
  long_name = rrfs smoke dry deposition option
  units = index
  dimensions = ()
  type = integer
  active = (do_smoke_coupling)
[wetdep_ls_opt]
  standard_name = control_for_smoke_wet_deposition
  long_name = rrfs smoke large scale wet deposition option
  units = index
  dimensions = ()
  type = integer
  active = (do_smoke_coupling)
[do_plumerise]
  standard_name = do_smoke_plumerise
  long_name = rrfs smoke plumerise option
  units = index
  dimensions = ()
  type = logical
  active = (do_smoke_coupling)
[plumerisefire_frq]
  standard_name = smoke_plumerise_frequency
  long_name = rrfs smoke add smoke option
  units = min
  dimensions = ()
  type = integer
  active = (do_smoke_coupling)
[addsmoke_flag]
  standard_name = control_for_smoke_biomass_burning_emissions
  long_name = rrfs smoke add smoke option
  units = index
  dimensions = ()
  type = integer
  active = (do_smoke_coupling)
[smoke_forecast]
  standard_name = do_smoke_forecast
  long_name = flag for rrfs smoke forecast
  units = flag
  dimensions = ()
  type = logical
  active = (do_smoke_coupling)
[aero_ind_fdb]
  standard_name = do_smoke_aerosol_indirect_feedback
  long_name = flag for wfa ifa emission indirect feedback
  units = flag
  dimensions = ()
  type = logical
  active = (do_smoke_coupling)
[aero_dir_fdb]
  standard_name = do_smoke_aerosol_direct_feedback
  long_name = flag for smoke and dust radiation feedback
  units = flag
  dimensions = ()
  type = logical
  active = (do_smoke_coupling)
[rrfs_smoke_debug]
  standard_name = do_smoke_debug
  long_name = flag for rrfs smoke plumerise debug
  units = flag
  dimensions = ()
  type = logical
  active = (do_smoke_coupling)
[ncnvcld3d]
  standard_name = number_of_convective_cloud_variables_in_xyz_dimensioned_restart_array
  long_name = number of convective 3d clouds fields
  units = count
  dimensions = ()
  type = integer
[npdf3d]
  standard_name = number_of_pdf_based_variables_in_xyz_dimensioned_restart_array
  long_name = number of 3d arrays associated with pdf based clouds/mp
  units = count
  dimensions = ()
  type = integer
[nctp]
  standard_name = number_of_cloud_types_CS
  long_name = number of cloud types in Chikira-Sugiyama scheme
  units = count
  dimensions = ()
  type = integer
[ncnvw]
  standard_name = index_of_convective_cloud_condensate_mixing_ratio_in_xyz_dimensioned_restart_array
  long_name = the index of convective cloud water mixing ratio in phy f3d
  units = index
  dimensions = ()
  type = integer
[ncnvc]
  standard_name = index_of_convective_cloud_area_fraction_in_xyz_dimensioned_restart_array
  long_name = the index of convective cloud cover in phy f3d
  units = index
  dimensions = ()
  type = integer
[nleffr]
  standard_name = index_of_cloud_liquid_water_effective_radius_in_xyz_dimensioned_restart_array
  long_name = the index of cloud liquid water effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nieffr]
  standard_name = index_of_cloud_ice_effective_radius_in_xyz_dimensioned_restart_array
  long_name = the index of ice effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nreffr]
  standard_name = index_of_rain_effective_radius_in_xyz_dimensioned_restart_array
  long_name = the index of rain effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nseffr]
  standard_name = index_of_snow_effective_radius_in_xyz_dimensioned_restart_array
  long_name = the index of snow effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[ngeffr]
  standard_name = index_of_graupel_effective_radius_in_xyz_dimensioned_restart_array
  long_name = the index of graupel effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nT2delt]
  standard_name = index_of_air_temperature_two_timesteps_back_in_xyz_dimensioned_restart_array
  long_name = the index of air temperature two timesteps back in phy f3d
  units =
  dimensions = ()
  type = integer
[nTdelt]
  standard_name = index_of_air_temperature_on_previous_timestep_in_xyz_dimensioned_restart_array
  long_name = the index of air temperature at previous timestep in phy f3d
  units =
  dimensions = ()
  type = integer
[nqv2delt]
  standard_name = index_of_specific_humidity_two_timesteps_back_in_xyz_dimensioned_restart_array
  long_name = the index of specific humidity two timesteps back in phy f3d
  units =
  dimensions = ()
  type = integer
[nqvdelt]
  standard_name = index_of_specific_humidity_on_previous_timestep_in_xyz_dimensioned_restart_array
  long_name = the index of specific humidity at previous timestep in phy f3d
  units =
  dimensions = ()
  type = integer
[nps2delt]
  standard_name = index_of_surface_air_pressure_two_timesteps_back_in_xyz_dimensioned_tracer_array
  long_name = the index of surface air pressure two timesteps back in phy f2d
  units =
  dimensions = ()
  type = integer
[npsdelt]
  standard_name = index_of_surface_air_pressure_on_previous_timestep_in_xyz_dimensioned_restart_array
  long_name = the index of surface air pressure at previous timestep in phy f2d
  units =
  dimensions = ()
  type = integer
[ncnvwind]
  standard_name = index_of_enhancement_to_wind_speed_at_surface_adjacent_layer_due_to_convection_in_xy_dimensioned_restart_array
  long_name = the index of surface wind enhancement due to convection in phy f2d
  units =
  dimensions = ()
  type = integer
[debug]
  standard_name = flag_for_debug_output
  long_name = control flag for debug
  units = flag
  dimensions = ()
  type = logical
[print_diff_pgr]
  standard_name = flag_to_print_pgr_differences_every_timestep
  long_name = flag to print pgr differences every timestep
  units = flag
  dimensions = ()
  type = logical
[ipt]
  standard_name = index_of_horizontal_gridpoint_for_debug_output
  long_name = horizontal index for point used for diagnostic printout
  units = index
  dimensions = ()
  type = integer
[lprnt]
  standard_name = flag_print
  long_name = control flag for diagnostic print out
  units = flag
  dimensions = ()
  type = logical
[lsswr]
  standard_name = flag_for_calling_shortwave_radiation
  long_name = logical flags for sw radiation calls
  units = flag
  dimensions = ()
  type = logical
[lslwr]
  standard_name = flag_for_calling_longwave_radiation
  long_name = logical flags for lw radiation calls
  units = flag
  dimensions = ()
  type = logical
[solhr]
  standard_name = forecast_utc_hour
  long_name = time in hours after 00z at the current timestep
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[solcon]
  standard_name = solar_constant
  long_name = solar constant (sun-earth distant adjusted)
  units = W m-2
  dimensions = ()
  type = real
  kind = kind_phys
[slag]
  standard_name = equation_of_time
  long_name = equation of time (radian)
  units = radian
  dimensions = ()
  type = real
  kind = kind_phys
[sdec]
  standard_name = sine_of_solar_declination_angle
  long_name = sin of the solar declination angle
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[cdec]
  standard_name = cosine_of_solar_declination_angle
  long_name = cos of the solar declination angle
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[clstp]
  standard_name = control_for_convective_cloud_diagnostics
  long_name = index used by cnvc90 (for convective clouds)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[phour]
  standard_name = forecast_time_on_previous_timestep
  long_name = forecast time at the previous timestep
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[fhour]
  standard_name = forecast_time
  long_name = current forecast time
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[zhour]
  standard_name = time_elapsed_since_diagnostics_reset
  long_name = time since diagnostics variables have been zeroed
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[kdt]
  standard_name = index_of_timestep
  long_name = current forecast iteration
  units = index
  dimensions = ()
  type = integer
[first_time_step]
  standard_name = flag_for_first_timestep
  long_name = flag for first time step for time integration loop (cold/warmstart)
  units = flag
  dimensions = ()
  type = logical
[restart]
  standard_name = flag_for_restart
  long_name = flag for restart (warmstart) or coldstart
  units = flag
  dimensions = ()
  type = logical
[lsm_cold_start]
  standard_name = do_lsm_cold_start
  long_name = flag to signify LSM is cold-started
  units = flag
  dimensions = ()
  type = logical
[hydrostatic]
  standard_name = flag_for_hydrostatic_solver
  long_name = flag for hydrostatic solver from dynamics
  units = flag
  dimensions = ()
  type = logical
[jdat]
  standard_name = date_and_time_of_forecast_in_united_states_order
  long_name = current forecast date and time
  units = none
  dimensions = (8)
  type = integer
[imn]
  standard_name = forecast_month
  long_name = current forecast month
  units = none
  dimensions = ()
  type = integer
[yearlen]
  standard_name = number_of_days_in_current_year
  long_name = number of days in a year
  units = days
  dimensions = ()
  type = integer
[julian]
  standard_name = forecast_julian_day
  long_name = julian day
  units = days
  dimensions = ()
  type = real
  kind = kind_phys
[iccn]
  standard_name = control_for_ice_cloud_condensation_nuclei_forcing
  long_name = flag for IN and CCN forcing for morrison gettelman microphysics
  units = none
  dimensions = ()
  type = integer
[sec]
  standard_name = forecast_time_in_seconds
  long_name = seconds elapsed since model initialization
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[si]
  standard_name = sigma_pressure_hybrid_vertical_coordinate
  long_name = vertical sigma coordinate for radiation initialization
  units = none
  dimensions = (vertical_interface_dimension)
  type = real
  kind = kind_phys
[dxinv]
  standard_name = reciprocal_of_grid_scale_range
  long_name = inverse scaling factor for critical relative humidity
  units = rad2 m-2
  dimensions = ()
  type = real
  kind = kind_phys
[dxmax]
  standard_name = max_grid_scale
  long_name = maximum scaling factor for critical relative humidity
  units = m2 rad-2
  dimensions = ()
  type = real
  kind = kind_phys
[dxmin]
  standard_name = min_grid_scale
  long_name = minimum scaling factor for critical relative humidity
  units = m2 rad-2
  dimensions = ()
  type = real
  kind = kind_phys
[rhcmax]
  standard_name = max_critical_relative_humidity
  long_name = maximum critical relative humidity
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[huge]
  standard_name = netcdf_float_fillvalue
  long_name = definition of NetCDF float FillValue
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[icloud]
  standard_name = control_for_cloud_area_fraction_option
  long_name = cloud effect to the optical depth and cloud fraction in radiation
  units = flag
  dimensions = ()
  type = integer
[gwd_opt]
  standard_name = control_for_drag_suite_gravity_wave_drag
  long_name = flag to choose gwd scheme
  units = flag
  dimensions = ()
  type = integer
[do_mynnedmf]
  standard_name = flag_for_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to activate MYNN-EDMF
  units = flag
  dimensions = ()
  type = logical
[do_mynnsfclay]
  standard_name = flag_for_mellor_yamada_nakanishi_niino_surface_layer_scheme
  long_name = flag to activate MYNN surface layer
  units = flag
  dimensions = ()
  type = logical
[do_myjsfc]
  standard_name = flag_for_mellor_yamada_janjic_surface_layer_scheme
  long_name = flag to activate MYJ surface layer scheme
  units = flag
  dimensions = ()
  type = logical
[do_myjpbl]
  standard_name = flag_for_mellor_yamada_janjic_pbl_scheme
  long_name = flag to activate MYJ PBL scheme
  units = flag
  dimensions = ()
  type = logical
[bl_mynn_tkebudget]
  standard_name = control_for_tke_budget_output
  long_name = flag for activating TKE budget
  units = flag
  dimensions = ()
  type = logical
[bl_mynn_tkeadvect]
  standard_name = flag_for_tke_advection
  long_name = flag for activating TKE advection
  units = flag
  dimensions = ()
  type = logical
[bl_mynn_cloudpdf]
  standard_name = control_for_cloud_pdf_in_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to determine which cloud PDF to use
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_mixlength]
  standard_name = control_for_mixing_length_in_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to determine which mixing length form to use
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_edmf]
  standard_name = control_for_edmf_in_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to activate the mass-flux scheme
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_edmf_mom]
  standard_name = control_for_edmf_momentum_transport_in_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to activate the transport of momentum
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_edmf_tke]
  standard_name = control_for_edmf_tke_transport_in_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to activate the transport of TKE
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_cloudmix]
  standard_name = control_for_cloud_species_mixing_in_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to activate mixing of cloud species
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_mixqt]
  standard_name = control_for_total_water_mixing_in_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to mix total water or individual species
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_output]
  standard_name = control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag initialize and output extra 3D variables
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_closure]
  standard_name = control_for_closure_level_in_mellor_yamada_nakanishi_niino_pbl_scheme
  long_name = flag to determine the closure level for the mynn
  units = 1
  dimensions = ()
  type = real
[icloud_bl]
  standard_name = control_for_sgs_cloud_radiation_coupling_in_mellor_yamamda_nakanishi_niino_pbl_scheme
  long_name = flag for coupling sgs clouds to radiation
  units = flag
  dimensions = ()
  type = integer
[isftcflx]
  standard_name = control_for_thermal_roughness_lengths_over_water
  long_name = flag for thermal roughness lengths over water in mynnsfclay
  units = 1
  dimensions = ()
  type = integer
[iz0tlnd]
  standard_name = control_for_thermal_roughness_lengths_over_land
  long_name = flag for thermal roughness lengths over land in mynnsfclay
  units = 1
  dimensions = ()
  type = integer
[sfclay_compute_flux]
  standard_name = do_compute_surface_scalar_fluxes
  long_name = flag for computing surface scalar fluxes in mynnsfclay
  units = flag
  dimensions = ()
  type = logical
[sfclay_compute_diag]
  standard_name = do_compute_surface_diagnostics
  long_name = flag for computing surface diagnostics in mynnsfclay
  units = flag
  dimensions = ()
  type = logical
[var_ric]
  standard_name = control_for_variable_bulk_richardson_number
  long_name = flag for calculating variable bulk richardson number for hurricane PBL
  units = flag
  dimensions = ()
  type = real
  kind = kind_phys
[coef_ric_l]
  standard_name = coefficient_for_variable_bulk_richardson_number_over_land
  long_name = coefficient for calculating variable bulk richardson number for hurricane PBL over land
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[coef_ric_s]
  standard_name = coefficient_for_variable_bulk_richardson_number_over_water
  long_name = coefficient for calculating variable bulk richardson number for hurricane PBL over water
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[do_ugwp]
  standard_name = flag_for_unified_gravity_wave_physics_gravity_wave_drag_scheme
  long_name = flag to activate CIRES UGWP
  units = flag
  dimensions = ()
  type = logical
[do_tofd]
  standard_name = flag_for_turbulent_orographic_form_drag_in_unified_gravity_wave_physics_gravitiy_wave_drag_scheme
  long_name = flag for turbulent orographic form drag
  units = flag
  dimensions = ()
  type = logical
[do_gwd]
  standard_name = flag_for_gravity_wave_drag
  long_name = flag for gravity wave drag (gwd)
  units = flag
  dimensions = ()
  type = logical
[do_cnvgwd]
  standard_name = flag_for_convective_gravity_wave_drag
  long_name = flag for convective gravity wave drag (gwd)
  units = flag
  dimensions = ()
  type = logical
[ldiag_ugwp]
  standard_name = flag_for_unified_gravity_wave_physics_diagnostics
  long_name = flag for CIRES UGWP Diagnostics
  units = flag
  dimensions = ()
  type = logical
[uni_cld]
  standard_name = flag_for_shoc_cloud_area_fraction_for_radiation
  long_name = flag for uni_cld
  units = flag
  dimensions = ()
  type = logical
[lmfshal]
  standard_name = flag_for_cloud_area_fraction_option_for_radiation
  long_name = flag for lmfshal
  units = flag
  dimensions = ()
  type = logical
[do_ugwp_v0]
  standard_name = flag_for_ugwp_version_0
  long_name = flag to activate ver 0 CIRES UGWP
  units = flag
  dimensions = ()
  type = logical
[do_ugwp_v0_orog_only]
  standard_name = flag_for_ugwp_version_0_orographic_gwd
  long_name = flag to activate ver 0 CIRES UGWP - orographic GWD only
  units = flag
  dimensions = ()
  type = logical
[do_ugwp_v0_nst_only]
  standard_name = flag_for_ugwp_version_0_nonorographic_gwd
  long_name = flag to activate ver 0 CIRES UGWP - non-stationary GWD only
  units = flag
  dimensions = ()
  type = logical
[do_gsl_drag_ls_bl]
  standard_name = flag_for_gsl_drag_suite_large_scale_orographic_and_blocking_drag
  long_name = flag to activate GSL drag suite - large-scale GWD and blocking
  units = flag
  dimensions = ()
  type = logical
[do_gsl_drag_ss]
  standard_name = flag_for_gsl_drag_suite_small_scale_orographic_drag
  long_name = flag to activate GSL drag suite - small-scale GWD
  units = flag
  dimensions = ()
  type = logical
[do_gsl_drag_tofd]
  standard_name = flag_for_gsl_drag_suite_turbulent_orographic_form_drag
  long_name = flag to activate GSL drag suite - turb orog form drag
  units = flag
  dimensions = ()
  type = logical
[do_ugwp_v1]
  standard_name = flag_for_ugwp_version_1
  long_name = flag to activate ver 1 CIRES UGWP
  units = flag
  dimensions = ()
  type = logical
[do_ugwp_v1_orog_only]
  standard_name = flag_for_ugwp_version_1_orographic_gwd
  long_name = flag to activate ver 1 CIRES UGWP - orographic GWD only
  units = flag
  dimensions = ()
  type = logical
[do_ugwp_v1_w_gsldrag]
  standard_name = flag_for_ugwp_version_1_nonorographic_gwd
  long_name = flag to activate ver 1 CIRES UGWP - with OGWD of GSL
  units = flag
  dimensions = ()
  type = logical
[lmfdeep2]
  standard_name = flag_for_scale_aware_mass_flux_deep_convection_for_radiation
  long_name = flag for some scale-aware mass-flux convection scheme active
  units = flag
  dimensions = ()
  type = logical

########################################################################
[ccpp-table-properties]
  name = GFS_grid_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_grid_type
  type = ddt
[area]
  standard_name = cell_area
  long_name = area of the grid cell
  units = m2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dx]
  standard_name = characteristic_grid_lengthscale
  long_name = relative dx for the grid cell
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xlat]
  standard_name = latitude
  long_name = latitude
  units = radian
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xlon]
  standard_name = longitude
  long_name = longitude
  units = radian
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[coslat]
  standard_name = cosine_of_latitude
  long_name = cosine of latitude
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sinlat]
  standard_name = sine_of_latitude
  long_name = sine of latitude
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xlat_d]
  standard_name = latitude_in_degree
  long_name = latitude in degree north
  units = degree_north
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xlon_d]
  standard_name = longitude_in_degree
  long_name = longitude in degree east
  units = degree_east
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[jindx1_o3]
  standard_name = lower_latitude_index_of_ozone_forcing_for_interpolation
  long_name = interpolation low index for ozone
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (index_of_ozone_mixing_ratio_in_tracer_concentration_array>0)
[jindx2_o3]
  standard_name = upper_latitude_index_of_ozone_forcing_for_interpolation
  long_name = interpolation high index for ozone
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (index_of_ozone_mixing_ratio_in_tracer_concentration_array>0)
[ddy_o3]
  standard_name = latitude_interpolation_weight_for_ozone_forcing
  long_name = interpolation high index for ozone
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (index_of_ozone_mixing_ratio_in_tracer_concentration_array>0)
[jindx1_h]
  standard_name = lower_latitude_index_of_stratospheric_water_vapor_forcing_for_interpolation
  long_name = interpolation low index for stratospheric water vapor
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_stratospheric_water_vapor_physics)
[jindx2_h]
  standard_name = upper_latitude_index_of_stratospheric_water_vapor_forcing_for_interpolation
  long_name = interpolation high index for stratospheric water vapor
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_stratospheric_water_vapor_physics)
[ddy_h]
  standard_name = latitude_interpolation_weight_for_stratospheric_water_vapor_forcing
  long_name = interpolation high index for stratospheric water vapor
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_stratospheric_water_vapor_physics)
[jindx1_aer]
  standard_name = lower_latitude_index_of_aerosol_forcing_for_interpolation
  long_name = interpolation low index for prescribed aerosols in the y direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_aerosol_input_MG_radiation)
[jindx2_aer]
  standard_name = upper_latitude_index_of_aerosol_forcing_for_interpolation
  long_name = interpolation high index for prescribed aerosols in the y direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_aerosol_input_MG_radiation)
[ddy_aer]
  standard_name = latitude_interpolation_weight_for_aerosol_forcing
  long_name = interpolation high index for prescribed aerosols in the y direction
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_aerosol_input_MG_radiation)
[iindx1_aer]
  standard_name = lower_longitude_index_of_aerosol_forcing_for_interpolation
  long_name = interpolation low index for prescribed aerosols in the x direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_aerosol_input_MG_radiation)
[iindx2_aer]
  standard_name = upper_longitude_index_of_aerosol_forcing_for_interpolation
  long_name = interpolation high index for prescribed aerosols in the x direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_aerosol_input_MG_radiation)
[ddx_aer]
  standard_name = longitude_interpolation_weight_for_aerosol_forcing
  long_name = interpolation high index for prescribed aerosols in the x direction
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_aerosol_input_MG_radiation)
[jindx1_ci]
  standard_name = lower_latitude_index_of_cloud_nuclei_forcing_for_interpolation
  long_name = interpolation low index for ice and cloud condensation nuclei in the y direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (control_for_ice_cloud_condensation_nuclei_forcing==1)
[jindx2_ci]
  standard_name = upper_latitude_index_of_cloud_nuclei_forcing_for_interpolation
  long_name = interpolation high index for ice and cloud condensation nuclei in the y direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (control_for_ice_cloud_condensation_nuclei_forcing==1)
[ddy_ci]
  standard_name = latitude_interpolation_weight_for_cloud_nuclei_forcing
  long_name = interpolation high index for ice and cloud condensation nuclei in the y direction
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_ice_cloud_condensation_nuclei_forcing==1)
[iindx1_ci]
  standard_name = lower_longitude_index_of_cloud_nuclei_forcing_for_interpolation
  long_name = interpolation low index for ice and cloud condensation nuclei in the x direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (control_for_ice_cloud_condensation_nuclei_forcing==1)
[iindx2_ci]
  standard_name = upper_longitude_index_of_cloud_nuclei_forcing_for_interpolation
  long_name = interpolation high index for ice and cloud condensation nuclei in the x direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (control_for_ice_cloud_condensation_nuclei_forcing==1)
[ddx_ci]
  standard_name = longitude_interpolation_weight_for_cloud_nuclei_forcing
  long_name = interpolation high index for ice and cloud condensation nuclei in the x direction
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_ice_cloud_condensation_nuclei_forcing==1)
[jindx1_tau]
  standard_name = lower_latitude_index_of_absolute_momentum_flux_due_to_nonorographic_gravity_wave_drag_for_interpolation
  long_name = index1 for weight1 for tau NGWs
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_ugwp_version_1)
[jindx2_tau]
  standard_name = upper_latitude_index_of_absolute_momentum_flux_due_to_nonorographic_gravity_wave_drag_for_interpolation
  long_name = index2 for weight2 for tau NGWs
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_ugwp_version_1)
[ddy_j1tau]
  standard_name = latitude_interpolation_weight_complement_for_absolute_momentum_flux_due_to_nonorographic_gravity_wave_drag
  long_name = interpolation weight1 for tau NGWs
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1)
[ddy_j2tau]
  standard_name = latitude_interpolation_weight_for_absolute_momentum_flux_due_to_nonorographic_gravity_wave_drag
  long_name = interpolation weight2 for tau NGWs
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1)

########################################################################
[ccpp-table-properties]
  name = GFS_tbd_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_tbd_type
  type = ddt
[icsdsw]
  standard_name = random_number_seed_for_mcica_shortwave
  long_name = random seeds for sub-column cloud generators sw
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_lw_clouds_sub_grid_approximation == 2 .or. flag_for_sw_clouds_grid_approximation == 2)
[icsdlw]
  standard_name = random_number_seed_for_mcica_longwave
  long_name = random seeds for sub-column cloud generators lw
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_lw_clouds_sub_grid_approximation == 2 .or. flag_for_sw_clouds_grid_approximation == 2)
[tau_amf]
  standard_name = absolute_momentum_flux_due_to_nonorographic_gravity_wave_drag
  long_name = ngw_absolute_momentum_flux
  units = mixed
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ozpl]
  standard_name = ozone_forcing
  long_name = ozone forcing data
  units = mixed
  dimensions = (horizontal_loop_extent,vertical_dimension_of_ozone_forcing_data,number_of_coefficients_in_ozone_forcing_data)
  type = real
  kind = kind_phys
[h2opl]
  standard_name = stratospheric_water_vapor_forcing
  long_name = water forcing data
  units = mixed
  dimensions = (horizontal_loop_extent,vertical_dimension_of_h2o_forcing_data,number_of_coefficients_in_h2o_forcing_data)
  type = real
  kind = kind_phys
[hpbl]
  standard_name = atmosphere_boundary_layer_thickness
  long_name = pbl height
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ud_mf]
  standard_name = instantaneous_atmosphere_updraft_convective_mass_flux
  long_name = (updraft mass flux) * delt
  units = kg m-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = ( control_for_deep_convection_scheme .ge. 0 .or. control_for_shallow_convection_scheme .ge. 0 )
[in_nm]
  standard_name = ice_nucleation_number_from_climatology
  long_name = ice nucleation number in MG MP
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[ccn_nm]
  standard_name = tendency_of_activated_cloud_condensation_nuclei_from_climatology
  long_name = tendency of ccn activated number
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[aer_nm]
  standard_name = mass_mixing_ratio_of_aerosol_from_gocart_or_merra2
  long_name = mass mixing ratio of aerosol from gocart or merra2
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,number_of_aerosol_tracers_MG)
  type = real
  kind = kind_phys
[aod_gf]
  standard_name = aerosol_optical_depth_for_grell_freitas_deep_convection
  long_name = aerosol optical depth used in Grell-Freitas Convective Parameterization
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection)
[imap]
  standard_name = map_of_block_column_number_to_global_i_index
  long_name = map of local index ix to global index i for this block
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
[jmap]
  standard_name = map_of_block_column_number_to_global_j_index
  long_name = map of local index ix to global index j for this block
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
[rann]
  standard_name = random_number
  long_name = random number array (0-1)
  units = none
  dimensions = (horizontal_loop_extent,number_of_random_numbers)
  type = real
  kind = kind_phys
[acv]
  standard_name = cumulative_lwe_thickness_of_convective_precipitation_amount_between_sw_radiation_calls
  long_name = accumulated convective rainfall amount for cnvc90 only
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[acvb]
  standard_name = cumulative_min_vertical_index_at_cloud_base_between_sw_radiation_calls
  long_name = smallest cloud base vertical index encountered thus far
  units = index
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[acvt]
  standard_name = cumulative_max_vertical_index_at_cloud_base_between_sw_radiation_calls
  long_name = largest cloud top vertical index encountered thus far
  units = index
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dtdtnp]
  standard_name = tendency_of_air_temperature_to_withold_from_sppt
  long_name = temp. change from physics that should not be perturbed by sppt
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_physics_perturbations .or. flag_for_global_cellular_automata)
[drain_cpl]
  standard_name = tendency_of_lwe_thickness_of_rain_amount_on_dynamics_timestep_for_coupling
  long_name = change in rain_cpl (coupling_type)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_chemistry_coupling)
[dsnow_cpl]
  standard_name = tendency_of_lwe_thickness_of_snowfall_amount_on_dynamics_timestep_for_coupling
  long_name = change in show_cpl (coupling_type)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_surface_flux_coupling .or. flag_for_chemistry_coupling)
[phy_fctd]
  standard_name = atmosphere_updraft_convective_mass_flux_at_cloud_base_by_cloud_type
  long_name = cloud base mass flux for CS convection
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent,number_of_cloud_types_CS)
  type = real
  kind = kind_phys
  active = (number_of_cloud_types_CS > 0 .and. flag_for_Chikira_Sugiyama_deep_convection)
[phy_f2d(:,index_of_surface_air_pressure_two_timesteps_back_in_xyz_dimensioned_tracer_array)]
  standard_name = surface_air_pressure_two_timesteps_back
  long_name = surface air pressure two timesteps back
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (index_of_surface_air_pressure_two_timesteps_back_in_xyz_dimensioned_tracer_array > 0)
[phy_f2d(:,index_of_surface_air_pressure_on_previous_timestep_in_xyz_dimensioned_restart_array)]
  standard_name = surface_air_pressure_on_previous_timestep
  long_name = surface air pressure at previous timestep
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (index_of_surface_air_pressure_on_previous_timestep_in_xyz_dimensioned_restart_array > 0)
[phy_f2d(:,index_of_enhancement_to_wind_speed_at_surface_adjacent_layer_due_to_convection_in_xy_dimensioned_restart_array)]
  standard_name = enhancement_to_wind_speed_at_surface_adjacent_layer_due_to_convection
  long_name = surface wind enhancement due to convection
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (index_of_enhancement_to_wind_speed_at_surface_adjacent_layer_due_to_convection_in_xy_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_air_temperature_two_timesteps_back_in_xyz_dimensioned_restart_array)]
  standard_name = air_temperature_two_timesteps_back
  long_name = air temperature two timesteps back
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_air_temperature_two_timesteps_back_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_specific_humidity_two_timesteps_back_in_xyz_dimensioned_restart_array)]
  standard_name = specific_humidity_two_timesteps_back
  long_name = water vapor specific humidity two timesteps back
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_specific_humidity_two_timesteps_back_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_air_temperature_on_previous_timestep_in_xyz_dimensioned_restart_array)]
  standard_name = air_temperature_on_previous_timestep_in_xyz_dimensioned_restart_array
  long_name = air temperature at previous timestep
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_air_temperature_on_previous_timestep_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_specific_humidity_on_previous_timestep_in_xyz_dimensioned_restart_array)]
  standard_name = specific_humidity_on_previous_timestep_in_xyz_dimensioned_restart_array
  long_name = water vapor specific humidity at previous timestep
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_specific_humidity_on_previous_timestep_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_convective_cloud_condensate_mixing_ratio_in_xyz_dimensioned_restart_array)]
  standard_name = convective_cloud_condensate_mixing_ratio
  long_name = convective cloud water mixing ratio in the phy_f3d array
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_convective_cloud_condensate_mixing_ratio_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_convective_cloud_area_fraction_in_xyz_dimensioned_restart_array)]
  standard_name = convective_cloud_area_fraction
  long_name = convective cloud cover in the phy_f3d array
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_convective_cloud_area_fraction_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_upward_virtual_potential_temperature_flux_in_xyz_dimensioned_restart_array)]
  standard_name = upward_virtual_potential_temperature_flux
  long_name = upward kinematic buoyancy flux from the SHOC scheme
  units = K m s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_upward_virtual_potential_temperature_flux_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_atmosphere_heat_diffusivity_in_xyz_dimensioned_restart_array)]
  standard_name = atmosphere_heat_diffusivity_from_shoc
  long_name = diffusivity for heat from the SHOC scheme
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_atmosphere_heat_diffusivity_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_subgrid_cloud_area_fracation_in_atmosphere_layer_in_xyz_dimensioned_restart_array)]
  standard_name = subgrid_scale_cloud_fraction_from_shoc
  long_name = subgrid-scale cloud fraction from the SHOC scheme
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_subgrid_cloud_area_fracation_in_atmosphere_layer_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_cloud_area_fraction_in_atmosphere_layer_in_xyz_dimensioned_restart_array)]
  standard_name = cloud_fraction_for_MG
  long_name = cloud fraction used by Morrison-Gettelman MP
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_cloud_area_fraction_in_atmosphere_layer_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_cloud_liquid_water_effective_radius_in_xyz_dimensioned_restart_array)]
  standard_name = effective_radius_of_stratiform_cloud_liquid_water_particle
  long_name = eff. radius of cloud liquid water particle in micrometer
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_cloud_liquid_water_effective_radius_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_cloud_ice_effective_radius_in_xyz_dimensioned_restart_array)]
  standard_name = effective_radius_of_stratiform_cloud_ice_particle
  long_name = eff. radius of cloud ice water particle in micrometer
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_cloud_ice_effective_radius_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_rain_effective_radius_in_xyz_dimensioned_restart_array)]
  standard_name = effective_radius_of_stratiform_cloud_rain_particle
  long_name = effective radius of cloud rain particle in micrometers
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_rain_effective_radius_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_snow_effective_radius_in_xyz_dimensioned_restart_array)]
  standard_name = effective_radius_of_stratiform_cloud_snow_particle
  long_name = effective radius of cloud snow particle in micrometers
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_snow_effective_radius_in_xyz_dimensioned_restart_array > 0)
[phy_f3d(:,:,index_of_graupel_effective_radius_in_xyz_dimensioned_restart_array)]
  standard_name = effective_radius_of_stratiform_cloud_graupel_particle
  long_name = eff. radius of cloud graupel particle in micrometer
  units = um
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (index_of_graupel_effective_radius_in_xyz_dimensioned_restart_array > 0)
[forcet]
  standard_name = tendency_of_air_temperature_due_to_nonphysics
  long_name = temperature tendency due to dynamics only
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection .or. control_for_deep_convection_scheme == identifier_for_new_tiedtke_deep_convection)
[forceq]
  standard_name = tendendy_of_specific_humidity_due_to_nonphysics
  long_name = moisture tendency due to dynamics only
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection .or. control_for_deep_convection_scheme == identifier_for_new_tiedtke_deep_convection)
[prevst]
  standard_name = air_temperature_on_previous_timestep
  long_name = temperature from previous time step
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection .or. control_for_deep_convection_scheme == identifier_for_new_tiedtke_deep_convection)
[prevsq]
  standard_name = specific_humidity_on_previous_timestep
  long_name = moisture from previous time step
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection .or. control_for_deep_convection_scheme == identifier_for_new_tiedtke_deep_convection .or. control_for_deep_convection_scheme == identifer_for_scale_aware_mass_flux_deep_convection .or. control_for_shallow_convection_scheme == identifier_for_scale_aware_mass_flux_shallow_convection)
[cactiv]
  standard_name = counter_for_grell_freitas_convection
  long_name = convective activity memory
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection)
[cactiv_m]
  standard_name = counter_for_grell_freitas_mid_level_convection
  long_name = mid-level convective activity memory
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (control_for_deep_convection_scheme == identifier_for_grell_freitas_deep_convection)
[CLDFRA_BL]
  standard_name = subgrid_scale_cloud_area_fraction_in_atmosphere_layer
  long_name = subgrid cloud fraction from PBL scheme
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[QC_BL]
  standard_name = subgrid_scale_cloud_liquid_water_mixing_ratio
  long_name = subgrid cloud water mixing ratio from PBL scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[QI_BL]
  standard_name = subgrid_scale_cloud_ice_mixing_ratio
  long_name = subgrid cloud ice mixing ratio from PBL scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[el_pbl]
  standard_name = turbulent_mixing_length
  long_name = mixing length in meters
  units = m
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[Sh3D]
  standard_name = stability_function_for_heat
  long_name = stability function for heat
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[Sm3D]
  standard_name = stability_function_for_momentum
  long_name = stability function for momentum
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[qke]
  standard_name = nonadvected_turbulent_kinetic_energy_multiplied_by_2
  long_name = 2 x tke at mass points
  units = m2 s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[tsq]
  standard_name = variance_of_air_temperature
  long_name = temperature fluctuation squared
  units = K2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[qsq]
  standard_name = variance_of_specific_humidity
  long_name = water vapor fluctuation squared
  units = kg2 kg-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[cov]
  standard_name = covariance_of_air_temperature_and_specific_humidity
  long_name = covariance of temperature and moisture
  units = K kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[phy_myj_qsfc]
  standard_name = surface_specific_humidity_for_MYJ_schemes
  long_name = surface air saturation specific humidity for MYJ schemes
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_thz0]
  standard_name = air_potential_temperature_at_top_of_viscous_sublayer
  long_name = potential temperature at viscous sublayer top over water
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_qz0]
  standard_name = specific_humidity_at_top_of_viscous_sublayer
  long_name = specific humidity at_viscous sublayer top over water
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_uz0]
  standard_name = x_wind_at_top_of_viscous_sublayer
  long_name = u wind component at viscous sublayer top over water
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_vz0]
  standard_name = y_wind_at_top_of_viscous_sublayer
  long_name = v wind component at viscous sublayer top over water
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_akhs]
  standard_name = heat_exchange_coefficient_for_MYJ_schemes
  long_name = surface heat exchange_coefficient for MYJ schemes
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_akms]
  standard_name = momentum_exchange_coefficient_for_MYJ_schemes
  long_name = surface momentum exchange_coefficient for MYJ schemes
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_chkqlm]
  standard_name = control_for_surface_layer_evaporation
  long_name = surface layer evaporation switch
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_elflx]
  standard_name = surface_upward_specific_humidity_flux_for_mellor_yamada_janjic_surface_layer_scheme
  long_name = kinematic surface latent heat flux
  units = m s-1 kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_a1u]
  standard_name = weight_for_momentum_at_top_of_viscous_sublayer
  long_name = weight for momentum at viscous layer top
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_a1t]
  standard_name = weight_for_potental_temperature_at_top_of_viscous_sublayer
  long_name = weight for potental temperature at viscous layer top
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[phy_myj_a1q]
  standard_name = weight_for_specific_humidity_at_top_of_viscous_sublayer
  long_name = weight for Specfic Humidity at viscous layer top
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_janjic_surface_layer_scheme .or. flag_for_mellor_yamada_janjic_pbl_scheme)
[dfi_radar_tten]
  standard_name = radar_derived_microphysics_temperature_tendency
  long_name = radar-derived microphysics temperature tendency
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,number_of_radar_derived_temperature_or_convection_suppression_intervals)
  type = real
  kind = kind_phys
  active = (number_of_radar_derived_temperature_or_convection_suppression_intervals>0)
[cap_suppress]
  standard_name = radar_derived_convection_suppression
  long_name = radar-derived convection suppression
  units = unitless
  dimensions = (horizontal_loop_extent,number_of_radar_derived_temperature_or_convection_suppression_intervals)
  type = real
  kind = kind_phys
  active = (number_of_radar_derived_temperature_or_convection_suppression_intervals>0 .and. flag_for_radar_derived_convection_suppression)

########################################################################
[ccpp-table-properties]
  name = GFS_cldprop_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_cldprop_type
  type = ddt
[cv]
  standard_name = convective_cloud_area_fraction_between_sw_radiation_calls_from_cnvc90
  long_name = fraction of convective cloud
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cvt]
  standard_name = pressure_at_convective_cloud_top_between_sw_radiation_calls_from_cnvc90
  long_name = convective cloud top pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cvb]
  standard_name = pressure_at_convective_cloud_base_between_sw_radiation_calls_from_cnvc90
  long_name = convective cloud bottom pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_radtend_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_radtend_type
  type = ddt
[sfcfsw]
  standard_name = surface_sw_fluxes_assuming_total_and_clear_sky_on_radiation_timestep
  long_name = sw radiation fluxes at sfc
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = sfcfsw_type
[sfcflw]
  standard_name = surface_lw_fluxes_assuming_total_and_clear_sky_on_radiation_timestep
  long_name = lw radiation fluxes at sfc
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = sfcflw_type
[htrsw]
  standard_name = tendency_of_air_temperature_due_to_shortwave_heating_on_radiation_timestep
  long_name = total sky sw heating rate
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[htrlw]
  standard_name = tendency_of_air_temperature_due_to_longwave_heating_on_radiation_timestep
  long_name = total sky lw heating rate
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[sfalb]
  standard_name = surface_albedo_for_diffused_shortwave_on_radiation_timestep
  long_name = mean surface diffused sw albedo
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[coszen]
  standard_name = cosine_of_solar_zenith_angle_for_daytime_points_on_radiation_timestep
  long_name = mean cos of zenith angle over rad call period
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[coszdg]
  standard_name = cosine_of_solar_zenith_angle_on_radiation_timestep
  long_name = daytime mean cosz over rad call period
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsflw]
  standard_name = air_temperature_at_surface_adjacent_layer_on_radiation_timestep
  long_name = surface air temp during lw calculation
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[semis]
  standard_name = surface_longwave_emissivity
  long_name = surface lw emissivity in fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[swhc]
  standard_name = tendency_of_air_temperature_due_to_shortwave_heating_assuming_clear_sky_on_radiation_timestep
  long_name = clear sky sw heating rates
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[lwhc]
  standard_name = tendency_of_air_temperature_due_to_longwave_heating_assuming_clear_sky_on_radiation_timestep
  long_name = clear sky lw heating rates
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[lwhd]
  standard_name = tendency_of_air_temperature_due_to_integrated_dynamics_through_earths_atmosphere
  long_name = idea sky lw heating rates
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,6)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_diag_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_diag_type
  type = ddt
[fluxr]
  standard_name = cumulative_radiation_diagnostic
  long_name = time-accumulated 2D radiation-related diagnostic fields
  units = mixed
  dimensions = (horizontal_loop_extent,number_of_diagnostics_variables_for_radiation)
  type = real
  kind = kind_phys
[topfsw]
  standard_name = sw_fluxes_top_atmosphere
  long_name = sw radiation fluxes at toa
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = topfsw_type
[topflw]
  standard_name = lw_fluxes_top_atmosphere
  long_name = lw radiation fluxes at top
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = topflw_type
[srunoff]
  standard_name = surface_runoff
  long_name = surface water runoff (from lsm)
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evbsa]
  standard_name = cumulative_soil_upward_latent_heat_flux_multiplied_by_timestep
  long_name = cumulative soil upward latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evcwa]
  standard_name = cumulative_canopy_upward_latent_heat_flu_multiplied_by_timestep
  long_name = cumulative canopy upward latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snohfa]
  standard_name = cumulative_snow_freezing_rain_upward_latent_heat_flux_multiplied_by_timestep
  long_name = cumulative latent heat flux due to snow and frz rain multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[paha]
  standard_name = cumulative_precipitation_advected_heat_flux_multiplied_by_timestep
  long_name = cumulative precipitation advected heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[transa]
  standard_name = cumulative_transpiration_flux_multiplied_by_timestep
  long_name = cumulative total plant transpiration rate multiplied by timestep
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sbsnoa]
  standard_name = cumulative_snow_deposition_sublimation_upward_latent_heat_flux_multiplied_by_timestep
  long_name = cumulative latent heat flux from snow depo/subl multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snowca]
  standard_name = cumulative_surface_snow_area_fraction_multiplied_by_timestep
  long_name = cumulative surface snow area fraction multiplied by timestep
  units = s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[soilm]
  standard_name = soil_moisture_content
  long_name = soil moisture
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tmpmin]
  standard_name = minimum_temperature_at_2m
  long_name = min temperature at 2m height
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tmpmax]
  standard_name = maximum_temperature_at_2m
  long_name = max temperature at 2m height
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dusfc]
  standard_name = cumulative_surface_x_momentum_flux_for_diag_multiplied_by_timestep
  long_name = cumulative sfc x momentum flux multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dvsfc]
  standard_name = cumulative_surface_y_momentum_flux_for_diag_multiplied_by_timestep
  long_name = cumulative sfc y momentum flux multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dtsfc]
  standard_name = cumulative_surface_upward_sensible_heat_flux_for_diag_multiplied_by_timestep
  long_name = cumulative sfc sensible heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dqsfc]
  standard_name = cumulative_surface_upward_latent_heat_flux_for_diag_multiplied_by_timestep
  long_name = cumulative sfc latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totprcp]
  standard_name = accumulated_lwe_thickness_of_precipitation_amount
  long_name = accumulated total precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totice]
  standard_name = accumulated_lwe_thickness_of_ice_amount
  long_name = accumulated ice precipitation
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totsnw]
  standard_name = accumulated_lwe_thickness_of_snow_amount
  long_name = accumulated snow precipitation
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totgrp]
  standard_name = accumulated_lwe_thickness_of_graupel_amount
  long_name = accumulated graupel precipitation
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totprcpb]
  standard_name = accumulated_lwe_thickness_of_precipitation_amount_in_bucket
  long_name = accumulated total precipitation in bucket
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[toticeb]
  standard_name = accumulated_lwe_thickness_of_ice_amount_in_bucket
  long_name = accumulated ice precipitation in bucket
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totsnwb]
  standard_name = accumulated_lwe_thickness_of_snow_amount_in_bucket
  long_name = accumulated snow precipitation in bucket
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totgrpb]
  standard_name = accumulated_lwe_thickness_of_graupel_amount_in_bucket
  long_name = accumulated graupel precipitation in bucket
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[train]
  standard_name = accumulated_change_of_air_temperature_due_to_FA_scheme
  long_name = accumulated change of air temperature due to FA MP scheme
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (control_for_microphysics_scheme == identifier_for_fer_hires_microphysics_scheme)
[gflux]
  standard_name = cumulative_surface_ground_heat_flux_multiplied_by_timestep
  long_name = cumulative groud conductive heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dlwsfc]
  standard_name = cumulative_surface_downwelling_longwave_flux_multiplied_by_timestep
  long_name = cumulative surface downwelling LW flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ulwsfc]
  standard_name = cumulative_surface_upwelling_longwave_flux_multiplied_by_timestep
  long_name = cumulative surface upwelling LW flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[suntim]
  standard_name = duration_of_sunshine
  long_name = sunshine duration time
  units = s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[runoff]
  standard_name = total_runoff
  long_name = total water runoff
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ep]
  standard_name = cumulative_surface_upward_potential_latent_heat_flux_multiplied_by_timestep
  long_name = cumulative surface upward potential latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tecan]
  standard_name = total_evaporation_of_intercepted_water
  long_name = total evaporation of intercepted water
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tetran]
  standard_name = total_transpiration_rate
  long_name = total transpiration rate
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tedir]
  standard_name = total_soil_surface_evaporation_rate
  long_name = total soil surface evaporation rate
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[twa]
  standard_name = total_water_storage_in_aquifer
  long_name = total water storage in aquifer
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[cldwrk]
  standard_name = cumulative_cloud_work_function
  long_name = cumulative cloud work function (valid only with sas)
  units = m2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dugwd]
  standard_name = time_integral_of_x_stress_due_to_gravity_wave_drag
  long_name = vertically integrated u change by OGWD
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dvgwd]
  standard_name = time_integral_of_y_stress_due_to_gravity_wave_drag
  long_name = vertically integrated v change by OGWD
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[psmean]
  standard_name = cumulative_surface_pressure_multiplied_by_timestep
  long_name = cumulative surface pressure multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cnvprcp]
  standard_name = cumulative_lwe_thickness_of_convective_precipitation_amount
  long_name = cumulative convective precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cnvprcpb]
  standard_name = cumulative_lwe_thickness_of_convective_precipitation_amount_in_bucket
  long_name = cumulative convective precipitation in bucket
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[spfhmin]
  standard_name = minimum_specific_humidity_at_2m
  long_name = minimum specific humidity at 2m height
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[spfhmax]
  standard_name = maximum_specific_humidity_at_2m
  long_name = maximum specific humidity at 2m height
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[u10mmax]
  standard_name = maximum_x_wind_at_10m
  long_name = maximum x wind at 10 m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[v10mmax]
  standard_name = maximum_y_wind_at_10m
  long_name = maximum y wind at 10 m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[wind10mmax]
  standard_name = maximum_wind_at_10m
  long_name = maximum wind speed at 10 m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[u10max]
  standard_name = maximum_u_wind_at_10m_over_maximum_hourly_time_interval
  long_name = maximum u wind at 10m over maximum hourly time interval
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[v10max]
  standard_name = maximum_v_wind_at_10m_over_maximum_hourly_time_interval
  long_name = maximum v wind at 10m over maximum hourly time interval
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[spd10max]
  standard_name = maximum_wind_at_10m_over_maximum_hourly_time_interval
  long_name = maximum wind at 10m over maximum hourly time interval
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rain]
  standard_name = lwe_thickness_of_precipitation_amount_on_dynamics_timestep
  long_name = total rain at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rainc]
  standard_name = lwe_thickness_of_convective_precipitation_amount_on_dynamics_timestep
  long_name = convective rain at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ice]
  standard_name = lwe_thickness_of_ice_amount_on_dynamics_timestep
  long_name = ice fall at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snow]
  standard_name = lwe_thickness_of_snow_amount_on_dynamics_timestep
  long_name = snow fall at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[graupel]
  standard_name = lwe_thickness_of_graupel_amount_on_dynamics_timestep
  long_name = graupel fall at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[u10m]
  standard_name = x_wind_at_10m
  long_name = 10 meter u wind speed
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[v10m]
  standard_name = y_wind_at_10m
  long_name = 10 meter v wind speed
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dpt2m]
  standard_name = dewpoint_temperature_at_2m
  long_name = 2 meter dewpoint temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zlvl]
  standard_name = height_above_ground_at_lowest_model_layer
  long_name = layer 1 height above ground (not MSL)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[psurf]
  standard_name = surface_air_pressure_diag
  long_name = surface air pressure diagnostic
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[pwat]
  standard_name = column_precipitable_water
  long_name = precipitable water
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[t1]
  standard_name = air_temperature_at_lowest_model_layer_for_diag
  long_name = layer 1 temperature for diag
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[q1]
  standard_name = water_vapor_specific_humidity_at_lowest_model_layer_for_diag
  long_name = layer 1 specific humidity for diag
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[u1]
  standard_name = x_wind_at_lowest_model_layer_for_diag
  long_name = layer 1 x wind for diag
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[v1]
  standard_name = y_wind_at_lowest_model_layer_for_diag
  long_name = layer 1 y wind for diag
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[chh]
  standard_name = surface_drag_mass_flux_for_heat_and_moisture_in_air
  long_name = thermal exchange coefficient
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cmm]
  standard_name = surface_drag_wind_speed_for_momentum_in_air
  long_name = momentum exchange coefficient
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dlwsfci]
  standard_name = surface_downwelling_longwave_flux
  long_name = surface downwelling longwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ulwsfci]
  standard_name = surface_upwelling_longwave_flux
  long_name = surface upwelling longwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dswsfci]
  standard_name = surface_downwelling_shortwave_flux
  long_name = surface downwelling shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[nswsfci]
  standard_name = surface_net_downwelling_shortwave_flux
  long_name = surface net downwelling shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[uswsfci]
  standard_name = surface_upwelling_shortwave_flux
  long_name = surface upwelling shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dusfci]
  standard_name = instantaneous_surface_x_momentum_flux_for_diag
  long_name = instantaneous sfc x momentum flux multiplied by timestep
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dvsfci]
  standard_name = instantaneous_surface_y_momentum_flux_for_diag
  long_name = instantaneous sfc y momentum flux multiplied by timestep
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dtsfci]
  standard_name = instantaneous_surface_upward_sensible_heat_flux_for_diag
  long_name = instantaneous sfc sensible heat flux multiplied by timestep
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dqsfci]
  standard_name = instantaneous_surface_upward_latent_heat_flux_for_diag
  long_name = instantaneous sfc latent heat flux multiplied by timestep
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gfluxi]
  standard_name = instantaneous_surface_ground_heat_flux
  long_name = instantaneous sfc ground heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[pahi]
  standard_name = instantaneous_total_precipitation_advected_heat
  long_name = instantaneous precipitation advected heat - total
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (control_for_land_surface_scheme == identifier_for_noahmp_land_surface_scheme)
[epi]
  standard_name = instantaneous_surface_potential_evaporation
  long_name = instantaneous sfc potential evaporation
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[smcwlt2]
  standard_name = volume_fraction_of_condensed_water_in_soil_at_wilting_point
  long_name = wilting point (volumetric)
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[smcref2]
  standard_name = threshold_volume_fraction_of_condensed_water_in_soil
  long_name = soil moisture threshold (volumetric)
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sr]
  standard_name = ratio_of_snowfall_to_rainfall
  long_name = snow ratio: ratio of snow to total precipitation (explicit only)
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[wet1]
  standard_name = normalized_soil_wetness
  long_name = normalized soil wetness
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (.not. control_for_land_surface_scheme == identifier_for_ruc_land_surface_scheme)
[tdomr]
  standard_name = dominant_rain_type
  long_name = dominant rain type
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tdomzr]
  standard_name = dominant_freezing_rain_type
  long_name = dominant freezing rain type
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tdomip]
  standard_name = dominant_sleet_type
  long_name = dominant sleet type
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tdoms]
  standard_name = dominant_snow_type
  long_name = dominant snow type
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zmtnblck]
  standard_name = level_of_dividing_streamline
  long_name = level of the dividing streamline
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dtend]
  standard_name = cumulative_change_of_state_variables
  long_name = diagnostic tendencies for state variables
  units = mixed
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,cumulative_change_of_state_variables_outer_index_max)
  type = real
  kind = kind_phys
  active = (flag_for_diagnostics_3D)
[refdmax]
  standard_name = maximum_reflectivity_at_1km_agl_over_maximum_hourly_time_interval
  long_name = maximum reflectivity at 1km agl over maximum hourly time interval
  units = dBZ
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[refdmax263k]
  standard_name = maximum_reflectivity_at_minus10c_over_maximum_hourly_time_interval
  long_name = maximum reflectivity at minus10c over maximum hourly time interval
  units = dBZ
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[t02max]
  standard_name = maximum_temperature_at_2m_over_maximum_hourly_time_interval
  long_name = maximum temperature at 2m over maximum hourly time interval
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[t02min]
  standard_name = minimum_temperature_at_2m_over_maximum_hourly_time_interval
  long_name = minumum temperature at 2m over maximum hourly time interval
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rh02max]
  standard_name = maximum_relative_humidity_at_2m_over_maximum_hourly_time_interval
  long_name = maximum relative humidity at 2m over maximum hourly time interval
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rh02min]
  standard_name = minimum_relative_humidity_at_2m_over_maximum_hourly_time_interval
  long_name = minumum relative humidity at 2m over maximum hourly time interval
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[pratemax]
  standard_name = maximum_precipitation_rate_over_maximum_hourly_time_interval
  long_name = maximum precipitation rate over maximum hourly time interval
  units = mm h-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[upd_mf]
  standard_name = cumulative_atmosphere_updraft_convective_mass_flux
  long_name = cumulative updraft mass flux
  units = kg m-1 s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_tracer_diagnostics_3D)
[dwn_mf]
  standard_name = cumulative_atmosphere_downdraft_convective_mass_flux
  long_name = cumulative downdraft mass flux
  units = kg m-1 s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_tracer_diagnostics_3D)
[det_mf]
  standard_name = cumulative_atmosphere_detrainment_convective_mass_flux
  long_name = cumulative detrainment mass flux
  units = kg m-1 s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_tracer_diagnostics_3D)
[refl_10cm]
  standard_name = radar_reflectivity_10cm
  long_name = instantaneous refl_10cm
  units = dBZ
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[dkt]
  standard_name = atmosphere_heat_diffusivity
  long_name = atmospheric heat diffusivity
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[dku]
  standard_name = atmosphere_momentum_diffusivity
  long_name = atmospheric momentum diffusivity
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[cldfra]
  standard_name = instantaneous_3d_cloud_fraction
  long_name = instantaneous 3D cloud fraction for all MPs
  units = frac
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[cldfra2d]
  standard_name = max_in_column_cloud_fraction
  long_name = instantaneous 2D (max-in-column) cloud fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[lwp_ex]
  standard_name = liq_water_path_from_microphysics
  long_name = total liquid water path from explicit microphysics
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[iwp_ex]
  standard_name = ice_water_path_from_microphysics
  long_name = total ice water path from explicit microphysics
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[lwp_fc]
  standard_name = liq_water_path_from_cloud_fraction
  long_name = total liquid water path from cloud fraction scheme
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[iwp_fc]
  standard_name = ice_water_path_from_cloud_fraction
  long_name = total ice water path from cloud fraction scheme
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[total_albedo]
  standard_name = total_sky_albedo
  long_name = total sky albedo at toa
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[edmf_a]
  standard_name = emdf_updraft_area
  long_name = updraft area from mass flux scheme
  units = frac
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[edmf_w]
  standard_name = emdf_updraft_vertical_velocity
  long_name = updraft vertical velocity from mass flux scheme
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[edmf_qt]
  standard_name = emdf_updraft_total_water
  long_name = updraft total water from mass flux scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[edmf_thl]
  standard_name = emdf_updraft_theta_l
  long_name = updraft theta-l from mass flux scheme
  units = K
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[edmf_ent]
  standard_name = emdf_updraft_entrainment_rate
  long_name = updraft entranment rate from mass flux scheme
  units = s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[edmf_qc]
  standard_name = emdf_updraft_cloud_water
  long_name = updraft cloud water from mass flux scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[sub_thl]
  standard_name = theta_subsidence_tendency
  long_name = updraft theta subsidence tendency
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[sub_sqv]
  standard_name = water_vapor_subsidence_tendency
  long_name = updraft water vapor subsidence tendency
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[det_thl]
  standard_name = theta_detrainment_tendency
  long_name = updraft theta detrainment tendency
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[det_sqv]
  standard_name = water_vapor_detrainment_tendency
  long_name = updraft water vapor detrainment tendency
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. (control_for_additional_diagnostics_in_mellor_yamada_nakanishi_niino_pbl_scheme .ne. 0))
[dqke]
  standard_name = total_time_rate_of_change_of_tke
  long_name = total tke tendency
  units = m2 s-3
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. control_for_tke_budget_output)
[qwt]
  standard_name = tke_tendency_due_to_vertical_transport
  long_name = tke tendency due to vertical transport and diffusion
  units = m2 s-3
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. control_for_tke_budget_output)
[qshear]
  standard_name = tke_tendency_due_to_shear
  long_name = tke tendency due to shear
  units = m2 s-3
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. control_for_tke_budget_output)
[qbuoy]
  standard_name = tke_tendency_due_to_buoyancy
  long_name = tke tendency due to buoyancy production or consumption
  units = m2 s-3
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. control_for_tke_budget_output)
[qdiss]
  standard_name = tke_tendency_due_to_dissipation
  long_name = tke tendency due to the dissipation of tke
  units = m2 s-3
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme .and. control_for_tke_budget_output)
[nupdraft]
  standard_name = number_of_plumes
  long_name = number of plumes per grid column
  units = count
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[maxMF]
  standard_name = maximum_mass_flux
  long_name = maximum mass flux within a column
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[ktop_shallow]
  standard_name = k_level_of_highest_reaching_plume
  long_name = k-level of highest reaching plume
  units = count
  dimensions = (horizontal_loop_extent)
  type = integer
[ktop_plume]
  standard_name = k_level_of_highest_plume
  long_name = k-level of highest plume
  units = count
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[exch_h]
  standard_name = atmosphere_heat_diffusivity_for_mynnedmf
  long_name = diffusivity for heat for MYNN PBL (defined for all mass levels)
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[exch_m]
  standard_name = atmosphere_momentum_diffusivity_for_mynnedmf
  long_name = diffusivity for momentum for MYNN PBL (defined for all mass levels)
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mellor_yamada_nakanishi_niino_pbl_scheme)
[zmtb]
  standard_name = time_integral_of_height_of_mountain_blocking
  long_name = time integral of height of mountain blocking drag
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zlwb]
  standard_name = time_integral_of_height_of_low_level_wave_breaking
  long_name = time integral of height of drag due to low level wave breaking
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zogw]
  standard_name = time_integral_of_height_of_launch_level_of_orographic_gravity_wave
  long_name = time integral of height of launch level of orographic gravity wave
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_tofd]
  standard_name = time_integral_of_momentum_flux_due_to_turbulent_orographic_form_drag
  long_name = time integral of momentum flux due to TOFD
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_mtb]
  standard_name = time_integral_of_momentum_flux_due_to_mountain_blocking_drag
  long_name = time integral of momentum flux due to mountain blocking drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_ogw]
  standard_name = time_integral_of_momentum_flux_due_to_orographic_gravity_wave_drag
  long_name = time integral of momentum flux due to orographic gravity wave drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_ngw]
  standard_name = time_integral_of_momentum_flux_due_to_nonstationary_gravity_wave
  long_name = time integral of momentum flux due to nonstationary gravity waves
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[du3dt_mtb]
  standard_name = time_integral_of_change_in_x_wind_due_to_mountain_blocking_drag
  long_name = time integral of change in x wind due to mountain blocking drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_unified_gravity_wave_physics_diagnostics)
[du3dt_ogw]
  standard_name = time_integral_of_change_in_x_wind_due_to_orographic_gravity_wave_drag
  long_name = time integral of change in x wind due to orographic gw drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_unified_gravity_wave_physics_diagnostics)
[du3dt_tms]
  standard_name = time_integral_of_change_in_x_wind_due_to_turbulent_orographic_form_drag
  long_name = time integral of change in x wind due to TOFD
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_unified_gravity_wave_physics_diagnostics)
[du3dt_ngw]
  standard_name = time_integral_of_change_in_x_wind_due_to_nonstationary_gravity_wave
  long_name = time integral of change in x wind due to NGW
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_unified_gravity_wave_physics_diagnostics)
[dudt_gw]
  standard_name = tendency_of_x_wind_due_to_gravity_wave_drag
  long_name = zonal wind tendency due to all GWs
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[dvdt_gw]
  standard_name = tendency_of_y_wind_due_to_gravity_wave_drag
  long_name = meridional wind tendency due to all GWs
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[dtdt_gw]
  standard_name = tendency_of_air_temperature_due_to_gravity_wave_drag
  long_name = air temperature tendency due to all GWs
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[kdis_gw]
  standard_name = atmosphere_momentum_diffusivity_due_to_gravity_wave_drag
  long_name = eddy mixing due to all GWs
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
[dudt_ogw]
  standard_name = tendency_of_x_wind_due_to_mesoscale_orographic_gravity_wave_drag
  long_name = x momentum tendency from meso scale ogw
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33 .or. control_for_drag_suite_gravity_wave_drag==22)
[dvdt_ogw]
  standard_name = tendency_of_y_wind_due_to_mesoscale_orographic_gravity_wave_drag
  long_name = y momentum tendency from meso scale ogw
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33 .or. control_for_drag_suite_gravity_wave_drag==22)
[du_ogwcol]
  standard_name = vertically_integrated_x_momentum_flux_due_to_mesoscale_orographic_gravity_wave_drag
  long_name = integrated x momentum flux from meso scale ogw
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33 .or. control_for_drag_suite_gravity_wave_drag==22)
[dv_ogwcol]
  standard_name = vertically_integrated_y_momentum_flux_due_to_mesoscale_orographic_gravity_wave_drag
  long_name = integrated y momentum flux from meso scale ogw
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33 .or. control_for_drag_suite_gravity_wave_drag==22)
[dudt_obl]
  standard_name = tendency_of_x_momentum_due_to_blocking_drag
  long_name = x momentum tendency from blocking drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33 .or. control_for_drag_suite_gravity_wave_drag==22)
[dvdt_obl]
  standard_name = tendency_of_y_momentum_due_to_blocking_drag
  long_name = y momentum tendency from blocking drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33 .or. control_for_drag_suite_gravity_wave_drag==22)
[du_oblcol]
  standard_name = vertically_integrated_x_momentum_flux_due_to_blocking_drag
  long_name = integrated x momentum flux from blocking drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33 .or. control_for_drag_suite_gravity_wave_drag==22)
[dv_oblcol]
  standard_name = vertically_integrated_y_momentum_flux_due_to_blocking_drag
  long_name = integrated y momentum flux from blocking drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33)
[dudt_oss]
  standard_name = tendency_of_x_momentum_due_to_small_scale_gravity_wave_drag
  long_name = x momentum tendency from small scale gwd
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33)
[dvdt_oss]
  standard_name = tendency_of_y_momentum_due_to_small_scale_gravity_wave_drag
  long_name = y momentum tendency from small scale gwd
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33)
[du_osscol]
  standard_name = vertically_integrated_x_momentum_flux_due_to_small_scale_gravity_wave_drag
  long_name = integrated x momentum flux from small scale gwd
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33)
[dv_osscol]
  standard_name = vertically_integrated_y_momentum_flux_due_to_small_scale_gravity_wave_drag
  long_name = integrated y momentum flux from small scale gwd
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33)
[dudt_ofd]
  standard_name = tendency_of_x_momentum_due_to_form_drag
  long_name = x momentum tendency from form drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33)
[dvdt_ofd]
  standard_name = tendency_of_y_momentum_due_to_form_drag
  long_name = y momentum tendency from form drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33)
[du_ofdcol]
  standard_name = vertically_integrated_x_momentum_flux_due_to_form_drag
  long_name = integrated x momentum flux from form drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33)
[dv_ofdcol]
  standard_name = vertically_integrated_y_momentum_flux_due_to_form_drag
  long_name = integrated y momentum flux from form drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_ugwp_version_1 .or. control_for_drag_suite_gravity_wave_drag==33)
[dv3dt_ngw]
  standard_name = time_integral_of_change_in_y_wind_due_to_nonstationary_gravity_wave
  long_name = time integral of change in y wind due to NGW
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_layer_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_unified_gravity_wave_physics_diagnostics)
[thompson_ext_diag3d]
  standard_name = extended_diagnostics_output_from_thompson_microphysics
  long_name = set of 3d arrays for extended diagnostics output from thompson microphysics
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,number_of_3d_diagnostic_output_arrays_from_thompson_microphysics)
  type = real
  kind = kind_phys
  active = (flag_for_extended_diagnostic_output_from_thompson_microphysics)
[aux2d]
  standard_name = auxiliary_2d_arrays
  long_name = auxiliary 2d arrays to output (for debugging)
  units = none
  dimensions = (horizontal_loop_extent,number_of_xyz_dimensioned_auxiliary_arrays)
  type = real
  kind = kind_phys
  active = (number_of_xy_dimensioned_auxiliary_arrays > 0)
[aux3d]
  standard_name = auxiliary_3d_arrays
  long_name = auxiliary 3d arrays to output (for debugging)
  units = none
  dimensions = (horizontal_loop_extent,vertical_layer_dimension,number_of_xyz_dimensioned_auxiliary_arrays)
  type = real
  kind = kind_phys
  active = (number_of_xyz_dimensioned_auxiliary_arrays > 0)
[old_pgr]
  standard_name = surface_air_pressure_from_previous_timestep
  long_name = surface air pressure from previous timestep
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_data_type
  type = ddt
  dependencies =

[ccpp-arg-table]
  name = GFS_data_type
  type = ddt
[Statein]
  standard_name = GFS_statein_type_instance
  long_name = prognostic state data in from dycore
  units = DDT
  dimensions = ()
  type = GFS_statein_type
[Stateout]
  standard_name = GFS_stateout_type_instance
  long_name = prognostic state or tendencies return to dycore
  units = DDT
  dimensions = ()
  type = GFS_stateout_type
[Sfcprop]
  standard_name = GFS_sfcprop_type_instance
  long_name = surface fields
  units = DDT
  dimensions = ()
  type = GFS_sfcprop_type
[Coupling]
  standard_name = GFS_coupling_type_instance
  long_name = fields to/from coupling with other components (land/ice/ocean)
  units = DDT
  dimensions = ()
  type = GFS_coupling_type
[Grid]
  standard_name = GFS_grid_type_instance
  long_name = grid and interpolation related data
  units = DDT
  dimensions = ()
  type = GFS_grid_type
[Tbd]
  standard_name = GFS_tbd_type_instance
  long_name = to be determined data that doesn't fit in any one container
  units = DDT
  dimensions = ()
  type = GFS_tbd_type
[Cldprop]
  standard_name = GFS_cldprop_type_instance
  long_name = cloud fields needed by radiation from physics
  units = DDT
  dimensions = ()
  type = GFS_cldprop_type
[Radtend]
  standard_name = GFS_radtend_type_instance
  long_name = radiation tendencies needed in physics
  units = DDT
  dimensions = ()
  type = GFS_radtend_type
[Intdiag]
  standard_name = GFS_diag_type_instance
  long_name = fields targeted for diagnostic output
  units = DDT
  dimensions = ()
  type = GFS_diag_type

########################################################################
[ccpp-table-properties]
  name = GFS_typedefs
  type = module
  relative_path = ../physics/physics
  dependencies = machine.F,physcons.F90,radlw_param.f,radsw_param.f
  dependencies = GFDL_parse_tracers.F90,h2o_def.f,ozne_def.f

[ccpp-arg-table]
  name = GFS_typedefs
  type = module
[GFS_cldprop_type]
  standard_name = GFS_cldprop_type
  long_name = definition of type GFS_cldprop_type
  units = DDT
  dimensions = ()
  type = GFS_cldprop_type
[GFS_control_type]
  standard_name = GFS_control_type
  long_name = definition of type GFS_control_type
  units = DDT
  dimensions = ()
  type = GFS_control_type
[GFS_coupling_type]
  standard_name = GFS_coupling_type
  long_name = definition of type GFS_coupling_type
  units = DDT
  dimensions = ()
  type = GFS_coupling_type
[GFS_data_type]
  standard_name = GFS_data_type
  long_name = definition of type GFS_data_type
  units = DDT
  dimensions = ()
  type = GFS_data_type
[GFS_diag_type]
  standard_name = GFS_diag_type
  long_name = definition of type GFS_diag_type
  units = DDT
  dimensions = ()
  type = GFS_diag_type
[GFS_grid_type]
  standard_name = GFS_grid_type
  long_name = definition of type GFS_grid_type
  units = DDT
  dimensions = ()
  type = GFS_grid_type
[GFS_radtend_type]
  standard_name = GFS_radtend_type
  long_name = definition of type GFS_radtend_type
  units = DDT
  dimensions = ()
  type = GFS_radtend_type
[GFS_sfcprop_type]
  standard_name = GFS_sfcprop_type
  long_name = definition of type GFS_sfcprop_type
  units = DDT
  dimensions = ()
  type = GFS_sfcprop_type
[GFS_statein_type]
  standard_name = GFS_statein_type
  long_name = definition of type GFS_statein_type
  units = DDT
  dimensions = ()
  type = GFS_statein_type
[GFS_stateout_type]
  standard_name = GFS_stateout_type
  long_name = definition of type GFS_stateout_type
  units = DDT
  dimensions = ()
  type = GFS_stateout_type
[GFS_tbd_type]
  standard_name = GFS_tbd_type
  long_name = definition of type GFS_tbd_type
  units = DDT
  dimensions = ()
  type = GFS_tbd_type
[LTP]
  standard_name = extra_top_layer
  long_name = extra top layer for radiation
  units = none
  dimensions = ()
  type = integer
[con_cliq]
  standard_name = specific_heat_of_liquid_water_at_constant_pressure
  long_name = specific heat of liquid water at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_cp]
  standard_name = specific_heat_of_dry_air_at_constant_pressure
  long_name = specific heat of dry air at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_cvap]
  standard_name = specific_heat_of_water_vapor_at_constant_pressure
  long_name = specific heat of water vapor at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_eps]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants
  long_name = rd/rv
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_epsq]
  standard_name = minimum_value_of_specific_humidity
  long_name = floor value for specific humidity
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_epsqs]
  standard_name = minimum_value_of_saturation_mixing_ratio
  long_name = floor value for saturation mixing ratio
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_omega]
  standard_name = angular_velocity_of_earth
  long_name = angular velocity of earth
  units = s-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_rerth]
  standard_name = radius_of_earth
  long_name = radius of earth
  units = m
  dimensions = ()
  type = real
  kind = kind_phys
[con_epsm1]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants_minus_one
  long_name = (rd/rv) - 1
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_rocp]
  standard_name = ratio_of_gas_constant_dry_air_to_specific_heat_of_dry_air_at_constant_pressure
  long_name = (rd/cp)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_rog]
  standard_name = ratio_of_gas_constant_dry_air_to_gravitational_acceleration
  long_name = (rd/g)
  units = J s2 K-1 kg-1 m-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_fvirt]
  standard_name = ratio_of_vapor_to_dry_air_gas_constants_minus_one
  long_name = (rv/rd) - 1 (rv = ideal gas constant for water vapor)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_g]
  standard_name = gravitational_acceleration
  long_name = gravitational acceleration
  units = m s-2
  dimensions = ()
  type = real
  kind = kind_phys
[con_hvap]
  standard_name = latent_heat_of_vaporization_of_water_at_0C
  long_name = latent heat of evaporation/sublimation
  units = J kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_hfus]
  standard_name = latent_heat_of_fusion_of_water_at_0C
  long_name = latent heat of fusion
  units = J kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_pi]
  standard_name = pi
  long_name = ratio of a circle's circumference to its diameter
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_rd]
  standard_name = gas_constant_of_dry_air
  long_name = ideal gas constant for dry air
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_rv]
  standard_name = gas_constant_water_vapor
  long_name = ideal gas constant for water vapor
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_t0c]
  standard_name = temperature_at_zero_celsius
  long_name = temperature at 0 degree Celsius
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[con_ttp]
  standard_name = triple_point_temperature_of_water
  long_name = triple point temperature of water
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[cimin]
  standard_name = minimum_sea_ice_concentration
  long_name = minimum sea ice concentration
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[rlapse]
  standard_name = air_temperature_lapse_rate_constant
  long_name = environmental air temperature lapse rate constant
  units = K m-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_jcal]
  standard_name = joules_per_calorie_constant
  long_name = joules per calorie constant
  units = J cal-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_rhw0]
  standard_name = sea_water_reference_density
  long_name = sea water reference density
  units = kg m-3
  dimensions = ()
  type = real
  kind = kind_phys
[con_sbc]
  standard_name = stefan_boltzmann_constant
  long_name = Stefan-Boltzmann constant
  units = W m-2 K-4
  dimensions = ()
  type = real
  kind = kind_phys
[con_tice]
  standard_name = freezing_point_temperature_of_seawater
  long_name = freezing point temperature of seawater
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[con_p0]
  standard_name = standard_atmospheric_pressure
  long_name = standard atmospheric pressure
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[rhowater]
  standard_name = fresh_liquid_water_density_at_0c
  long_name = density of liquid water
  units = kg m-3
  dimensions = ()
  type = real
  kind = kind_phys
[con_csol]
  standard_name = specific_heat_of_ice_at_constant_pressure
  long_name = specific heat of ice at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_psat]
  standard_name = saturation_pressure_at_triple_point_of_water
  long_name = saturation pressure at triple point of water
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[karman]
  standard_name = von_karman_constant
  long_name = Von Karman constant
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[rainmin]
  standard_name = lwe_thickness_of_minimum_rain_amount
  long_name = liquid water equivalent thickness of minimum rain amount
  units = m
  dimensions = ()
  type = real
  kind = kind_phys
