[ccpp-table-properties]
  name = GFS_statein_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_statein_type
  type = ddt
[phii]
  standard_name = geopotential_at_interface
  long_name = geopotential at model layer interfaces
  units = m2 s-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
[prsi]
  standard_name = air_pressure_at_interface
  long_name = air pressure at model layer interfaces
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
[prsik]
  standard_name = dimensionless_exner_function_at_model_interfaces
  long_name = dimensionless Exner function at model layer interfaces
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
[prsik(:,1)]
  standard_name = dimensionless_exner_function_at_lowest_model_interface
  long_name = dimensionless Exner function at lowest model interface
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[phil]
  standard_name = geopotential
  long_name = geopotential at model layer centers
  units = m2 s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[prsl]
  standard_name = air_pressure
  long_name = mean layer pressure
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[prsl(:,1)]
  standard_name = air_pressure_at_lowest_model_layer
  long_name = mean pressure at lowest model layer
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[prslk]
  standard_name = dimensionless_exner_function_at_model_layers
  long_name = dimensionless Exner function at model layer centers
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[prslk(:,1)]
  standard_name = dimensionless_exner_function_at_lowest_model_layer
  long_name = dimensionless Exner function at lowest model layer
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[pgr]
  standard_name = surface_air_pressure
  long_name = surface pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ugrs]
  standard_name = x_wind
  long_name = zonal wind
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[ugrs(:,1)]
  standard_name = x_wind_at_lowest_model_layer
  long_name = zonal wind at lowest model layer
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vgrs]
  standard_name = y_wind
  long_name = meridional wind
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[vgrs(:,1)]
  standard_name = y_wind_at_lowest_model_layer
  long_name = meridional wind at lowest model layer
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vvl]
  standard_name = omega
  long_name = layer mean vertical velocity
  units = Pa s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[tgrs]
  standard_name = air_temperature
  long_name = model layer mean temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[tgrs(:,1)]
  standard_name = air_temperature_at_lowest_model_layer
  long_name = mean temperature at lowest model layer
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qgrs]
  standard_name = tracer_concentration
  long_name = model layer mean tracer concentration
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_tracers)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_water_vapor)]
  standard_name = water_vapor_specific_humidity
  long_name = water vapor specific humidity
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,1,index_for_water_vapor)]
  standard_name = water_vapor_specific_humidity_at_lowest_model_layer
  long_name = water vapor specific humidity at lowest model layer
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_liquid_cloud_condensate)]
  standard_name = cloud_condensed_water_mixing_ratio
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,1,index_for_liquid_cloud_condensate)]
  standard_name = cloud_condensed_water_mixing_ratio_at_lowest_model_layer
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates) at lowest model layer
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_ice_cloud_condensate)]
  standard_name = ice_water_mixing_ratio
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_rain_water)]
  standard_name = rain_water_mixing_ratio
  long_name = ratio of mass of rain water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_snow_water)]
  standard_name = snow_water_mixing_ratio
  long_name = ratio of mass of snow water to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_graupel)]
  standard_name = graupel_mixing_ratio
  long_name = ratio of mass of graupel to mass of dry air plus vapor (without condensates)
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_ozone)]
  standard_name = ozone_mixing_ratio
  long_name = ozone mixing ratio
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_water_friendly_aerosols)]
  standard_name = water_friendly_aerosol_number_concentration
  long_name = number concentration of water-friendly aerosols
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  active = (index_for_water_friendly_aerosols > 0)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_ice_friendly_aerosols)]
  standard_name = ice_friendly_aerosol_number_concentration
  long_name = number concentration of ice-friendly aerosols
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  active = (index_for_ice_friendly_aerosols > 0)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_liquid_cloud_number_concentration)]
  standard_name = cloud_droplet_number_concentration
  long_name = number concentration of cloud droplets (liquid)
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (index_for_liquid_cloud_number_concentration > 0)
[qgrs(:,:,index_for_ice_cloud_number_concentration)]
  standard_name = ice_number_concentration
  long_name = number concentration of ice
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_rain_number_concentration)]
  standard_name = rain_number_concentration
  long_name = number concentration of rain
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_snow_number_concentration)]
  standard_name = snow_number_concentration
  long_name = number concentration of snow
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_graupel_number_concentration)]
  standard_name = graupel_number_concentration
  long_name = number concentration of graupel
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[qgrs(:,:,index_for_turbulent_kinetic_energy)]
  standard_name = turbulent_kinetic_energy
  long_name = turbulent kinetic energy
  units = J
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[diss_est]
  standard_name = dissipation_estimate_of_air_temperature_at_model_layers
  long_name = dissipation estimate model layer mean temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_stateout_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_stateout_type
  type = ddt
[gu0]
  standard_name = x_wind_updated_by_physics
  long_name = zonal wind updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gu0(:,1)]
  standard_name = x_wind_at_lowest_model_layer_updated_by_physics
  long_name = zonal wind at lowest model layer updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gv0]
  standard_name = y_wind_updated_by_physics
  long_name = meridional wind updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gv0(:,1)]
  standard_name = y_wind_at_lowest_model_layer_updated_by_physics
  long_name = meridional wind at lowest model layer updated by physics
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gt0]
  standard_name = air_temperature_updated_by_physics
  long_name = temperature updated by physics
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gt0(:,1)]
  standard_name = air_temperature_at_lowest_model_layer_updated_by_physics
  long_name = temperature at lowest model layer updated by physics
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gq0]
  standard_name = tracer_concentration_updated_by_physics
  long_name = tracer concentration updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_tracers)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_water_vapor)]
  standard_name = water_vapor_specific_humidity_updated_by_physics
  long_name = water vapor specific humidity updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,1,index_for_water_vapor)]
  standard_name = water_vapor_specific_humidity_at_lowest_model_layer_updated_by_physics
  long_name = water vapor specific humidity at lowest model layer updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_ozone)]
  standard_name = ozone_concentration_updated_by_physics
  long_name = ozone concentration updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_liquid_cloud_condensate)]
  standard_name = cloud_condensed_water_mixing_ratio_updated_by_physics
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_ice_cloud_condensate)]
  standard_name = ice_water_mixing_ratio_updated_by_physics
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_rain_water)]
  standard_name = rain_water_mixing_ratio_updated_by_physics
  long_name = ratio of mass of rain water to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_snow_water)]
  standard_name = snow_water_mixing_ratio_updated_by_physics
  long_name = ratio of mass of snow water to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_graupel)]
  standard_name = graupel_mixing_ratio_updated_by_physics
  long_name = ratio of mass of graupel to mass of dry air plus vapor (without condensates) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_mass_weighted_rime_factor)]
  standard_name = mass_weighted_rime_factor_updated_by_physics
  long_name = mass weighted rime factor updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_water_friendly_aerosols)]
  standard_name = water_friendly_aerosol_number_concentration_updated_by_physics
  long_name = number concentration of water-friendly aerosols updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (index_for_water_friendly_aerosols > 0)
[gq0(:,:,index_for_ice_friendly_aerosols)]
  standard_name = ice_friendly_aerosol_number_concentration_updated_by_physics
  long_name = number concentration of ice-friendly aerosols updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (index_for_ice_friendly_aerosols > 0)
[gq0(:,:,index_for_liquid_cloud_number_concentration)]
  standard_name = cloud_droplet_number_concentration_updated_by_physics
  long_name = number concentration of cloud droplets updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (index_for_liquid_cloud_number_concentration > 0)
[gq0(:,:,index_for_ice_cloud_number_concentration)]
  standard_name = ice_number_concentration_updated_by_physics
  long_name = number concentration of ice updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_rain_number_concentration)]
  standard_name = rain_number_concentration_updated_by_physics
  long_name = number concentration of rain updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_snow_number_concentration)]
  standard_name = snow_number_concentration_updated_by_physics
  long_name = number concentration of snow updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_graupel_number_concentration)]
  standard_name = graupel_number_concentration_updated_by_physics
  long_name = number concentration of graupel updated by physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gq0(:,:,index_for_cloud_amount)]
  standard_name = cloud_fraction_updated_by_physics
  long_name = cloud fraction updated by physics
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_sfcprop_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_sfcprop_type
  type = ddt
[slmsk]
  standard_name = sea_land_ice_mask_real
  long_name = landmask: sea/land/ice=0/1/2
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[oceanfrac]
  standard_name = sea_area_fraction
  long_name = fraction of horizontal grid area occupied by ocean
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[landfrac]
  standard_name = land_area_fraction
  long_name = fraction of horizontal grid area occupied by land
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[lakefrac]
  standard_name = lake_area_fraction
  long_name = fraction of horizontal grid area occupied by lake
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[lakedepth]
  standard_name = lake_depth
  long_name = lake depth
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfc]
  standard_name = surface_skin_temperature
  long_name = surface skin temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfco]
  standard_name = sea_surface_temperature
  long_name = sea surface temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfcl]
  standard_name = surface_skin_temperature_over_land
  long_name = surface skin temperature over land
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tisfc]
  standard_name = sea_ice_temperature
  long_name = sea ice surface skin temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tiice]
  standard_name = internal_ice_temperature
  long_name = sea ice internal temperature
  units = K
  dimensions = (horizontal_loop_extent,ice_vertical_dimension)
  type = real
  kind = kind_phys
[snowd]
  standard_name = surface_snow_thickness_water_equivalent
  long_name = water equivalent snow depth
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorl]
  standard_name = surface_roughness_length
  long_name = surface roughness length
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorlo]
  standard_name = surface_roughness_length_over_ocean
  long_name = surface roughness length over ocean
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorll]
  standard_name = surface_roughness_length_over_land
  long_name = surface roughness length over land
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorli]
  standard_name = surface_roughness_length_over_ice
  long_name = surface roughness length over ice
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorlw]
  standard_name = surface_roughness_length_from_wave_model
  long_name = surface roughness length from wave model
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fice]
  standard_name = sea_ice_concentration
  long_name = ice fraction over open water
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[hprime]
  standard_name = statistical_measures_of_subgrid_orography
  long_name = orographic metrics
  units = various
  dimensions = (horizontal_loop_extent,number_of_statistical_measures_of_subgrid_orography)
  type = real
  kind = kind_phys
[hprime(:,1)]
  standard_name = standard_deviation_of_subgrid_orography
  long_name = standard deviation of subgrid orography
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[z0base]
  standard_name = baseline_surface_roughness_length
  long_name = baseline surface roughness length for momentum in meter
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[semisbase]
  standard_name = baseline_surface_longwave_emissivity
  long_name = baseline surface lw emissivity in fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sncovr]
  standard_name = surface_snow_area_fraction_over_land
  long_name = surface snow area fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snoalb]
  standard_name = upper_bound_on_max_albedo_over_deep_snow
  long_name = maximum snow albedo
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[alvwf]
  standard_name = mean_vis_albedo_with_weak_cosz_dependency
  long_name = mean vis albedo with weak cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[alnwf]
  standard_name = mean_nir_albedo_with_weak_cosz_dependency
  long_name = mean nir albedo with weak cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[slope]
  standard_name = surface_slope_classification_real
  long_name = sfc slope type for lsm
  units = index
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[shdmin]
  standard_name = minimum_vegetation_area_fraction
  long_name = min fractional coverage of green vegetation
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[shdmax]
  standard_name = maximum_vegetation_area_fraction
  long_name = max fractional coverage of green vegetation
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tg3]
  standard_name = deep_soil_temperature
  long_name = deep soil temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vfrac]
  standard_name = vegetation_area_fraction
  long_name = areal fractional cover of green vegetation
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vtype]
  standard_name = vegetation_type_classification_real
  long_name = vegetation type for lsm
  units = index
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[stype]
  standard_name = soil_type_classification_real
  long_name = soil type for lsm
  units = index
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[uustar]
  standard_name = surface_friction_velocity
  long_name = boundary layer parameter
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[oro]
  standard_name = orography
  long_name = orography
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[oro_uf]
  standard_name = orography_unfiltered
  long_name = unfiltered orography
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[conv_act]
  standard_name = gf_memory_counter
  long_name = Memory counter for GF
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_mass_flux_deep_convection_scheme == flag_for_gf_deep_convection_scheme)
[hice]
  standard_name = sea_ice_thickness
  long_name = sea ice thickness
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[weasd]
  standard_name = water_equivalent_accumulated_snow_depth
  long_name = water equiv of acc snow depth over land and sea ice
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[canopy]
  standard_name = canopy_water_amount
  long_name = canopy water amount
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ffmm]
  standard_name = Monin_Obukhov_similarity_function_for_momentum
  long_name = Monin-Obukhov similarity function for momentum
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ffhh]
  standard_name = Monin_Obukhov_similarity_function_for_heat
  long_name = Monin-Obukhov similarity function for heat
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[f10m]
  standard_name = ratio_of_wind_at_lowest_model_layer_and_wind_at_10m
  long_name = ratio of sigma level 1 wind and 10m wind
  units = ratio
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tprcp]
  standard_name = nonnegative_lwe_thickness_of_precipitation_amount_on_dynamics_timestep
  long_name = total precipitation amount in each time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[srflag]
  standard_name = flag_for_precipitation_type
  long_name = snow/rain flag for precipitation
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[slc]
  standard_name = volume_fraction_of_unfrozen_soil_moisture
  long_name = liquid soil moisture
  units = frac
  dimensions = (horizontal_loop_extent,soil_vertical_dimension)
  type = real
  kind = kind_phys
[smc]
  standard_name = volume_fraction_of_soil_moisture
  long_name = total soil moisture
  units = frac
  dimensions = (horizontal_loop_extent,soil_vertical_dimension)
  type = real
  kind = kind_phys
[stc]
  standard_name = soil_temperature
  long_name = soil temperature
  units = K
  dimensions = (horizontal_loop_extent,soil_vertical_dimension)
  type = real
  kind = kind_phys
[t2m]
  standard_name = temperature_at_2m
  long_name = 2 meter temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[th2m]
  standard_name = potential_temperature_at_2m
  long_name = 2 meter potential temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[q2m]
  standard_name = specific_humidity_at_2m
  long_name = 2 meter specific humidity
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tref]
  standard_name = sea_surface_reference_temperature
  long_name = sea surface reference temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[z_c]
  standard_name = sub_layer_cooling_thickness
  long_name = sub-layer cooling thickness
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[c_0]
  standard_name = coefficient_c_0
  long_name = coefficient 1 to calculate d(Tz)/d(Ts)
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[c_d]
  standard_name = coefficient_c_d
  long_name = coefficient 2 to calculate d(Tz)/d(Ts)
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[w_0]
  standard_name = coefficient_w_0
  long_name = coefficient 3 to calculate d(Tz)/d(Ts)
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[w_d]
  standard_name = coefficient_w_d
  long_name = coefficient 4 to calculate d(Tz)/d(Ts)
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[xt]
  standard_name = diurnal_thermocline_layer_heat_content
  long_name = heat content in diurnal thermocline layer
  units = K m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[xs]
  standard_name = sea_water_salinity
  long_name = salinity  content in diurnal thermocline layer
  units = ppt m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[xu]
  standard_name = diurnal_thermocline_layer_x_current
  long_name = u-current content in diurnal thermocline layer
  units = m2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[xv]
  standard_name = diurnal_thermocline_layer_y_current
  long_name = v-current content in diurnal thermocline layer
  units = m2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[xz]
  standard_name = diurnal_thermocline_layer_thickness
  long_name = diurnal thermocline layer thickness
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[zm]
  standard_name = ocean_mixed_layer_thickness
  long_name = mixed layer thickness
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[xtts]
  standard_name = sensitivity_of_dtl_heat_content_to_surface_temperature
  long_name = d(xt)/d(ts)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[xzts]
  standard_name = sensitivity_of_dtl_thickness_to_surface_temperature
  long_name = d(xz)/d(ts)
  units = m K-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[d_conv]
  standard_name = free_convection_layer_thickness
  long_name = thickness of free convection layer (FCL)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[ifd]
  standard_name = index_of_dtlm_start
  long_name = index to start dtlm run or not
  units = index
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[dt_cool]
  standard_name = sub_layer_cooling_amount
  long_name = sub-layer cooling amount
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[qrain]
  standard_name = sensible_heat_flux_due_to_rainfall
  long_name = sensible heat flux due to rainfall
  units = W
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_nsstm_run > 0)
[snowxy]
  standard_name = number_of_snow_layers
  long_name = number of snow layers
  units = count
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[tvxy]
  standard_name = vegetation_temperature
  long_name = vegetation temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[tgxy]
  standard_name = ground_temperature_for_noahmp
  long_name = ground temperature for noahmp
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[canicexy]
  standard_name = canopy_intercepted_ice_mass
  long_name = canopy intercepted ice mass
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[canliqxy]
  standard_name = canopy_intercepted_liquid_water
  long_name = canopy intercepted liquid water
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[eahxy]
  standard_name = canopy_air_vapor_pressure
  long_name = canopy air vapor pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[tahxy]
  standard_name = canopy_air_temperature
  long_name = canopy air temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[cmxy]
  standard_name = surface_drag_coefficient_for_momentum_for_noahmp
  long_name = surface drag coefficient for momentum for noahmp
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[chxy]
  standard_name = surface_drag_coefficient_for_heat_and_moisture_for_noahmp
  long_name = surface exchange coeff heat & moisture for noahmp
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[fwetxy]
  standard_name = area_fraction_of_wet_canopy
  long_name = area fraction of canopy that is wetted/snowed
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[sneqvoxy]
  standard_name = snow_mass_at_previous_time_step
  long_name = snow mass at previous time step
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[alboldxy]
  standard_name = snow_albedo_at_previous_time_step
  long_name = snow albedo at previous time step
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[qsnowxy]
  standard_name = snow_precipitation_rate_at_surface
  long_name = snow precipitation rate at surface
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[wslakexy]
  standard_name = lake_water_storage
  long_name = lake water storage
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[zwtxy]
  standard_name = water_table_depth
  long_name = water table depth
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[waxy]
  standard_name = water_storage_in_aquifer
  long_name = water storage in aquifer
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[wtxy]
  standard_name = water_storage_in_aquifer_and_saturated_soil
  long_name = water storage in aquifer and saturated soil
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[tsnoxy]
  standard_name = snow_temperature
  long_name = snow_temperature
  units = K
  dimensions = (horizontal_loop_extent, lower_bound_of_snow_vertical_dimension_for_land_surface_model:0)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[zsnsoxy]
  standard_name = layer_bottom_depth_from_snow_surface
  long_name = depth from the top of the snow surface at the bottom of the layer
  units = m
  dimensions = (horizontal_loop_extent, lower_bound_of_snow_vertical_dimension_for_land_surface_model:soil_vertical_dimension_for_land_surface_model)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[snicexy]
  standard_name = snow_layer_ice
  long_name = snow layer ice
  units = mm
  dimensions = (horizontal_loop_extent, lower_bound_of_snow_vertical_dimension_for_land_surface_model:0)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[snliqxy]
  standard_name = snow_layer_liquid_water
  long_name = snow layer liquid water
  units = mm
  dimensions = (horizontal_loop_extent, lower_bound_of_snow_vertical_dimension_for_land_surface_model:0)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[lfmassxy]
  standard_name = leaf_mass
  long_name = leaf mass
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[rtmassxy]
  standard_name = fine_root_mass
  long_name = fine root mass
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[stmassxy]
  standard_name = stem_mass
  long_name = stem mass
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[woodxy]
  standard_name = wood_mass
  long_name = wood mass including woody roots
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[stblcpxy]
  standard_name = slow_soil_pool_mass_content_of_carbon
  long_name = stable carbon in deep soil
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[fastcpxy]
  standard_name = fast_soil_pool_mass_content_of_carbon
  long_name = short-lived carbon in shallow soil
  units = g m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[xlaixy]
  standard_name = leaf_area_index
  long_name = leaf area index 
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme .or. (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme .and. flag_for_reading_leaf_area_index_from_input))
[xsaixy]
  standard_name = stem_area_index
  long_name = stem area index 
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[taussxy]
  standard_name = nondimensional_snow_age
  long_name = non-dimensional snow age
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[smoiseq]
  standard_name = equilibrium_soil_water_content
  long_name = equilibrium soil water content
  units = m3 m-3
  dimensions = (horizontal_loop_extent,soil_vertical_dimension_for_land_surface_model)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[smcwtdxy]
  standard_name = soil_water_content_between_soil_bottom_and_water_table
  long_name = soil water content between the bottom of the soil and the water table
  units = m3 m-3
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[deeprechxy]
  standard_name = water_table_recharge_when_deep
  long_name = recharge to or from the water table when deep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[rechxy]
  standard_name = water_table_recharge_when_shallow
  long_name = recharge to or from the water table when shallow
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)
[snotime]
  standard_name = time_since_last_snowfall
  long_name = elapsed time since last snowfall
  units = s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[wetness]
  standard_name = normalized_soil_wetness_for_land_surface_model
  long_name = normalized soil wetness for lsm
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[sh2o]
  standard_name = volume_fraction_of_unfrozen_soil_moisture_for_land_surface_model
  long_name = volume fraction of unfrozen soil moisture for lsm
  units = frac
  dimensions = (horizontal_loop_extent,soil_vertical_dimension_for_land_surface_model)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[keepsmfr]
  standard_name = volume_fraction_of_frozen_soil_moisture_for_land_surface_model
  long_name = volume fraction of frozen soil moisture for lsm
  units = frac
  dimensions = (horizontal_loop_extent,soil_vertical_dimension_for_land_surface_model)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[smois]
  standard_name = volume_fraction_of_soil_moisture_for_land_surface_model
  long_name = volumetric fraction of soil moisture for lsm
  units = frac
  dimensions = (horizontal_loop_extent,soil_vertical_dimension_for_land_surface_model)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[tslb]
  standard_name = soil_temperature_for_land_surface_model
  long_name = soil temperature for land surface model
  units = K
  dimensions = (horizontal_loop_extent,soil_vertical_dimension_for_land_surface_model)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[zs]
  standard_name = depth_of_soil_levels_for_land_surface_model
  long_name = depth of soil levels for land surface model
  units = m
  dimensions = (soil_vertical_dimension_for_land_surface_model)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[clw_surf]
  standard_name = cloud_condensed_water_mixing_ratio_at_surface
  long_name = moist cloud water mixing ratio at surface
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[qwv_surf]
  standard_name = water_vapor_mixing_ratio_at_surface
  long_name = water vapor mixing ratio at surface
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[cndm_surf]
  standard_name = surface_condensation_mass
  long_name = surface condensation mass
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[flag_frsoil]
  standard_name = flag_for_frozen_soil_physics
  long_name = flag for frozen soil physics (RUC)
  units = flag
  dimensions = (horizontal_loop_extent,soil_vertical_dimension_for_land_surface_model)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[rhofr]
  standard_name = density_of_frozen_precipitation
  long_name = density of frozen precipitation
  units = kg m-3
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[tsnow]
  standard_name = snow_temperature_bottom_first_layer
  long_name = snow temperature at the bottom of the first snow layer
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[snowfallac]
  standard_name = total_accumulated_snowfall
  long_name = run-total snow accumulation on the ground
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[acsnow]
  standard_name = accumulated_water_equivalent_of_frozen_precip
  long_name = snow water equivalent of run-total frozen precip
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme) 
[ustm]
  standard_name = surface_friction_velocity_drag
  long_name = friction velocity isolated for momentum only
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnsfclay)
[zol]
  standard_name = surface_stability_parameter
  long_name = monin obukhov surface stability parameter
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnsfclay)
[mol]
  standard_name = theta_star
  long_name = temperature flux divided by ustar (temperature scale)
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnsfclay)
[rmol]
  standard_name = reciprocal_of_obukhov_length
  long_name = one over obukhov length
  units = m-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnsfclay)
[flhc]
  standard_name = surface_exchange_coefficient_for_heat
  long_name = surface exchange coefficient for heat
  units = W m-2 K-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnsfclay)
[flqc]
  standard_name = surface_exchange_coefficient_for_moisture
  long_name = surface exchange coefficient for moisture
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnsfclay)
[chs2]
  standard_name = surface_exchange_coefficient_for_heat_at_2m
  long_name = exchange coefficient for heat at 2 meters
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnsfclay)
[cqs2]
  standard_name = surface_exchange_coefficient_for_moisture_at_2m
  long_name = exchange coefficient for moisture at 2 meters
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnsfclay)
[lh]
  standard_name = surface_latent_heat
  long_name = latent heating at the surface (pos = up)
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnsfclay)
[evap]
  standard_name = kinematic_surface_upward_latent_heat_flux
  long_name = kinematic surface upward latent heat flux
  units = kg kg-1 m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[hflx]
  standard_name = kinematic_surface_upward_sensible_heat_flux
  long_name = kinematic surface upward sensible heat flux
  units = K m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qss]
  standard_name = surface_specific_humidity
  long_name = surface air saturation specific humidity
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[raincprv]
  standard_name = lwe_thickness_of_convective_precipitation_amount_from_previous_timestep
  long_name = convective_precipitation_amount from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme .or. flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)
[rainncprv]
  standard_name = lwe_thickness_of_explicit_rainfall_amount_from_previous_timestep
  long_name = explicit rainfall from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme .or. flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)
[iceprv]
  standard_name = lwe_thickness_of_ice_amount_from_previous_timestep
  long_name = ice amount from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme .or. flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)
[snowprv]
  standard_name = lwe_thickness_of_snow_amount_from_previous_timestep
  long_name = snow amount from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme .or. flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)
[graupelprv]
  standard_name = lwe_thickness_of_graupel_amount_from_previous_timestep
  long_name = graupel amount from previous timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme .or. flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)
[draincprv]
  standard_name = convective_precipitation_rate_from_previous_timestep
  long_name = convective precipitation rate from previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[drainncprv]
  standard_name = explicit_rainfall_rate_from_previous_timestep
  long_name = explicit rainfall rate previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[diceprv]
  standard_name = ice_precipitation_rate_from_previous_timestep
  long_name = ice precipitation rate from previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[dsnowprv]
  standard_name = snow_precipitation_rate_from_previous_timestep
  long_name = snow precipitation rate from previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[dgraupelprv]
  standard_name = graupel_precipitation_rate_from_previous_timestep
  long_name = graupel precipitation rate from previous timestep
  units = mm s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)  
[alvsf]
  standard_name = mean_vis_albedo_with_strong_cosz_dependency
  long_name = mean vis albedo with strong cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[alnsf]
  standard_name = mean_nir_albedo_with_strong_cosz_dependency
  long_name = mean nir albedo with strong cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[facsf]
  standard_name =fractional_coverage_with_strong_cosz_dependency
  long_name = fractional coverage with strong cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[facwf]
  standard_name = fractional_coverage_with_weak_cosz_dependency
  long_name = fractional coverage with weak cosz dependency
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_coupling_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_coupling_type
  type = ddt
[nirbmdi]
  standard_name = surface_downwelling_direct_near_infrared_shortwave_flux_on_radiation_time_step
  long_name = sfc nir beam sw downward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[nirdfdi]
  standard_name = surface_downwelling_diffuse_near_infrared_shortwave_flux_on_radiation_time_step
  long_name = sfc nir diff sw downward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[visbmdi]
  standard_name = surface_downwelling_direct_ultraviolet_and_visible_shortwave_flux_on_radiation_time_step
  long_name = sfc uv+vis beam sw downward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[visdfdi]
  standard_name = surface_downwelling_diffuse_ultraviolet_and_visible_shortwave_flux_on_radiation_time_step
  long_name = sfc uv+vis diff sw downward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[nirbmui]
  standard_name = surface_upwelling_direct_near_infrared_shortwave_flux_on_radiation_time_step
  long_name = sfc nir beam sw upward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[nirdfui]
  standard_name = surface_upwelling_diffuse_near_infrared_shortwave_flux_on_radiation_time_step
  long_name = sfc nir diff sw upward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[visbmui]
  standard_name = surface_upwelling_direct_ultraviolet_and_visible_shortwave_flux_on_radiation_time_step
  long_name = sfc uv+vis beam sw upward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[visdfui]
  standard_name = surface_upwelling_diffuse_ultraviolet_and_visible_shortwave_flux_on_radiation_time_step
  long_name = sfc uv+vis diff sw upward flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfcdsw]
  standard_name = surface_downwelling_shortwave_flux_on_radiation_time_step
  long_name = total sky sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfcnsw]
  standard_name = surface_net_downwelling_shortwave_flux_on_radiation_time_step
  long_name = total sky sfc netsw flx into ground
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfcdlw]
  standard_name = surface_downwelling_longwave_flux_on_radiation_time_step
  long_name = total sky sfc downward lw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rain_cpl]
  standard_name = lwe_thickness_of_precipitation_amount_for_coupling
  long_name = total rain precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling .or. flag_for_stochastic_physics_perturbations .or. flag_for_chemistry_coupling .or. flag_for_global_cellular_automata)
[rainc_cpl]
  standard_name = lwe_thickness_of_convective_precipitation_amount_for_coupling
  long_name = total convective precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snow_cpl]
  standard_name = lwe_thickness_of_snow_amount_for_coupling
  long_name = total snow precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling .or. flag_for_stochastic_physics_perturbations .or. flag_for_chemistry_coupling .or. flag_for_global_cellular_automata)
[dusfc_cpl]
  standard_name = cumulative_surface_x_momentum_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc x momentum flux multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dvsfc_cpl]
  standard_name = cumulative_surface_y_momentum_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc y momentum flux multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dtsfc_cpl]
  standard_name = cumulative_surface_upward_sensible_heat_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc sensible heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dqsfc_cpl]
  standard_name = cumulative_surface_upward_latent_heat_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dlwsfc_cpl]
  standard_name = cumulative_surface_downwelling_longwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc downward lw flux mulitplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dswsfc_cpl]
  standard_name = cumulative_surface_downwelling_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dnirbm_cpl]
  standard_name = cumulative_surface_downwelling_direct_near_infrared_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc nir beam downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dnirdf_cpl]
  standard_name = cumulative_surface_downwelling_diffuse_near_infrared_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc nir diff downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dvisbm_cpl]
  standard_name = cumulative_surface_downwelling_direct_ultraviolet_and_visible_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc uv+vis beam dnwd sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dvisdf_cpl]
  standard_name = cumulative_surface_downwelling_diffuse_ultraviolet_and_visible_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative sfc uv+vis diff dnwd sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nlwsfc_cpl]
  standard_name = cumulative_surface_net_downward_longwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net downward lw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nswsfc_cpl]
  standard_name = cumulative_surface_net_downward_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nnirbm_cpl]
  standard_name = cumulative_surface_net_downward_direct_near_infrared_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net nir beam downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nnirdf_cpl]
  standard_name = cumulative_surface_net_downward_diffuse_near_infrared_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net nir diff downward sw flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nvisbm_cpl]
  standard_name = cumulative_surface_net_downward_direct_ultraviolet_and_visible_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net uv+vis beam downward sw rad flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nvisdf_cpl]
  standard_name = cumulative_surface_net_downward_diffuse_ultraviolet_and_visible_shortwave_flux_for_coupling_multiplied_by_timestep
  long_name = cumulative net uv+vis diff downward sw rad flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dusfci_cpl]
  standard_name = instantaneous_surface_x_momentum_flux_for_coupling
  long_name = instantaneous sfc x momentum flux
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dvsfci_cpl]
  standard_name = instantaneous_surface_y_momentum_flux_for_coupling
  long_name = instantaneous sfc y momentum flux
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dtsfci_cpl]
  standard_name = instantaneous_surface_upward_sensible_heat_flux_for_coupling
  long_name = instantaneous sfc sensible heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dqsfci_cpl]
  standard_name = instantaneous_surface_upward_latent_heat_flux_for_coupling
  long_name = instantaneous sfc latent heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dlwsfci_cpl]
  standard_name = instantaneous_surface_downwelling_longwave_flux_for_coupling
  long_name = instantaneous sfc downward lw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dswsfci_cpl]
  standard_name = instantaneous_surface_downwelling_shortwave_flux_for_coupling
  long_name = instantaneous sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dnirbmi_cpl]
  standard_name = instantaneous_surface_downwelling_direct_near_infrared_shortwave_flux_for_coupling
  long_name = instantaneous sfc nir beam downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dnirdfi_cpl]
  standard_name = instantaneous_surface_downwelling_diffuse_near_infrared_shortwave_flux_for_coupling
  long_name = instantaneous sfc nir diff downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dvisbmi_cpl]
  standard_name = instantaneous_surface_downwelling_direct_ultraviolet_and_visible_shortwave_flux_for_coupling
  long_name = instantaneous sfc uv+vis beam downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dvisdfi_cpl]
  standard_name = instantaneous_surface_downwelling_diffuse_ultraviolet_and_visible_shortwave_flux_for_coupling
  long_name = instantaneous sfc uv+vis diff downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nlwsfci_cpl]
  standard_name = instantaneous_surface_net_downward_longwave_flux_for_coupling
  long_name = instantaneous net sfc downward lw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nswsfci_cpl]
  standard_name = instantaneous_surface_net_downward_shortwave_flux_for_coupling
  long_name = instantaneous net sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nnirbmi_cpl]
  standard_name = instantaneous_surface_net_downward_direct_near_infrared_shortwave_flux_for_coupling
  long_name = instantaneous net nir beam sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nnirdfi_cpl]
  standard_name = instantaneous_surface_net_downward_diffuse_near_infrared_shortwave_flux_for_coupling
  long_name = instantaneous net nir diff sfc downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nvisbmi_cpl]
  standard_name = instantaneous_surface_net_downward_direct_ultraviolet_and_visible_shortwave_flux_for_coupling
  long_name = instantaneous net uv+vis beam downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[nvisdfi_cpl]
  standard_name = instantaneous_surface_net_downward_diffuse_ultraviolet_and_visible_shortwave_flux_for_coupling
  long_name = instantaneous net uv+vis diff downward sw flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[t2mi_cpl]
  standard_name = instantaneous_temperature_at_2m_for_coupling
  long_name = instantaneous T2m
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[q2mi_cpl]
  standard_name = instantaneous_specific_humidity_at_2m_for_coupling
  long_name = instantaneous Q2m
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[u10mi_cpl]
  standard_name = instantaneous_x_wind_at_10m_for_coupling
  long_name = instantaneous U10m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling .or. flag_for_wave_coupling)
[v10mi_cpl]
  standard_name = instantaneous_y_wind_at_10m_for_coupling
  long_name = instantaneous V10m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling .or. flag_for_wave_coupling)
[tsfci_cpl]
  standard_name = instantaneous_surface_skin_temperature_for_coupling
  long_name = instantaneous sfc temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[psurfi_cpl]
  standard_name = instantaneous_surface_air_pressure_for_coupling
  long_name = instantaneous sfc pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[ulwsfcin_cpl]
  standard_name = surface_upwelling_longwave_flux_for_coupling
  long_name = surface upwelling LW flux for coupling
  units = W m-2 
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dusfcin_cpl]
  standard_name = surface_x_momentum_flux_for_coupling
  long_name = sfc x momentum flux for coupling
  units = Pa 
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dvsfcin_cpl]
  standard_name = surface_y_momentum_flux_for_coupling
  long_name = sfc y momentum flux for coupling
  units = Pa 
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dtsfcin_cpl]
  standard_name = surface_upward_sensible_heat_flux_for_coupling
  long_name = sfc sensible heat flux input
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[dqsfcin_cpl]
  standard_name = surface_upward_latent_heat_flux_for_coupling
  long_name = sfc latent heat flux input for coupling
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[hsnoin_cpl]
  standard_name = surface_snow_thickness_for_coupling
  long_name = sfc snow depth in meters over sea ice for coupling
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[slimskin_cpl]
  standard_name = sea_land_ice_mask_in	
  long_name = sea/land/ice mask input (=0/1/2)
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling)
[ca_deep]
  standard_name = fraction_of_cellular_automata_for_deep_convection
  long_name = fraction of cellular automata for deep convection
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_cellular_automata)
[vfact_ca]
  standard_name = vertical_weight_for_ca
  long_name = vertical weight for ca
  units = frac
  dimensions = (vertical_dimension)
  type = real
  kind = kind_phys
[ca1]
  standard_name = cellular_automata_global_pattern
  long_name = cellular automata global pattern
  units = flag
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_cellular_automata)
[condition]
  standard_name = physics_field_for_coupling
  long_name = physics_field_for_coupling
  units = m2 s-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[shum_wts]
  standard_name = weights_for_stochastic_shum_perturbation
  long_name = weights for stochastic shum perturbation
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_shum_option)
[sppt_wts]
  standard_name = weights_for_stochastic_sppt_perturbation
  long_name = weights for stochastic sppt perturbation
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_physics_perturbations .or. flag_for_global_cellular_automata)
[skebu_wts]
  standard_name = weights_for_stochastic_skeb_perturbation_of_x_wind
  long_name = weights for stochastic skeb perturbation of x wind
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_skeb_option)
[skebv_wts]
  standard_name = weights_for_stochastic_skeb_perturbation_of_y_wind
  long_name = weights for stochastic skeb perturbation of y wind
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_skeb_option)
[sfc_wts]
  standard_name = weights_for_stochastic_surface_physics_perturbation
  long_name = weights for stochastic surface physics perturbation
  units = none
  dimensions = (horizontal_loop_extent,number_of_land_surface_variables_perturbed)
  type = real
  kind = kind_phys
  active = (index_for_stochastic_land_surface_perturbation_type .ne. 0)
[dqdti]
  standard_name = instantaneous_water_vapor_specific_humidity_tendency_due_to_convection
  long_name = instantaneous moisture tendency due to convection
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_chemistry_coupling)
[nwfa2d]
  standard_name = tendency_of_water_friendly_aerosols_at_surface
  long_name = instantaneous water-friendly sfc aerosol source
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_thompson_microphysics_scheme .and. flag_for_aerosol_physics)
[nifa2d]
  standard_name = tendency_of_ice_friendly_aerosols_at_surface
  long_name = instantaneous ice-friendly sfc aerosol source
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_thompson_microphysics_scheme .and. flag_for_aerosol_physics)
[ushfsfci]
  standard_name = instantaneous_surface_upward_sensible_heat_flux_for_chemistry_coupling
  long_name = instantaneous upward sensible heat flux for chemistry coupling
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_chemistry_coupling)
[dkt]
  standard_name = instantaneous_atmosphere_heat_diffusivity
  long_name = instantaneous atmospheric heat diffusivity
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_chemistry_coupling)
[qci_conv]
  standard_name = convective_cloud_condesate_after_rainout
  long_name = convective cloud condesate after rainout
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mass_flux_deep_convection_scheme == flag_for_gf_deep_convection_scheme)
########################################################################
[ccpp-table-properties]
  name = GFS_control_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_control_type
  type = ddt
[me]
  standard_name = mpi_rank
  long_name = current MPI-rank
  units = index
  dimensions = ()
  type = integer
[master]
  standard_name = mpi_root
  long_name = master MPI-rank
  units = index
  dimensions = ()
  type = integer
[communicator]
  standard_name = mpi_comm
  long_name = MPI communicator
  units = index
  dimensions = ()
  type = integer
[ntasks]
  standard_name = mpi_size
  long_name = number of MPI tasks in communicator
  units = count
  dimensions = ()
  type = integer
[nthreads]
  standard_name = omp_threads
  long_name = number of OpenMP threads available for physics schemes
  units = count
  dimensions = ()
  type = integer
[nlunit]
  standard_name = iounit_namelist
  long_name = fortran unit number for file opens
  units = none
  dimensions = ()
  type = integer
[fn_nml]
  standard_name = namelist_filename
  long_name = namelist filename
  units = none
  dimensions = ()
  type = character
  kind = len=64
[input_nml_file_length]
  standard_name = number_of_lines_of_namelist_filename_for_internal_file_reads
  long_name = lines in namelist file for internal file reads
  units = count
  dimensions = ()
  type = integer
[input_nml_file]
  standard_name = namelist_filename_for_internal_file_reads
  long_name = namelist filename for internal file reads
  units = none
  dimensions = (number_of_lines_of_namelist_filename_for_internal_file_reads)
  type = character
  kind = len=256
[logunit]
  standard_name = iounit_log
  long_name = fortran unit number for logfile
  units = none
  dimensions = ()
  type = integer
[fhzero]
  standard_name = frequency_for_diagnostic_clearing
  long_name = frequency for clearing diagnostic fields
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[ldiag3d]
  standard_name = flag_diagnostics_3D
  long_name = flag for 3d diagnostic fields
  units = flag
  dimensions = ()
  type = logical
[qdiag3d]
  standard_name = flag_tracer_diagnostics_3D
  long_name = flag for 3d tracer diagnostic fields
  units = flag
  dimensions = ()
  type = logical
[flag_for_gwd_generic_tend]
  standard_name = flag_for_generic_gravity_wave_drag_tendency
  long_name = true if GFS_GWD_generic should calculate tendencies
  units = flag
  dimensions = ()
  type = logical
[flag_for_pbl_generic_tend]
  standard_name = flag_for_generic_planetary_boundary_layer_tendency
  long_name = true if GFS_PBL_generic should calculate tendencies
  units = flag
  dimensions = ()
  type = logical
[flag_for_dcnv_generic_tend]
  standard_name = flag_for_generic_deep_convection_tendency
  long_name = true if GFS_DCNV_generic should calculate tendencies
  units = flag
  dimensions = ()
  type = logical
[flag_for_scnv_generic_tend]
  standard_name = flag_for_generic_shallow_convection_tendency
  long_name = true if GFS_SCNV_generic should calculate tendencies
  units = flag
  dimensions = ()
  type = logical
[lssav]
  standard_name = flag_diagnostics
  long_name = logical flag for storing diagnostics
  units = flag
  dimensions = ()
  type = logical
[isc]
  standard_name = starting_x_index_for_this_MPI_rank
  long_name = starting index in the x direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
[jsc]
  standard_name = starting_y_index_for_this_MPI_rank
  long_name = starting index in the y direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
[nx]
  standard_name = number_of_points_in_x_direction_for_this_MPI_rank
  long_name = number of points in x direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
[ny]
  standard_name = number_of_points_in_y_direction_for_this_MPI_rank
  long_name = number of points in y direction for this MPI rank
  units = count
  dimensions = ()
  type = integer
[cnx]
  standard_name = number_of_points_in_x_direction_for_this_cubed_sphere_face
  long_name = number of points in x direction for this cubed sphere face
  units = count
  dimensions = ()
  type = integer
[cny]
  standard_name = number_of_points_in_y_direction_for_this_cubed_sphere_face
  long_name = number of points in y direction for this cubed sphere face
  units = count
  dimensions = ()
  type = integer
[naux2d]
  standard_name = number_of_2d_auxiliary_arrays
  long_name = number of 2d auxiliary arrays to output (for debugging)
  units = count
  dimensions = ()
  type = integer
[naux3d]
  standard_name = number_of_3d_auxiliary_arrays
  long_name = number of 3d auxiliary arrays to output (for debugging)
  units = count
  dimensions = ()
  type = integer
[levs]
  standard_name = vertical_dimension
  long_name = number of vertical levels
  units = count
  dimensions = ()
  type = integer
[ak]
  standard_name = a_parameter_of_the_hybrid_coordinate
  long_name = a parameter for sigma pressure level calculations
  units = Pa
  dimensions = (number_of_vertical_layers_for_radiation_calculations_plus_one)
  type = real
[bk]
  standard_name = b_parameter_of_the_hybrid_coordinate
  long_name = b parameter for sigma pressure level calculations
  units = none
  dimensions = (number_of_vertical_layers_for_radiation_calculations_plus_one)
  type = real
[levsp1]
  standard_name = vertical_dimension_plus_one
  long_name = number of vertical levels plus one
  units = count
  dimensions = ()
  type = integer
[levsm1]
  standard_name = vertical_dimension_minus_one
  long_name = number of vertical levels minus one
  units = count
  dimensions = ()
  type = integer
[lonr]
  standard_name = number_of_equatorial_longitude_points
  long_name = number of global points in x-dir (i) along the equator
  units = count
  dimensions = ()
  type = integer
[latr]
  standard_name = number_of_latitude_points
  long_name = number of global points in y-dir (j) along the meridian
  units = count
  dimensions = ()
  type = integer
[nblks]
  standard_name = ccpp_block_count
  long_name = for explicit data blocking: number of blocks
  units = count
  dimensions = ()
  type = integer
[blksz]
  standard_name = ccpp_block_sizes
  long_name = for explicit data blocking: block sizes of all blocks
  units = count
  dimensions = (ccpp_block_count)
  type = integer
[blksz(ccpp_block_number)]
  standard_name = horizontal_loop_extent
  long_name = horizontal loop extent
  units = count
  dimensions = ()
  type = integer
[ncols]
  standard_name = horizontal_dimension
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
[tile_num]
  standard_name = number_of_tile
  long_name = tile number
  units = none
  dimensions = ()
  type = integer
[cplflx]
  standard_name = flag_for_flux_coupling
  long_name = flag controlling cplflx collection (default off)
  units = flag
  dimensions = ()
  type = logical
[cplwav]
  standard_name = flag_for_wave_coupling
  long_name = flag controlling cplwav collection (default off)
  units = flag
  dimensions = ()
  type = logical
[cplwav2atm]
  standard_name = flag_for_wave_coupling_to_atm
  long_name = flag controlling ocean wave coupling to the atmosphere (default off)
  units = flag
  dimensions = ()
  type = logical
[cplchm]
  standard_name = flag_for_chemistry_coupling
  long_name = flag controlling cplchm collection (default off)
  units = flag
  dimensions = ()
  type = logical
[lsidea]
  standard_name = flag_idealized_physics
  long_name = flag for idealized physics
  units = flag
  dimensions = ()
  type = logical
[nscyc]
  standard_name = number_of_timesteps_between_surface_cycling_calls
  long_name = number of timesteps between surface cycling calls
  units = count
  dimensions = ()
  type = integer
[nszero]
  standard_name = number_of_timesteps_between_diagnostic_clearing
  long_name = number of timesteps between calls to clear diagnostic variables
  units = count
  dimensions = ()
  type = integer
[dtp]
  standard_name = time_step_for_physics
  long_name = physics timestep
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[dtf]
  standard_name = time_step_for_dynamics
  long_name = dynamics timestep
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[idat]
  standard_name = date_and_time_at_model_initialization
  long_name = initialization date and time
  units = none
  dimensions = (8)
  type = integer
[idate]
  standard_name = date_and_time_at_model_initialization_reordered
  long_name = initial date with different size and ordering
  units = none
  dimensions = (4)
  type = integer
[nsswr]
  standard_name = number_of_timesteps_between_shortwave_radiation_calls
  long_name = number of timesteps between shortwave radiation calls
  units = 
  dimensions = ()
  type = integer
[nslwr]
  standard_name = number_of_timesteps_between_longwave_radiation_calls
  long_name = number of timesteps between longwave radiation calls
  units = 
  dimensions = ()
  type = integer
[fhswr]
  standard_name = frequency_for_shortwave_radiation
  long_name = frequency for shortwave radiation
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[fhlwr]
  standard_name = frequency_for_longwave_radiation
  long_name = frequency for longwave radiation
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[nhfrad]
  standard_name = number_of_timesteps_for_radiation_calls_on_physics_timestep
  long_name = number of timesteps for radiation calls on physics timestep (coldstarts only)
  units = count
  dimensions = ()
  type = integer
[levr]
  standard_name = number_of_vertical_layers_for_radiation_calculations
  long_name = number of vertical levels for radiation calculations
  units = count
  dimensions = ()
  type = integer
[levrp1]
  standard_name = number_of_vertical_layers_for_radiation_calculations_plus_one
  long_name = number of vertical levels for radiation calculations + 1
  units = count
  dimensions = ()
  type = integer
[nfxr]
  standard_name = number_of_radiation_diagnostic_variables
  long_name = number of variables stored in the fluxr array
  units = count
  dimensions = ()
  type = integer
[iaerclm]
  standard_name = flag_for_aerosol_input_MG_radiation
  long_name = flag for using aerosols in Morrison-Gettelman MP_radiation
  units = flag
  dimensions = ()
  type = logical
[ntrcaer]
  standard_name = number_of_aerosol_tracers_MG
  long_name = number of aerosol tracers for Morrison Gettelman MP
  units = count
  dimensions = ()
  type = integer
[nrcm]
  standard_name = array_dimension_of_random_number
  long_name = second dimension of random number stream for RAS
  units = count
  dimensions = ()
  type = integer
[iflip]
  standard_name = flag_for_vertical_index_direction_control
  long_name = iflip - is not the same as flipv
  units = flag
  dimensions = ()
  type = integer
[isol]
  standard_name = flag_for_solar_constant
  long_name = use prescribed solar constant
  units = flag
  dimensions = ()
  type = integer
[ico2]
  standard_name = flag_for_using_prescribed_global_mean_co2_value
  long_name = prescribed global mean value (old opernl)
  units = flag
  dimensions = ()
  type = integer
[ialb]
  standard_name = flag_for_using_climatology_albedo
  long_name = flag for using climatology alb, based on sfc type
  units = flag
  dimensions = ()
  type = integer
[iems]
  standard_name = flag_for_surface_emissivity_control
  long_name = surface emissivity control flag, use fixed value of 1
  units = flag
  dimensions = ()
  type = integer
[iaer]
  standard_name = flag_for_default_aerosol_effect_in_shortwave_radiation
  long_name = default aerosol effect in sw only
  units = flag
  dimensions = ()
  type = integer
[icliq_sw]
  standard_name = flag_for_optical_property_for_liquid_clouds_for_shortwave_radiation
  long_name = sw optical property for liquid clouds
  units = flag
  dimensions = ()
  type = integer
[iovr]
  standard_name = flag_for_cloud_overlap_method_for_radiation
  long_name = max-random overlap clouds
  units = flag
  dimensions = ()
  type = integer
[iovr_sw]
  standard_name = flag_for_cloud_overlap_method_for_shortwave_radiation
  long_name = sw: max-random overlap clouds
  units = flag
  dimensions = ()
  type = integer
[iovr_lw]
  standard_name = flag_for_cloud_overlap_method_for_longwave_radiation
  long_name = lw: max-random overlap clouds
  units = flag
  dimensions = ()
  type = integer
[ictm]
  standard_name = flag_for_initial_time_date_control
  long_name = flag for initial conditions and forcing
  units = flag
  dimensions = ()
  type = integer
[isubc_sw]
  standard_name = flag_for_sw_clouds_grid_approximation
  long_name = flag for sw clouds sub-grid approximation
  units = flag
  dimensions = ()
  type = integer
[isubc_lw]
  standard_name = flag_for_lw_clouds_sub_grid_approximation
  long_name = flag for lw clouds sub-grid approximation
  units = flag
  dimensions = ()
  type = integer
[crick_proof]
  standard_name = flag_for_CRICK_proof_cloud_water
  long_name = flag for CRICK-Proof cloud water
  units = flag
  dimensions = ()
  type = logical
[ccnorm]
  standard_name = flag_for_cloud_condensate_normalized_by_cloud_cover
  long_name = flag for cloud condensate normalized by cloud cover
  units = flag
  dimensions = ()
  type = logical
[norad_precip]
  standard_name = flag_for_precipitation_effect_on_radiation
  long_name = radiation precip flag for Ferrier/Moorthi
  units = flag
  dimensions = ()
  type = logical
[lwhtr]
  standard_name = flag_for_output_of_longwave_heating_rate
  long_name = flag to output lw heating rate (Radtend%lwhc)
  units = flag
  dimensions = ()
  type = logical
[swhtr]
  standard_name = flag_for_output_of_shortwave_heating_rate
  long_name = flag to output sw heating rate (Radtend%swhc)
  units = flag
  dimensions = ()
  type = logical
[active_gases]
  standard_name = active_gases_used_by_RRTMGP
  long_name = active gases used by RRTMGP
  units = none
  dimensions =  ()
  type = character
  kind = len=128 
[nGases]
  standard_name = number_of_active_gases_used_by_RRTMGP
  long_name = number of gases available used by RRTMGP (Model%nGases)
  units = count
  dimensions =  ()
  type = integer
[rrtmgp_root]
  standard_name = directory_for_rte_rrtmgp_source_code
  long_name = directory for rte+rrtmgp source code (Model%rrtmgp_root)
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[lw_file_gas]
  standard_name = rrtmgp_kdistribution_lw
  long_name = file containing RRTMGP LW k-distribution (Model%lw_file_gas)
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[lw_file_clouds]
  standard_name = rrtmgp_coeff_lw_cloud_optics 
  long_name = file containing coefficients for RRTMGP LW cloud optics (Model%lw_file_clouds)
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[rrtmgp_nBandsLW]
  standard_name = number_of_lw_bands_rrtmgp
  long_name = number of lw bands used in RRTMGP (Model%rrtmgp_nBandsLW)
  units = count
  dimensions =  ()
  type = integer
[rrtmgp_nGptsLW]
  standard_name = number_of_lw_spectral_points_rrtmgp
  long_name = number of spectral points in RRTMGP LW calculation (model%rrtmgp_nGptsLW)
  units = count
  dimensions =  ()
  type = integer
[sw_file_gas] 
  standard_name = rrtmgp_kdistribution_sw
  long_name = file containing RRTMGP SW k-distribution (Model%sw_file_gas)
  units = none
  dimensions =  ()
  type = character
  kind = len=128
[sw_file_clouds]
  standard_name = rrtmgp_coeff_sw_cloud_optics 
  long_name = file containing coefficients for RRTMGP SW cloud optics (Model%sw_file_clouds)
  units = none 
  dimensions =  ()
  type = character
  kind = len=128
[rrtmgp_nBandsSW]
  standard_name = number_of_sw_bands_rrtmgp
  long_name = number of sw bands used in RRTMGP (Model%rrtmgp_nBandsSW)
  units = count
  dimensions =  ()
  type = integer
[rrtmgp_nGptsSW]
  standard_name = number_of_sw_spectral_points_rrtmgp
  long_name = number of spectral points in RRTMGP SW calculation (model%rrtmgp_nGptsSW)
  units = count
  dimensions =  ()
  type = integer
[doG_cldoptics]
  standard_name = flag_to_calc_lw_cld_optics_using_RRTMG
  long_name = logical flag to control cloud optics scheme.
  units = flag
  dimensions = ()
  type = logical  
[doGP_cldoptics_PADE]
  standard_name = flag_to_calc_lw_cld_optics_using_RRTMGP_PADE
  long_name = logical flag to control cloud optics scheme.
  units = flag
  dimensions = ()
  type = logical
[doGP_cldoptics_LUT]
  standard_name = flag_to_calc_lw_cld_optics_using_RRTMGP_LUT
  long_name = logical flag to control cloud optics scheme.
  units = flag
  dimensions = ()
  type = logical
[use_LW_jacobian]
  standard_name = flag_to_calc_RRTMGP_LW_jacobian
  long_name = logical flag to control RRTMGP LW calculation
  units = flag
  dimensions = ()
  type = logical 
[rrtmgp_nrghice]
  standard_name = number_of_rrtmgp_ice_roughness
  long_name = number of ice-roughness categories in RRTMGP calculation (Model%rrtmgp_nrghice)
  units = count
  dimensions =  ()
  type = integer
[rrtmgp_nGauss_ang]
  standard_name = number_of_angles_used_in_gaussian_quadrature
  long_name = Number of angles used in Gaussian quadrature
  units = count
  dimensions =  ()
  type = integer
[do_RRTMGP]
  standard_name = flag_for_rrtmgp_radiation_scheme
  long_name = flag for RRTMGP scheme
  units = flag
  dimensions =  ()
  type = logical
[do_GPsw_Glw]
  standard_name = scheme_flag
  long_name = When true GP is used for SW calculation and G is used for LW calculation
  units = flag
  dimensions =  ()
  type = logical
[ncld]
  standard_name = number_of_hydrometeors
  long_name = choice of cloud scheme / number of hydrometeors
  units = count
  dimensions = ()
  type = integer
[imp_physics]
  standard_name = flag_for_microphysics_scheme
  long_name = choice of microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_fer_hires]
  standard_name = flag_for_fer_hires_microphysics_scheme
  long_name = choice of Ferrier-Aligo microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_gfdl]
  standard_name = flag_for_gfdl_microphysics_scheme
  long_name = choice of GFDL microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_thompson]
  standard_name = flag_for_thompson_microphysics_scheme
  long_name = choice of Thompson microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_wsm6]
  standard_name = flag_for_wsm6_microphysics_scheme
  long_name = choice of WSM6 microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_zhao_carr]
  standard_name = flag_for_zhao_carr_microphysics_scheme
  long_name = choice of Zhao-Carr microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[imp_physics_zhao_carr_pdf]
  standard_name = flag_for_zhao_carr_pdf_microphysics_scheme
  long_name = choice of Zhao-Carr microphysics scheme with PDF clouds
  units = flag
  dimensions = ()
  type = integer
[imp_physics_mg]
  standard_name = flag_for_morrison_gettelman_microphysics_scheme
  long_name = choice of Morrison-Gettelman microphysics scheme
  units = flag
  dimensions = ()
  type = integer
[psautco]
  standard_name = coefficient_from_cloud_ice_to_snow
  long_name = auto conversion coeff from ice to snow
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[prautco]
  standard_name = coefficient_from_cloud_water_to_rain
  long_name = auto conversion coeff from cloud to rain
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[psauras]
  standard_name = coefficient_from_cloud_ice_to_snow_ras
  long_name = conversion coefficient from cloud ice to snow in ras
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[prauras]
  standard_name = coefficient_from_cloud_water_to_rain_ras
  long_name = conversion coefficient from cloud water to rain in ras
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[evpco]
  standard_name = coefficient_for_evaporation_of_rainfall
  long_name = coeff for evaporation of largescale rain
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[wminco]
  standard_name = cloud_condensed_water_conversion_threshold
  long_name = water and ice minimum threshold for Zhao
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[wminras]
  standard_name = cloud_condensed_water_ice_conversion_threshold_ras
  long_name = conversion coefficient from cloud liquid and ice to precipitation in ras
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[seed0]
  standard_name = seed_random_numbers_RAS
  long_name = random number seed for the RAS scheme
  units = none
  dimensions = ()
  type = integer
[dlqf]
  standard_name = condensate_fraction_detrained_in_updraft_layers
  long_name = condensate fraction detrained with in a updraft layers
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[avg_max_length]
  standard_name = time_interval_for_maximum_hourly_fields
  long_name = reset time interval for maximum hourly fields
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[fprcp]
  standard_name = number_of_frozen_precipitation_species
  long_name = number of frozen precipitation species
  units = count
  dimensions = ()
  type = integer
[pdfflag]
  standard_name = flag_for_pdf_for_morrison_gettelman_microphysics_scheme
  long_name = pdf flag for MG macrophysics
  units = flag
  dimensions = ()
  type = integer
[mg_dcs]
  standard_name = mg_autoconversion_size_threshold_ice_snow
  long_name = autoconversion size threshold for cloud ice to snow for MG microphysics
  units = um
  dimensions = ()
  type = real
  kind = kind_phys
[mg_qcvar]
  standard_name = mg_cloud_water_variance
  long_name = cloud water relative variance for MG microphysics
  units = 
  dimensions = ()
  type = real
  kind = kind_phys
[mg_ts_auto_ice]
  standard_name = mg_time_scale_for_autoconversion_of_ice
  long_name = autoconversion time scale for ice for MG microphysics
  units = s
  dimensions = (2)
  type = real
  kind = kind_phys
[mg_rhmini]
  standard_name = mg_minimum_rh_for_ice
  long_name = relative humidity threshold parameter for nucleating ice for MG microphysics
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[mg_ncnst]
  standard_name = mg_drop_concentration_constant
  long_name = droplet concentration constant for MG microphysics
  units = m-3
  dimensions = ()
  type = real
  kind = kind_phys
[mg_ninst]
  standard_name = mg_ice_concentration_constant
  long_name = ice concentration constant for MG microphysics
  units = m-3
  dimensions = ()
  type = real
  kind = kind_phys
[mg_ngnst]
  standard_name = mg_graupel_concentration_constant
  long_name = graupel concentration constant for MG microphysics
  units = m-3
  dimensions = ()
  type = real
  kind = kind_phys
[mg_berg_eff_factor]
  standard_name = mg_bergeron_efficiency_factor
  long_name = bergeron efficiency factor for MG microphysics
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[mg_alf]
  standard_name = mg_tuning_factor_for_alphas
  long_name = tuning factor for alphas (alpha = 1 - critical relative humidity)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[mg_qcmin]
  standard_name = mg_minimum_cloud_condensed_water_and_ice_mixing_ratio
  long_name = minimum cloud condensed water and ice mixing ratio in MG macro clouds
  units = kg kg-1
  dimensions = (2)
  type = real
  kind = kind_phys
[mg_qcmin(1)]
  standard_name = mg_minimum_cloud_condensed_water_mixing_ratio
  long_name = minimum cloud condensed water mixing ratio in MG macro clouds
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[mg_qcmin(2)]
  standard_name = mg_minimum_ice_mixing_ratio
  long_name = minimum ice mixing ratio in MG macro clouds
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[mg_precip_frac_method]
  standard_name = mg_type_of_precip_fraction_method
  long_name = type of precip fraction method for MG microphysics (in_cloud or max_overlap)
  units = none
  dimensions = ()
  type = character
  kind = len=16
[tf]
  standard_name = frozen_cloud_threshold_temperature
  long_name = threshold temperature below which all cloud is ice
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[tcr]
  standard_name = cloud_phase_transition_threshold_temperature
  long_name = threshold temperature below which cloud starts to freeze
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[tcrf]
  standard_name = cloud_phase_transition_denominator
  long_name = denominator in cloud phase transition = 1/(tcr-tf)
  units = K-1
  dimensions = ()
  type = real
  kind = kind_phys
[effr_in]
  standard_name = flag_for_cloud_effective_radii
  long_name = flag for cloud effective radii calculations in GFDL microphysics
  units = flag
  dimensions = ()
  type = logical
[microp_uniform]
  standard_name = mg_flag_for_uniform_subcolumns
  long_name = flag for uniform subcolumns for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[do_cldice]
  standard_name = mg_flag_for_cloud_ice_processes
  long_name = flag for cloud ice processes for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[hetfrz_classnuc]
  standard_name = mg_flag_for_heterogeneous_freezing
  long_name = flag for heterogeneous freezing for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[mg_nccons]
  standard_name = mg_flag_drop_concentration_constant
  long_name = flag for constant droplet concentration for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[mg_nicons]
  standard_name = mg_flag_ice_concentration_constant
  long_name = flag for constant ice concentration for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[mg_ngcons]
  standard_name = mg_flag_graupel_concentration_constant
  long_name = flag for constant graupel concentration for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[sed_supersat]
  standard_name = mg_allow_supersat_after_sed
  long_name = allow supersaturation after sedimentation for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[do_sb_physics]
  standard_name = mg_flag_for_sb2001_autoconversion
  long_name = flag for SB 2001 autoconversion or accretion for MG microphysics
  units = flag
  dimensions = ()
  type = logical
[mg_do_graupel]
  standard_name = mg_flag_for_graupel
  long_name = flag for graupel for MG microphysics (hail possible if false)
  units = flag
  dimensions = ()
  type = logical
[mg_do_hail]
  standard_name = mg_flag_for_hail
  long_name = flag for hail for MG microphysics (graupel possible if false)
  units = flag
  dimensions = ()
  type = logical
[mg_do_ice_gmao]
  standard_name = mg_flag_for_gmao_ice_formulation
  long_name = flag for gmao ice formulation
  units = flag
  dimensions = ()
  type = logical
[mg_do_liq_liu]
  standard_name = mg_flag_for_liu_liquid_treatment
  long_name = flag for liu liquid treatment
  units = flag
  dimensions = ()
  type = logical
[shoc_parm(1)]
  standard_name = shoc_tke_dissipatation_pressure_threshold
  long_name = pressure below which extra TKE diss. is applied in SHOC
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[shoc_parm(2)]
  standard_name = shoc_tke_dissipation_tunable_parameter
  long_name = mult. tuning parameter for TKE diss. in SHOC
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[shoc_parm(3)]
  standard_name = shoc_tke_dissipation_tunable_parameter_near_surface
  long_name = mult. tuning parameter for TKE diss. at surface in SHOC
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[shoc_parm(4)]
  standard_name = shoc_implicit_TKE_integration_uncentering_term
  long_name = uncentering term for TKE integration in SHOC
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[shoc_parm(5)]
  standard_name = shoc_flag_for_optional_surface_TKE_dissipation
  long_name = flag for alt. TKE diss. near surface in SHOC (>0 = ON)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[ncnd]
  standard_name = number_of_cloud_condensate_types
  long_name = number of cloud condensate types
  units = count
  dimensions = ()
  type = integer
[ltaerosol]
  standard_name = flag_for_aerosol_physics
  long_name = flag for aerosol physics
  units = flag
  dimensions = ()
  type = logical
[lradar]
  standard_name = flag_for_radar_reflectivity
  long_name = flag for radar reflectivity
  units = flag
  dimensions = ()
  type = logical
[ttendlim]
  standard_name = limit_for_temperature_tendency_for_microphysics
  long_name = temperature tendency limiter per physics time step
  units = K s-1
  dimensions = ()
  type = real
  kind = kind_phys
[lgfdlmprad]
  standard_name = flag_for_GFDL_microphysics_radiation_interaction
  long_name = flag for GFDL microphysics-radiation interaction
  units = flag
  dimensions = ()
  type = logical
[lsm]
  standard_name = flag_for_land_surface_scheme
  long_name = flag for land surface model
  units = flag
  dimensions = ()
  type = integer
[lsm_noah]
  standard_name = flag_for_noah_land_surface_scheme
  long_name = flag for NOAH land surface model
  units = flag
  dimensions = ()
  type = integer
[lsm_noahmp]
  standard_name = flag_for_noahmp_land_surface_scheme
  long_name = flag for NOAH MP land surface model
  units = flag
  dimensions = ()
  type = integer
[lsm_ruc]
  standard_name = flag_for_ruc_land_surface_scheme
  long_name = flag for RUC land surface model
  units = flag
  dimensions = ()
  type = integer
[lsm_noah_wrfv4]
  standard_name = flag_for_noah_wrfv4_land_surface_scheme
  long_name = flag for NOAH WRFv4 land surface model
  units = flag
  dimensions = ()
  type = integer
[kice]
  standard_name = ice_vertical_dimension
  long_name = vertical loop extent for ice levels, start at 1
  units = count
  dimensions = ()
  type = integer
[lsoil]
  standard_name = soil_vertical_dimension
  long_name = number of soil layers
  units = count
  dimensions = ()
  type = integer
[lsoil_lsm]
  standard_name = soil_vertical_dimension_for_land_surface_model
  long_name = number of soil layers internal to land surface model
  units = count
  dimensions = ()
  type = integer
[lsnow_lsm]
  standard_name = snow_vertical_dimension_for_land_surface_model
  long_name = maximum number of snow layers for land surface model
  units = count
  dimensions = ()
  type = integer
[lsnow_lsm_lbound]
  standard_name = lower_bound_of_snow_vertical_dimension_for_land_surface_model
  long_name = lower bound of of snow-related arrays for land surface model
  units = count
  dimensions = ()
  type = integer
[rdlai]
  standard_name = flag_for_reading_leaf_area_index_from_input
  long_name = flag for reading leaf area index from initial conditions
  units = flag
  dimensions = ()
  type = logical
[ua_phys]
  standard_name = flag_for_noah_lsm_ua_extension
  long_name = flag for using University of Arizona(?) extension for NOAH LSM WRFv4 (see module_sf_noahlsm.F)
  units = flag
  dimensions = ()
  type = logical
[usemonalb]
  standard_name = flag_for_reading_surface_diffused_shortwave_albedo_from_input
  long_name = flag for reading surface diffused shortwave albedo for NOAH LSM WRFv4 (see module_sf_noahlsm.F)
  units = flag
  dimensions = ()
  type = logical
[aoasis]
  standard_name = potential_evaporation_multiplicative_factor
  long_name = potential evaporation multiplicative factor for NOAH LSM WRFv4 (see module_sf_noahlsm.F)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[fasdas]
  standard_name = flag_flux_adjusting_surface_data_assimilation_system
  long_name = flag to use the flux adjusting surface data assimilation system for NOAH LSM WRFv4 (see module_sf_noahlsm.F)
  units = flag
  dimensions = ()
  type = integer
[ivegsrc]
  standard_name = vegetation_type_dataset_choice
  long_name = land use dataset choice
  units = index
  dimensions = ()
  type = integer
[isot]
  standard_name = soil_type_dataset_choice
  long_name = soil type dataset choice
  units = index
  dimensions = ()
  type = integer
[isurban]
  standard_name = urban_vegetation_category
  long_name = index of the urban vegetation category in the chosen vegetation dataset
  units = index
  dimensions = ()
  type = integer
[isice]
  standard_name = ice_vegetation_category
  long_name = index of the permanent snow/ice category in the chosen vegetation dataset
  units = index
  dimensions = ()
  type = integer
[iswater]
  standard_name = water_vegetation_category
  long_name = index of the water body vegetation category in the chosen vegetation dataset
  units = index
  dimensions = ()
  type = integer
[iopt_thcnd]
  standard_name = flag_for_thermal_conductivity_option
  long_name = choice for thermal conductivity option (see module_sf_noahlsm)
  units = index
  dimensions = ()
  type = integer
[spec_adv]
  standard_name = flag_for_individual_cloud_species_advected 
  long_name = flag for individual cloud species advected
  units = flag 
  dimensions = ()
  type = logical
[flgmin]
  standard_name = minimum_large_ice_fraction
  long_name = minimum large ice fraction in F-A mp scheme
  units = frac
  dimensions = (2)
  type = real
  kind = kind_phys
[iopt_dveg]
  standard_name = flag_for_dynamic_vegetation_option
  long_name = choice for dynamic vegetation option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_crs]
  standard_name = flag_for_canopy_stomatal_resistance_option
  long_name = choice for canopy stomatal resistance option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_btr]
  standard_name = flag_for_soil_moisture_factor_stomatal_resistance_option
  long_name = choice for soil moisture factor for canopy stomatal resistance option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_run]
  standard_name = flag_for_runoff_and_groundwater_option
  long_name = choice for runoff and groundwater option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_sfc]
  standard_name = flag_for_surface_layer_drag_coefficient_option
  long_name = choice for surface layer drag coefficient option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_frz]
  standard_name = flag_for_supercooled_liquid_water_option
  long_name = choice for supercooled liquid water option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_inf]
  standard_name = flag_for_frozen_soil_permeability_option
  long_name = choice for frozen soil permeability option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_rad]
  standard_name = flag_for_radiation_transfer_option
  long_name = choice for radiation transfer option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_alb]
  standard_name = flag_for_ground_snow_surface_albedo_option
  long_name = choice for ground snow surface albedo option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_snf]
  standard_name = flag_for_precipitation_partition_option
  long_name = choice for precipitation partition option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_tbot]
  standard_name = flag_for_lower_boundary_soil_temperature_option
  long_name = choice for lower boundary soil temperature option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[iopt_stc]
  standard_name = flag_for_soil_and_snow_temperature_time_stepping_option
  long_name = choice for soil and snow temperature time stepping option (see noahmp module for definition)
  units = index
  dimensions = ()
  type = integer
[lcurr_sf]
  standard_name = flag_for_ocean_currents_in_surface_layer_scheme
  long_name = flag for taking ocean currents into account in surface layer scheme
  units = flag
  dimensions = ()
  type = logical
[pert_cd]
  standard_name = flag_for_perturbation_of_surface_drag_coefficient_for_momentum_in_air
  long_name = flag for perturbing the surface drag coefficient for momentum in surface layer scheme
  units = flag
  dimensions = ()
  type = logical
[ntsflg]
  standard_name = flag_for_updating_skin_temperatuer_in_surface_layer_scheme
  long_name = flag for updating skin temperature in the surface layer scheme
  units = flag
  dimensions = ()
  type = integer
[sfenth]
  standard_name = enthalpy_flux_factor
  long_name = enthalpy flux factor used in surface layer scheme
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[lkm]
  standard_name = flag_for_lake_surface_scheme
  long_name = flag for lake surface model
  units = flag
  dimensions = ()
  type = integer
[ras]
  standard_name = flag_for_ras_deep_convection
  long_name = flag for ras convection scheme
  units = flag
  dimensions = ()
  type = logical
[rhgrd]
  standard_name = fa_threshold_relative_humidity_for_onset_of_condensation
  long_name = relative humidity threshold parameter for condensation for FA scheme
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[flipv]
  standard_name = flag_flip
  long_name = vertical flip logical
  units = flag
  dimensions = ()
  type = logical
[trans_trac]
  standard_name = flag_for_convective_transport_of_tracers
  long_name = flag for convective transport of tracers
  units = flag
  dimensions = ()
  type = logical
[old_monin]
  standard_name = flag_for_old_PBL_scheme
  long_name = flag for using old PBL schemes
  units = flag
  dimensions = ()
  type = logical
[mstrat]
  standard_name = flag_for_moorthi_stratus
  long_name = flag for moorthi approach for stratus
  units = flag
  dimensions = ()
  type = logical
[cscnv]
  standard_name = flag_for_Chikira_Sugiyama_deep_convection
  long_name = flag for Chikira-Sugiyama convection
  units = flag
  dimensions = ()
  type = logical
[satmedmf]
  standard_name = flag_for_scale_aware_TKE_moist_EDMF_PBL
  long_name = flag for scale-aware TKE moist EDMF PBL scheme
  units = flag
  dimensions = ()
  type = logical
[shinhong]
  standard_name = flag_for_scale_aware_Shinhong_PBL
  long_name = flag for scale-aware Shinhong PBL scheme
  units = flag
  dimensions = ()
  type = logical
[do_ysu]
  standard_name = flag_for_ysu
  long_name = flag for YSU PBL scheme
  units = flag
  dimensions = ()
  type = logical
[cal_pre]
  standard_name = flag_for_precipitation_type_algorithm
  long_name = flag controls precip type algorithm
  units = flag
  dimensions = ()
  type = logical
[do_aw]
  standard_name = flag_for_Arakawa_Wu_adjustment
  long_name = flag for Arakawa Wu scale-aware adjustment
  units = flag
  dimensions = ()
  type = logical
[do_awdd]
  standard_name = flag_arakawa_wu_downdraft
  long_name = AW scale-aware option in cs convection downdraft
  units = flag
  dimensions = ()
  type = logical
[flx_form]
  standard_name = flag_flux_form_CS
  long_name = enable use of flux form of equations in CS scheme
  units = flag
  dimensions = ()
  type = logical
[do_shoc]
  standard_name = flag_for_shoc
  long_name = flag for SHOC
  units = flag
  dimensions = ()
  type = logical
[shocaftcnv]
  standard_name = flag_for_shoc_after_convection
  long_name = flag to execute SHOC after convection
  units = flag
  dimensions = ()
  type = logical
[oz_phys]
  standard_name = flag_for_ozone_physics
  long_name = flag for old (2006) ozone physics
  units = flag
  dimensions = ()
  type = logical
[oz_phys_2015]
  standard_name = flag_for_2015_ozone_physics
  long_name = flag for new (2015) ozone physics
  units = flag
  dimensions = ()
  type = logical
[h2o_phys]
  standard_name = flag_for_stratospheric_water_vapor_physics
  long_name = flag for stratospheric water vapor physics
  units = flag
  dimensions = ()
  type = logical
[shcnvcw]
  standard_name = flag_shallow_convective_cloud
  long_name = flag for shallow convective cloud
  units = 
  dimensions = ()
  type = logical
[redrag]
  standard_name = flag_for_reduced_drag_coefficient_over_sea
  long_name = flag for reduced drag coeff. over sea
  units = flag
  dimensions = ()
  type = logical
[hybedmf]
  standard_name = flag_for_hedmf
  long_name = flag for hybrid edmf pbl scheme (moninedmf)
  units = flag
  dimensions = ()
  type = logical
[dspheat]
  standard_name = flag_TKE_dissipation_heating
  long_name = flag for tke dissipative heating
  units = flag
  dimensions = ()
  type = logical
[hurr_pbl]
  standard_name = flag_hurricane_PBL
  long_name = flag for hurricane-specific options in PBL scheme
  units = flag
  dimensions = ()
  type = logical
[lheatstrg]
  standard_name = flag_for_canopy_heat_storage
  long_name = flag for canopy heat storage parameterization
  units = flag
  dimensions = ()
  type = logical
[random_clds]
  standard_name = flag_for_random_clouds_for_RAS
  long_name = flag for using random clouds with the RAS scheme
  units = flag
  dimensions = ()
  type = logical
[shal_cnv]
  standard_name = flag_for_shallow_convection
  long_name = flag for calling shallow convection
  units = flag
  dimensions = ()
  type = logical
[imfshalcnv]
  standard_name = flag_for_mass_flux_shallow_convection_scheme
  long_name = flag for mass-flux shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfshalcnv_sas]
  standard_name = flag_for_sas_shallow_convection_scheme
  long_name = flag for SAS shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfshalcnv_samf]
  standard_name = flag_for_samf_shallow_convection_scheme
  long_name = flag for SAMF shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfshalcnv_gf]
  standard_name = flag_for_gf_shallow_convection_scheme
  long_name = flag for Grell-Freitas shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfshalcnv_gf]
  standard_name = flag_for_ntiedtke_shallow_convection_scheme
  long_name = flag for new Tiedtke shallow convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv]
  standard_name = flag_for_mass_flux_deep_convection_scheme
  long_name = flag for mass-flux deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv_sas]
  standard_name = flag_for_sas_deep_convection_scheme
  long_name = flag for SAS deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv_samf]
  standard_name = flag_for_samf_deep_convection_scheme
  long_name = flag for SAMF deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv_gf]
  standard_name = flag_for_gf_deep_convection_scheme
  long_name = flag for Grell-Freitas deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[imfdeepcnv_ntiedtke]
  standard_name = flag_for_ntiedtke_deep_convection_scheme
  long_name = flag for new Tiedtke deep convection scheme
  units = flag
  dimensions = ()
  type = integer
[hwrf_samfdeep]
  standard_name = flag_for_hwrf_samfdeepcnv_scheme
  long_name = flag for hwrf samfdeepcnv scheme
  units = flag
  dimensions = ()
  type = logical
[hwrf_samfshal]
  standard_name = flag_for_hwrf_samfshalcnv_scheme
  long_name = flag for hwrf samfshalcnv scheme
  units = flag
  dimensions = ()
  type = logical
[isatmedmf]
  standard_name = choice_of_scale_aware_TKE_moist_EDMF_PBL
  long_name = choice of scale-aware TKE moist EDMF PBL scheme
  units = none
  dimensions = ()
  type = integer
[isatmedmf_vdif]
  standard_name = choice_of_original_scale_aware_TKE_moist_EDMF_PBL
  long_name = choice of original scale-aware TKE moist EDMF PBL scheme
  units = none
  dimensions = ()
  type = integer
[isatmedmf_vdifq]
  standard_name = choice_of_updated_scale_aware_TKE_moist_EDMF_PBL
  long_name = choice of updated scale-aware TKE moist EDMF PBL scheme
  units = none
  dimensions = ()
  type = integer
[nmtvr]
  standard_name = number_of_statistical_measures_of_subgrid_orography
  long_name = number of topographic variables in GWD
  units = count
  dimensions = ()
  type = integer
[jcap]
  standard_name = number_of_spectral_wave_trancation_for_sas
  long_name = number of spectral wave trancation used only by sascnv and shalcnv
  units = count
  dimensions = ()
  type = integer
[cs_parm(1)]
  standard_name = updraft_velocity_tunable_parameter_1_CS
  long_name = tunable parameter 1 for Chikira-Sugiyama convection
  units = m s-1
  dimensions = ()
  type = real
  kind = kind_phys
[cs_parm(2)]
  standard_name = updraft_velocity_tunable_parameter_2_CS
  long_name = tunable parameter 2 for Chikira-Sugiyama convection
  units = m s-1
  dimensions = ()
  type = real
  kind = kind_phys
[cs_parm(3)]
  standard_name = detrainment_and_precipitation_tunable_parameter_3_CS
  long_name = partition water between detrainment and precipitation (decrease for more precipitation)
  units = m
  dimensions = ()
  type = real
  kind = kind_phys
[cs_parm(4)]
  standard_name = detrainment_and_precipitation_tunable_parameter_4_CS
  long_name = partition water between detrainment and precipitation (decrease for more precipitation)
  units = m
  dimensions = ()
  type = real
  kind = kind_phys
[cs_parm(9)]
  standard_name = entrainment_efficiency_tunable_parameter_9_CS
  long_name = entrainment efficiency
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[cgwf]
  standard_name = multiplication_factors_for_convective_gravity_wave_drag
  long_name = multiplication factor for convective GWD
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[cdmbgwd]
  standard_name = multiplication_factors_for_mountain_blocking_and_orographic_gravity_wave_drag
  long_name = multiplication factors for cdmb and gwd
  units = none
  dimensions = (4)
  type = real
  kind = kind_phys
[ccwf]
  standard_name = multiplication_factor_for_critical_cloud_workfunction
  long_name = multiplication factor for tical_cloud_workfunction
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[sup]
  standard_name = ice_supersaturation_threshold
  long_name = ice supersaturation parameter for PDF clouds
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[ctei_rm]
  standard_name = critical_cloud_top_entrainment_instability_criteria
  long_name = critical cloud top entrainment instability criteria
  units = none
  dimensions = (2)
  type = real
  kind = kind_phys
[crtrh(1)]
  standard_name = critical_relative_humidity_at_surface
  long_name = critical relative humidity at the surface
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[crtrh(2)]
  standard_name = critical_relative_humidity_at_PBL_top
  long_name = critical relative humidity at the PBL top
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[crtrh(3)]
  standard_name = critical_relative_humidity_at_top_of_atmosphere
  long_name = critical relative humidity at the top of atmosphere
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[prslrd0]
  standard_name = pressure_cutoff_for_rayleigh_damping
  long_name = pressure level from which Rayleigh Damping is applied
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[ral_ts]
  standard_name = time_scale_for_rayleigh_damping
  long_name = time scale for Rayleigh damping in days
  units = d
  dimensions = ()
  type = real
  kind = kind_phys
[clam_deep]
  standard_name = entrainment_rate_coefficient_deep_convection
  long_name = entrainment rate coefficient for deep convection
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[c0s_deep]
  standard_name = rain_conversion_parameter_deep_convection
  long_name = convective rain conversion parameter for deep convection
  units = m-1
  dimensions = ()
  type = real
  kind = kind_phys
[c1_deep]
  standard_name = detrainment_conversion_parameter_deep_convection
  long_name = convective detrainment conversion parameter for deep convection
  units = m-1
  dimensions = ()
  type = real
  kind = kind_phys
[betal_deep]
  standard_name = downdraft_fraction_reaching_surface_over_land_deep_convection
  long_name = downdraft fraction reaching surface over land for deep convection
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[betas_deep]
  standard_name = downdraft_fraction_reaching_surface_over_ocean_deep_convection
  long_name = downdraft fraction reaching surface over ocean for deep convection
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[evfact_deep]
  standard_name = rain_evaporation_coefficient_deep_convection
  long_name = convective rain evaporation coefficient for deep convection
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[evfactl_deep]
  standard_name = rain_evaporation_coefficient_over_land_deep_convection
  long_name = convective rain evaporation coefficient over land for deep convection
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[pgcon_deep]
  standard_name = momentum_transport_reduction_factor_pgf_deep_convection
  long_name = reduction factor in momentum transport due to deep convection induced pressure gradient force
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[asolfac_deep]
  standard_name = aerosol_aware_parameter_deep_convection
  long_name = aerosol-aware parameter inversely proportional to CCN number concentraion from Lim (2011) for deep convection
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[clam_shal]
  standard_name = entrainment_rate_coefficient_shallow_convection
  long_name = entrainment rate coefficient for shallow convection
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[c0s_shal]
  standard_name = rain_conversion_parameter_shallow_convection
  long_name = convective rain conversion parameter for shallow convection
  units = m-1
  dimensions = ()
  type = real
  kind = kind_phys
[c1_shal]
  standard_name = detrainment_conversion_parameter_shallow_convection
  long_name = convective detrainment conversion parameter for shallow convection
  units = m-1
  dimensions = ()
  type = real
  kind = kind_phys
[pgcon_shal]
  standard_name = momentum_transport_reduction_factor_pgf_shallow_convection
  long_name = reduction factor in momentum transport due to shallow convection induced pressure gradient force
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[asolfac_shal]
  standard_name = aerosol_aware_parameter_shallow_convection
  long_name = aerosol-aware parameter inversely proportional to CCN number concentraion from Lim (2011) for shallow convection
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[xkzm_m]
  standard_name = atmosphere_momentum_diffusivity_background
  long_name = background vertical diffusion for momentum
  units = m2 s-1
  dimensions = ()
  type = real
  kind = kind_phys
[xkzm_h]
  standard_name = atmosphere_heat_diffusivity_background
  long_name = background vertical diffusion for heat q
  units = m2 s-1
  dimensions = ()
  type = real
  kind = kind_phys
[xkzm_s]
  standard_name = diffusivity_background_sigma_level
  long_name = sigma threshold for background mom. diffusion
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[nstf_name(1)]
  standard_name = flag_for_nsstm_run
  long_name = NSSTM flag: off/uncoupled/coupled=0/1/2
  units = flag
  dimensions = ()
  type = integer
[nstf_name(4)]
  standard_name = vertical_temperature_average_range_lower_bound
  long_name = zsea1 in mm
  units = mm
  dimensions = ()
  type = integer
[nstf_name(5)]
  standard_name = vertical_temperature_average_range_upper_bound
  long_name = zsea2 in mm
  units = mm
  dimensions = ()
  type = integer
[frac_grid]
  standard_name = flag_for_fractional_grid
  long_name = flag for fractional grid
  units = flag
  dimensions = ()
  type = logical
[min_lakeice]
  standard_name = lake_ice_minimum
  long_name = minimum lake ice value
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[min_seaice]
  standard_name = sea_ice_minimum
  long_name = minimum sea ice value
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[rho_h2o]
  standard_name = density_of_fresh_water
  long_name = density of fresh water
  units = kg m-3
  dimensions = ()
  type = real
  kind = kind_phys
[sfc_z0_type]
  standard_name = flag_for_surface_roughness_option_over_ocean
  long_name = surface roughness options over ocean
  units = flag
  dimensions = ()
  type = integer
[xkzminv]
  standard_name = atmosphere_heat_diffusivity_background_maximum
  long_name = maximum background value of heat diffusivity
  units = m2 s-1
  dimensions = ()
  type = real
  kind = kind_phys
[moninq_fac]
  standard_name = atmosphere_diffusivity_coefficient_factor
  long_name = multiplicative constant for atmospheric diffusivities (AKA alpha)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[dspfac]
  standard_name = tke_dissipative_heating_factor
  long_name = tke dissipative heating factor
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[bl_upfr]
  standard_name = updraft_fraction_in_boundary_layer_mass_flux_scheme
  long_name = updraft fraction in boundary layer mass flux scheme
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[bl_dnfr]
  standard_name = downdraft_fraction_in_boundary_layer_mass_flux_scheme
  long_name = downdraft fraction in boundary layer mass flux scheme
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[z0fac]
  standard_name = surface_roughness_fraction_factor
  long_name = surface roughness fraction for canopy heat storage parameterization
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[e0fac]
  standard_name = latent_heat_flux_fraction_factor_relative_to_sensible_heat_flux
  long_name = latent heat flux fraction relative to sensible heat flux for canopy heat storage parameterization
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[nca]
  standard_name = number_of_independent_cellular_automata
  long_name = number of independent cellular automata
  units = count
  dimensions = ()
  type = integer
[nlives]
  standard_name = cellular_automata_lifetime
  long_name = cellular automata lifetime
  units = count
  dimensions = ()
  type = integer
[ncells]
  standard_name = cellular_automata_finer_grid
  long_name = cellular automata finer grid
  units = count
  dimensions = ()
  type = integer
[nfracseed]
  standard_name = cellular_automata_seed_probability
  long_name = cellular automata seed probability
  units = fraction
  dimensions = ()
  type = real
  kind = kind_phys
[nseed]
  standard_name = cellular_automata_seed_frequency
  long_name = cellular automata seed frequency in units of time steps
  units = count
  dimensions = ()
  type = integer
[do_ca]
  standard_name = flag_for_cellular_automata
  long_name = cellular automata main switch
  units = flag
  dimensions = ()
  type = logical
[ca_sgs]
  standard_name = flag_for_sgs_cellular_automata
  long_name = switch for sgs ca
  units = flag
  dimensions = ()
  type = logical
[ca_global]
  standard_name = flag_for_global_cellular_automata
  long_name = switch for global ca
  units = flag
  dimensions = ()
  type = logical
[ca_closure]
  standard_name = flag_for_global_cellular_automata_closure
  long_name = switch for ca on closure
  units = flag
  dimensions = ()
  type = logical
[ca_entr]
  standard_name = flag_for_global_cellular_automata_entr
  long_name = switch for ca on entr
  units = flag
  dimensions = ()
  type = logical
[ca_trigger]
  standard_name = flag_for_global_cellular_automata_trigger
  long_name = switch for ca on trigger
  units = flag
  dimensions = ()
  type = logical
[ca_smooth]
  standard_name = flag_for_gaussian_spatial_filter
  long_name = switch for gaussian spatial filter
  units = flag
  dimensions = ()
  type = logical
[iseed_ca]
  standard_name = seed_for_random_number_generation_in_cellular_automata_scheme
  long_name = seed for random number generation in ca scheme
  units = none
  dimensions = ()
  type = integer
[nspinup]
  standard_name = number_of_iterations_to_spin_up_cellular_automata
  long_name = number of iterations to spin up the ca
  units = count
  dimensions = ()
  type = integer
[nthresh]
  standard_name = threshold_for_perturbed_vertical_velocity
  long_name = threshold used for perturbed vertical velocity
  units = m s-1
  dimensions = ()
  type = real
  kind = kind_phys
[do_sppt]
  standard_name = flag_for_stochastic_physics_perturbations
  long_name = flag for stochastic physics perturbations
  units = flag
  dimensions = ()
  type = logical
[use_zmtnblck]
  standard_name = flag_for_mountain_blocking
  long_name = flag for mountain blocking
  units = flag
  dimensions = ()
  type = logical
[do_shum]
  standard_name = flag_for_stochastic_shum_option
  long_name = flag for stochastic shum option
  units = flag
  dimensions = ()
  type = logical
[do_skeb]
  standard_name = flag_for_stochastic_skeb_option
  long_name = flag for stochastic skeb option
  units = flag
  dimensions = ()
  type = logical
[lndp_type]
  standard_name = index_for_stochastic_land_surface_perturbation_type
  long_name = index for stochastic land surface perturbations type
  units = index
  dimensions = ()
  type = integer
[n_var_lndp]
  standard_name = number_of_land_surface_variables_perturbed
  long_name = number of land surface variables perturbed
  units = count
  dimensions = ()
  type = integer
[lndp_prt_list]
  standard_name =magnitude_of_perturbations_for_landperts
  long_name = magnitude of perturbations for landperts
  units = variable
  dimensions = (number_of_land_surface_variables_perturbed) 
  type = real
  kind = kind_phys
[lndp_var_list]
  standard_name = variables_to_be_perturbed_for_landperts
  long_name = variables to be perturbed for landperts
  units = none
  dimensions =  (number_of_land_surface_variables_perturbed) 
  type = character
  kind = len=3
[ntrac]
  standard_name = number_of_tracers
  long_name = number of tracers
  units = count
  dimensions = ()
  type = integer
[ntracp1]
  standard_name = number_of_tracers_plus_one
  long_name = number of tracers plus one
  units = count
  dimensions = ()
  type = integer
[ntqv]
  standard_name = index_for_water_vapor
  long_name = tracer index for water vapor (specific humidity)
  units = index
  dimensions = ()
  type = integer
[ntoz]
  standard_name = index_for_ozone
  long_name = tracer index for ozone mixing ratio
  units = index
  dimensions = ()
  type = integer
[ntcw]
  standard_name = index_for_liquid_cloud_condensate
  long_name = tracer index for cloud condensate (or liquid water)
  units = index
  dimensions = ()
  type = integer
[ntiw]
  standard_name = index_for_ice_cloud_condensate
  long_name = tracer index for  ice water
  units = index
  dimensions = ()
  type = integer
[ntrw]
  standard_name = index_for_rain_water
  long_name = tracer index for rain water
  units = index
  dimensions = ()
  type = integer
[ntsw]
  standard_name = index_for_snow_water
  long_name = tracer index for snow water
  units = index
  dimensions = ()
  type = integer
[ntgl]
  standard_name = index_for_graupel
  long_name = tracer index for graupel
  units = index
  dimensions = ()
  type = integer
[ntclamt]
  standard_name = index_for_cloud_amount
  long_name = tracer index for cloud amount integer
  units = index
  dimensions = ()
  type = integer
[ntlnc]
  standard_name = index_for_liquid_cloud_number_concentration
  long_name = tracer index for liquid number concentration
  units = index
  dimensions = ()
  type = integer
[ntinc]
  standard_name = index_for_ice_cloud_number_concentration
  long_name = tracer index for ice    number concentration
  units = index
  dimensions = ()
  type = integer
[ntrnc]
  standard_name = index_for_rain_number_concentration
  long_name = tracer index for rain   number concentration
  units = index
  dimensions = ()
  type = integer
[ntsnc]
  standard_name = index_for_snow_number_concentration
  long_name = tracer index for snow   number concentration
  units = index
  dimensions = ()
  type = integer
[ntgnc]
  standard_name = index_for_graupel_number_concentration
  long_name = tracer index for graupel number concentration
  units = index
  dimensions = ()
  type = integer
[ntke]
  standard_name = index_for_turbulent_kinetic_energy
  long_name = tracer index for turbulent kinetic energy
  units = index
  dimensions = ()
  type = integer
[nqrimef]
  standard_name = index_for_mass_weighted_rime_factor
  long_name = tracer index for mass weighted rime factor
  units = index
  dimensions = ()
  type = integer
[ntwa]
  standard_name = index_for_water_friendly_aerosols
  long_name = tracer index for water friendly aerosol
  units = index
  dimensions = ()
  type = integer
[ntia]
  standard_name = index_for_ice_friendly_aerosols
  long_name = tracer index for ice friendly aerosol
  units = index
  dimensions = ()
  type = integer
[ntchm]
  standard_name = number_of_chemical_tracers
  long_name = number of chemical tracers
  units = count
  dimensions = ()
  type = integer
[ntchs]
  standard_name = index_for_first_chemical_tracer
  long_name = tracer index for first chemical tracer
  units = index
  dimensions = ()
  type = integer
[ntdiag]
  standard_name = diagnostics_control_for_chemical_tracers
  long_name = array to control diagnostics for chemical tracers
  units = flag
  dimensions = (number_of_chemical_tracers)
  type = logical
[fscav]
  standard_name = coefficients_for_aerosol_scavenging
  long_name = array of aerosol scavenging coefficients
  units = none
  dimensions = (number_of_chemical_tracers)
  type = real
  kind = kind_phys
[ntot2d]
  standard_name = number_of_fields_in_phyf2d
  long_name = total number of variables for phyf2d
  units = count
  dimensions = ()
  type = integer
[ntot3d]
  standard_name = number_of_fields_in_phyf3d
  long_name = total number of variables for phyf3d
  units = count
  dimensions = ()
  type = integer
[indcld]
  standard_name = index_for_cloud_fraction_in_3d_arrays_for_microphysics
  long_name = index of cloud fraction in phyf3d (used only for SHOC or MG)
  units = index
  dimensions = ()
  type = integer
[num_p2d]
  standard_name = array_dimension_of_2d_arrays_for_microphysics
  long_name = number of 2D arrays needed for microphysics
  units = count
  dimensions = ()
  type = integer
[num_p3d]
  standard_name = array_dimension_of_3d_arrays_for_microphysics
  long_name = number of 3D arrays needed for microphysics
  units = count
  dimensions = ()
  type = integer
[nkbfshoc]
  standard_name = index_of_kinematic_buoyancy_flux_from_shoc_in_phy_f3d
  long_name = the index of upward kinematic buoyancy flux from SHOC in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nahdshoc]
  standard_name = index_of_atmosphere_heat_diffusivity_from_shoc_in_phy_f3d
  long_name = the index of diffusivity for heat from from SHOC in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nscfshoc]
  standard_name = index_of_subgrid_scale_cloud_fraction_from_shoc_in_phy_f3d
  long_name = the index of subgrid-scale cloud fraction from from SHOC in phy_f3d
  units = index
  dimensions = ()
  type = integer
[ncnvcld3d]
  standard_name = number_of_convective_3d_cloud_fields
  long_name = number of convective 3d clouds fields
  units = count
  dimensions = ()
  type = integer
[npdf3d]
  standard_name = number_of_3d_arrays_associated_with_pdf_based_clouds
  long_name = number of 3d arrays associated with pdf based clouds/mp
  units = count
  dimensions = ()
  type = integer
[nctp]
  standard_name = number_of_cloud_types_CS
  long_name = number of cloud types in Chikira-Sugiyama scheme
  units = count
  dimensions = ()
  type = integer
[ncnvw]
  standard_name = index_for_convective_cloud_water_mixing_ratio_in_phy_f3d
  long_name = the index of convective cloud water mixing ratio in phy f3d
  units = index
  dimensions = ()
  type = integer
[ncnvc]
  standard_name = index_for_convective_cloud_cover_in_phy_f3d
  long_name = the index of convective cloud cover in phy f3d
  units = index
  dimensions = ()
  type = integer
[nleffr]
  standard_name = index_for_cloud_liquid_water_effective_radius
  long_name = the index of cloud liquid water effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nieffr]
  standard_name = index_for_ice_effective_radius
  long_name = the index of ice effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nreffr]
  standard_name = index_for_rain_effective_radius
  long_name = the index of rain effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nseffr]
  standard_name = index_for_snow_effective_radius
  long_name = the index of snow effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[ngeffr]
  standard_name = index_for_graupel_effective_radius
  long_name = the index of graupel effective radius in phy_f3d
  units = index
  dimensions = ()
  type = integer
[nT2delt]
  standard_name = index_for_air_temperature_two_timesteps_back
  long_name = the index of air temperature two timesteps back in phy f3d
  units = 
  dimensions = ()
  type = integer
[nTdelt]
  standard_name = index_for_air_temperature_at_previous_timestep
  long_name = the index of air temperature at previous timestep in phy f3d
  units = 
  dimensions = ()
  type = integer
[nqv2delt]
  standard_name = index_for_specific_humidity_two_timesteps_back
  long_name = the index of specific humidity two timesteps back in phy f3d
  units = 
  dimensions = ()
  type = integer
[nqvdelt]
  standard_name = index_for_specific_humidity_at_previous_timestep
  long_name = the index of specific humidity at previous timestep in phy f3d
  units = 
  dimensions = ()
  type = integer
[nps2delt]
  standard_name = index_for_surface_air_pressure_two_timesteps_back
  long_name = the index of surface air pressure two timesteps back in phy f2d
  units = 
  dimensions = ()
  type = integer
[npsdelt]
  standard_name = index_for_surface_air_pressure_at_previous_timestep
  long_name = the index of surface air pressure at previous timestep in phy f2d
  units = 
  dimensions = ()
  type = integer
[debug]
  standard_name = flag_debug
  long_name = control flag for debug
  units = flag
  dimensions = ()
  type = logical
[ipt]
  standard_name = index_for_diagnostic_printout
  long_name = horizontal index for point used for diagnostic printout
  units = index
  dimensions = ()
  type = integer
[lprnt]
  standard_name = flag_print
  long_name = control flag for diagnostic print out
  units = flag
  dimensions = ()
  type = logical
[lsswr]
  standard_name = flag_to_calc_sw
  long_name = logical flags for sw radiation calls
  units = flag
  dimensions = ()
  type = logical
[lslwr]
  standard_name = flag_to_calc_lw
  long_name = logical flags for lw radiation calls
  units = flag
  dimensions = ()
  type = logical
[solhr]
  standard_name = forecast_hour_of_the_day
  long_name = time in hours after 00z at the current timestep
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[solcon]
  standard_name = solar_constant
  long_name = solar constant (sun-earth distant adjusted)
  units = W m-2
  dimensions = ()
  type = real
  kind = kind_phys
[slag]
  standard_name = equation_of_time
  long_name = equation of time (radian)
  units = radian
  dimensions = ()
  type = real
  kind = kind_phys
[sdec]
  standard_name = sine_of_solar_declination_angle
  long_name = sin of the solar declination angle
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[cdec]
  standard_name = cosine_of_solar_declination_angle
  long_name = cos of the solar declination angle
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[clstp]
  standard_name = convective_cloud_switch
  long_name = index used by cnvc90 (for convective clouds)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[phour]
  standard_name = forecast_time_at_previous_timestep
  long_name = forecast time at the previous timestep
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[fhour]
  standard_name = forecast_time
  long_name = current forecast time
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[zhour]
  standard_name = time_since_diagnostics_zeroed
  long_name = time since diagnostics variables have been zeroed
  units = h
  dimensions = ()
  type = real
  kind = kind_phys
[kdt]
  standard_name = index_of_time_step
  long_name = current forecast iteration
  units = index
  dimensions = ()
  type = integer
[first_time_step]
  standard_name = flag_for_first_time_step
  long_name = flag for first time step for time integration loop (cold/warmstart)
  units = flag
  dimensions = ()
  type = logical
[restart]
  standard_name = flag_for_restart
  long_name = flag for restart (warmstart) or coldstart
  units = flag
  dimensions = ()
  type = logical
[hydrostatic]
  standard_name = flag_for_hydrostatic_solver
  long_name = flag for hydrostatic solver from dynamics
  units = flag
  dimensions = ()
  type = logical
[jdat]
  standard_name = forecast_date_and_time
  long_name = current forecast date and time
  units = none
  dimensions = (8)
  type = integer
[imn]
  standard_name = forecast_month
  long_name = current forecast month
  units = none
  dimensions = ()
  type = integer
[yearlen]
  standard_name = number_of_days_in_year
  long_name = number of days in a year
  units = days
  dimensions = ()
  type = integer
[julian]
  standard_name = julian_day
  long_name = julian day
  units = days
  dimensions = ()
  type = real
  kind = kind_phys
[iccn]
  standard_name = flag_for_in_ccn_forcing_for_morrison_gettelman_microphysics
  long_name = flag for IN and CCN forcing for morrison gettelman microphysics
  units = none
  dimensions = ()
  type = integer
[sec]
  standard_name = seconds_elapsed_since_model_initialization
  long_name = seconds elapsed since model initialization
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[si]
  standard_name = vertical_sigma_coordinate_for_radiation_initialization
  long_name = vertical sigma coordinate for radiation initialization
  units = none
  dimensions = (number_of_vertical_layers_for_radiation_calculations_plus_one)
  type = real
  kind = kind_phys
[dxinv]
  standard_name = inverse_scaling_factor_for_critical_relative_humidity
  long_name = inverse scaling factor for critical relative humidity
  units = rad2 m-2
  dimensions = ()
  type = real
  kind = kind_phys
[dxmax]
  standard_name = maximum_scaling_factor_for_critical_relative_humidity
  long_name = maximum scaling factor for critical relative humidity
  units = m2 rad-2
  dimensions = ()
  type = real
  kind = kind_phys
[dxmin]
  standard_name = minimum_scaling_factor_for_critical_relative_humidity
  long_name = minimum scaling factor for critical relative humidity
  units = m2 rad-2
  dimensions = ()
  type = real
  kind = kind_phys
[rhcmax]
  standard_name = maximum_critical_relative_humidity
  long_name = maximum critical relative humidity
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[icloud]
  standard_name = cloud_effect_to_optical_depth_and_cloud_fraction
  long_name = cloud effect to the optical depth and cloud fraction in radiation
  units = flag
  dimensions = ()
  type = integer
[gwd_opt]
  standard_name = gwd_opt
  long_name = flag to choose gwd scheme
  units = flag
  dimensions = () 
  type = integer
[do_mynnedmf]
  standard_name = do_mynnedmf
  long_name = flag to activate MYNN-EDMF
  units = flag
  dimensions = ()
  type = logical
[do_mynnsfclay]
  standard_name = do_mynnsfclay
  long_name = flag to activate MYNN surface layer
  units = flag
  dimensions = ()
  type = logical
[do_myjsfc]
  standard_name = do_myjsfc
  long_name = flag to activate MYJ surface layer scheme
  units = flag
  dimensions = ()
  type = logical
[do_myjpbl]
  standard_name = do_myjpbl
  long_name = flag to activate MYJ PBL scheme
  units = flag
  dimensions = ()
  type = logical
[grav_settling]
  standard_name = grav_settling
  long_name = flag to activate gravitational setting of fog
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_tkebudget]
  standard_name = tke_budget
  long_name = flag for activating TKE budget
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_tkeadvect]
  standard_name = tke_advect
  long_name = flag for activating TKE advection
  units = flag
  dimensions = ()
  type = logical
[bl_mynn_cloudpdf]
  standard_name = cloudpdf
  long_name = flag to determine which cloud PDF to use
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_mixlength]
  standard_name = mixing_length_flag
  long_name = flag to determine which mixing length form to use
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_edmf]
  standard_name = edmf_flag
  long_name = flag to activate the mass-flux scheme
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_edmf_mom]
  standard_name = edmf_momentum_transport_flag
  long_name = flag to activate the transport of momentum
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_edmf_tke]
  standard_name = edmf_tke_transport_flag
  long_name = flag to activate the transport of TKE
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_edmf_part]
  standard_name = edmf_partition_flag
  long_name = flag to partitioning og the MF and ED areas
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_cloudmix]
  standard_name = cloud_specie_mix_flag
  long_name = flag to activate mixing of cloud species
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_mixqt]
  standard_name = mix_total_water_flag
  long_name = flag to mix total water or individual species
  units = flag
  dimensions = ()
  type = integer
[bl_mynn_output]
  standard_name = mynn_output_flag
  long_name = flag initialize and output extra 3D variables
  units = flag
  dimensions = ()
  type = integer
[icloud_bl]
  standard_name = couple_sgs_clouds_to_radiation_flag
  long_name = flag for coupling sgs clouds to radiation
  units = flag
  dimensions = ()
  type = integer
[var_ric]
  standard_name = flag_variable_bulk_richardson_number
  long_name = flag for calculating variable bulk richardson number for hurricane PBL
  units = flag
  dimensions = ()
  type = real
  kind = kind_phys
[coef_ric_l]
  standard_name = coefficient_for_variable_bulk_richardson_number_over_land
  long_name = coefficient for calculating variable bulk richardson number for hurricane PBL over land
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[coef_ric_s]
  standard_name = coefficient_for_variable_bulk_richardson_number_over_ocean
  long_name = coefficient for calculating variable bulk richardson number for hurricane PBL over ocean
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[do_ugwp]
  standard_name = do_ugwp
  long_name = flag to activate CIRES UGWP
  units = flag
  dimensions = ()
  type = logical
[do_tofd]
  standard_name = turb_oro_form_drag_flag
  long_name = flag for turbulent orographic form drag
  units = flag
  dimensions = ()
  type = logical
[do_gwd]
  standard_name = flag_for_gravity_wave_drag
  long_name = flag for gravity wave drag (gwd)
  units = flag
  dimensions = ()
  type = logical
[do_cnvgwd]
  standard_name = flag_for_convective_gravity_wave_drag
  long_name = flag for convective gravity wave drag (gwd)
  units = flag
  dimensions = ()
  type = logical
[ldiag_ugwp]
  standard_name = diag_ugwp_flag
  long_name = flag for CIRES UGWP Diagnostics
  units = flag
  dimensions = ()
  type = logical
[uni_cld]
  standard_name = flag_for_uni_cld
  long_name = flag for uni_cld
  units = flag
  dimensions = ()
  type = logical
[lmfshal]
  standard_name = flag_for_lmfshal
  long_name = flag for lmfshal
  units = flag
  dimensions = ()
  type = logical
[lmfdeep2]
  standard_name = flag_for_scale_aware_mass_flux_convection
  long_name = flag for some scale-aware mass-flux convection scheme active
  units = flag
  dimensions = ()
  type = logical
  
########################################################################
[ccpp-table-properties]
  name = GFS_grid_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_grid_type
  type = ddt
[area]
  standard_name = cell_area
  long_name = area of the grid cell
  units = m2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dx]
  standard_name = cell_size
  long_name = relative dx for the grid cell
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xlat]
  standard_name = latitude
  long_name = latitude
  units = radian
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xlon]
  standard_name = longitude
  long_name = longitude
  units = radian
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[coslat]
  standard_name = cosine_of_latitude
  long_name = cosine of latitude
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sinlat]
  standard_name = sine_of_latitude
  long_name = sine of latitude
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xlat_d]
  standard_name = latitude_in_degree
  long_name = latitude in degree north
  units = degree_north
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xlon_d]
  standard_name = longitude_in_degree
  long_name = longitude in degree east
  units = degree_east
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[jindx1_o3]
  standard_name = lower_ozone_interpolation_index
  long_name = interpolation low index for ozone
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[jindx2_o3]
  standard_name = upper_ozone_interpolation_index
  long_name = interpolation high index for ozone
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[ddy_o3]
  standard_name = ozone_interpolation_weight
  long_name = interpolation high index for ozone
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[jindx1_h]
  standard_name = lower_water_vapor_interpolation_index
  long_name = interpolation low index for stratospheric water vapor
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[jindx2_h]
  standard_name = upper_water_vapor_interpolation_index
  long_name = interpolation high index for stratospheric water vapor
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[ddy_h]
  standard_name = water_vapor_interpolation_weight
  long_name = interpolation high index for stratospheric water vapor
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[jindx1_aer]
  standard_name = lower_aerosol_y_interpolation_index
  long_name = interpolation low index for prescribed aerosols in the y direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[jindx2_aer]
  standard_name = upper_aerosol_y_interpolation_index
  long_name = interpolation high index for prescribed aerosols in the y direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[ddy_aer]
  standard_name = aerosol_y_interpolation_weight
  long_name = interpolation high index for prescribed aerosols in the y direction
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[iindx1_aer]
  standard_name = lower_aerosol_x_interpolation_index
  long_name = interpolation low index for prescribed aerosols in the x direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[iindx2_aer]
  standard_name = upper_aerosol_x_interpolation_index
  long_name = interpolation high index for prescribed aerosols in the x direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[ddx_aer]
  standard_name = aerosol_x_interpolation_weight
  long_name = interpolation high index for prescribed aerosols in the x direction
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[jindx1_ci]
  standard_name = lower_cloud_nuclei_y_interpolation_index
  long_name = interpolation low index for ice and cloud condensation nuclei in the y direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[jindx2_ci]
  standard_name = upper_cloud_nuclei_y_interpolation_index
  long_name = interpolation high index for ice and cloud condensation nuclei in the y direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[ddy_ci]
  standard_name = cloud_nuclei_y_interpolation_weight
  long_name = interpolation high index for ice and cloud condensation nuclei in the y direction
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[iindx1_ci]
  standard_name = lower_cloud_nuclei_x_interpolation_index
  long_name = interpolation low index for ice and cloud condensation nuclei in the x direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[iindx2_ci]
  standard_name = upper_cloud_nuclei_x_interpolation_index
  long_name = interpolation high index for ice and cloud condensation nuclei in the x direction
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[ddx_ci]
  standard_name = cloud_nuclei_x_interpolation_weight
  long_name = interpolation high index for ice and cloud condensation nuclei in the x direction
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_tbd_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_tbd_type
  type = ddt
[icsdsw]
  standard_name = seed_random_numbers_sw
  long_name = random seeds for sub-column cloud generators sw
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_lw_clouds_sub_grid_approximation == 2 .or. flag_for_sw_clouds_grid_approximation == 2)
[icsdlw]
  standard_name = seed_random_numbers_lw
  long_name = random seeds for sub-column cloud generators lw
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_lw_clouds_sub_grid_approximation == 2 .or. flag_for_sw_clouds_grid_approximation == 2)
[ozpl]
  standard_name = ozone_forcing
  long_name = ozone forcing data
  units = various
  dimensions = (horizontal_loop_extent,vertical_dimension_of_ozone_forcing_data,number_of_coefficients_in_ozone_forcing_data)
  type = real
  kind = kind_phys
[h2opl]
  standard_name = h2o_forcing
  long_name = water forcing data
  units = various
  dimensions = (horizontal_loop_extent,vertical_dimension_of_h2o_forcing_data,number_of_coefficients_in_h2o_forcing_data)
  type = real
  kind = kind_phys
[hpbl]
  standard_name = atmosphere_boundary_layer_thickness
  long_name = pbl height
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[in_nm]
  standard_name = ice_nucleation_number
  long_name = ice nucleation number in MG MP
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[ccn_nm]
  standard_name = tendency_of_ccn_activated_number
  long_name = tendency of ccn activated number
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[aer_nm]
  standard_name = aerosol_number_concentration_from_gocart_aerosol_climatology
  long_name = GOCART aerosol climatology number concentration
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_aerosol_tracers_MG)
  type = real
  kind = kind_phys
[imap]
  standard_name = map_of_block_column_number_to_global_i_index
  long_name = map of local index ix to global index i for this block
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
[jmap]
  standard_name = map_of_block_column_number_to_global_j_index
  long_name = map of local index ix to global index j for this block
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
[rann]
  standard_name = random_number_array
  long_name = random number array (0-1)
  units = none
  dimensions = (horizontal_loop_extent,array_dimension_of_random_number)
  type = real
  kind = kind_phys
[acv]
  standard_name = accumulated_lwe_thickness_of_convective_precipitation_amount_cnvc90
  long_name = accumulated convective rainfall amount for cnvc90 only
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[acvb]
  standard_name = smallest_cloud_base_vertical_index_encountered_thus_far
  long_name = smallest cloud base vertical index encountered thus far
  units = index
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[acvt]
  standard_name = largest_cloud_top_vertical_index_encountered_thus_far
  long_name = largest cloud top vertical index encountered thus far
  units = index
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dtdtr]
  standard_name = tendency_of_air_temperature_due_to_radiative_heating_on_physics_time_step
  long_name = temp. change due to radiative heating per time step
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_stochastic_physics_perturbations .or. flag_for_global_cellular_automata)
[drain_cpl]
  standard_name = tendency_of_lwe_thickness_of_precipitation_amount_for_coupling
  long_name = change in rain_cpl (coupling_type)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling .or. flag_for_chemistry_coupling)
[dsnow_cpl]
  standard_name = tendency_of_lwe_thickness_of_snow_amount_for_coupling
  long_name = change in show_cpl (coupling_type)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_flux_coupling .or. flag_for_chemistry_coupling)
[phy_fctd]
  standard_name = cloud_base_mass_flux
  long_name = cloud base mass flux for CS convection
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent,number_of_cloud_types_CS)
  type = real
  kind = kind_phys
  active = (number_of_cloud_types_CS > 0 .and. flag_for_Chikira_Sugiyama_deep_convection)
[phy_f2d(:,index_for_surface_air_pressure_two_timesteps_back)]
  standard_name = surface_air_pressure_two_timesteps_back
  long_name = surface air pressure two timesteps back
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[phy_f2d(:,index_for_surface_air_pressure_at_previous_timestep)]
  standard_name = surface_air_pressure_at_previous_timestep
  long_name = surface air pressure at previous timestep
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[phy_f2d(:,array_dimension_of_2d_arrays_for_microphysics)]
  standard_name = surface_wind_enhancement_due_to_convection
  long_name = surface wind enhancement due to convection
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_air_temperature_two_timesteps_back)]
  standard_name = air_temperature_two_timesteps_back
  long_name = air temperature two timesteps back
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_specific_humidity_two_timesteps_back)]
  standard_name = water_vapor_specific_humidity_two_timesteps_back
  long_name = water vapor specific humidity two timesteps back
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_air_temperature_at_previous_timestep)]
  standard_name = air_temperature_at_previous_timestep
  long_name = air temperature at previous timestep
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_specific_humidity_at_previous_timestep)]
  standard_name = water_vapor_specific_humidity_at_previous_timestep
  long_name = water vapor specific humidity at previous timestep
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_convective_cloud_water_mixing_ratio_in_phy_f3d)]
  standard_name = convective_cloud_water_mixing_ratio_in_phy_f3d
  long_name = convective cloud water mixing ratio in the phy_f3d array
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_convective_cloud_cover_in_phy_f3d)]
  standard_name = convective_cloud_cover_in_phy_f3d
  long_name = convective cloud cover in the phy_f3d array
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_of_kinematic_buoyancy_flux_from_shoc_in_phy_f3d)]
  standard_name = kinematic_buoyancy_flux_from_shoc
  long_name = upward kinematic buoyancy flux from the SHOC scheme
  units = K m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_of_atmosphere_heat_diffusivity_from_shoc_in_phy_f3d)]
  standard_name = atmosphere_heat_diffusivity_from_shoc
  long_name = diffusivity for heat from the SHOC scheme
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_of_subgrid_scale_cloud_fraction_from_shoc_in_phy_f3d)]
  standard_name = subgrid_scale_cloud_fraction_from_shoc
  long_name = subgrid-scale cloud fraction from the SHOC scheme
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_cloud_fraction_in_3d_arrays_for_microphysics)]
  standard_name = cloud_fraction_for_MG
  long_name = cloud fraction used by Morrison-Gettelman MP
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_cloud_liquid_water_effective_radius)]
  standard_name = effective_radius_of_stratiform_cloud_liquid_water_particle_in_um
  long_name = eff. radius of cloud liquid water particle in micrometer
  units = um
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_ice_effective_radius)]
  standard_name = effective_radius_of_stratiform_cloud_ice_particle_in_um
  long_name = eff. radius of cloud ice water particle in micrometer
  units = um
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_rain_effective_radius)]
  standard_name = effective_radius_of_stratiform_cloud_rain_particle_in_um
  long_name = effective radius of cloud rain particle in micrometers
  units = um
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_snow_effective_radius)]
  standard_name = effective_radius_of_stratiform_cloud_snow_particle_in_um
  long_name = effective radius of cloud snow particle in micrometers
  units = um
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[phy_f3d(:,:,index_for_graupel_effective_radius)]
  standard_name = effective_radius_of_stratiform_cloud_graupel_particle_in_um
  long_name = eff. radius of cloud graupel particle in micrometer
  units = um
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[forcet]
  standard_name = temperature_tendency_due_to_dynamics
  long_name = temperature tendency due to dynamics only
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mass_flux_deep_convection_scheme == flag_for_gf_deep_convection_scheme .or. flag_for_mass_flux_deep_convection_scheme == flag_for_ntiedtke_deep_convection_scheme)
[forceq]
  standard_name = moisture_tendency_due_to_dynamics
  long_name = moisture tendency due to dynamics only
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mass_flux_deep_convection_scheme == flag_for_gf_deep_convection_scheme .or. flag_for_mass_flux_deep_convection_scheme == flag_for_ntiedtke_deep_convection_scheme)
[prevst]
  standard_name = temperature_from_previous_timestep
  long_name = temperature from previous time step
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mass_flux_deep_convection_scheme == flag_for_gf_deep_convection_scheme .or. flag_for_mass_flux_deep_convection_scheme == flag_for_ntiedtke_deep_convection_scheme)
[prevsq]
  standard_name = moisture_from_previous_timestep
  long_name = moisture from previous time step
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_mass_flux_deep_convection_scheme == flag_for_gf_deep_convection_scheme .or. flag_for_mass_flux_deep_convection_scheme == flag_for_ntiedtke_deep_convection_scheme)
[cactiv]
  standard_name = conv_activity_counter
  long_name = convective activity memory
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_mass_flux_deep_convection_scheme == flag_for_gf_deep_convection_scheme)
[CLDFRA_BL]
  standard_name = subgrid_cloud_fraction_pbl
  long_name = subgrid cloud fraction from PBL scheme
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[QC_BL]
  standard_name = subgrid_cloud_water_mixing_ratio_pbl
  long_name = subgrid cloud water mixing ratio from PBL scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[QI_BL]
  standard_name = subgrid_cloud_ice_mixing_ratio_pbl
  long_name = subgrid cloud ice mixing ratio from PBL scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[el_pbl]
  standard_name = mixing_length
  long_name = mixing length in meters
  units = m
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[Sh3D]
  standard_name = stability_function_for_heat
  long_name = stability function for heat
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[qke]
  standard_name = tke_at_mass_points
  long_name = 2 x tke at mass points
  units = m2 s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[tsq]
  standard_name = t_prime_squared
  long_name = temperature fluctuation squared
  units = K2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[qsq]
  standard_name = q_prime_squared
  long_name = water vapor fluctuation squared
  units = kg2 kg-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[cov]
  standard_name = t_prime_q_prime
  long_name = covariance of temperature and moisture
  units = K kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[phy_myj_qsfc]
  standard_name = surface_specific_humidity_for_MYJ_schemes
  long_name = surface air saturation specific humidity for MYJ schemes
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_thz0]
  standard_name = potential_temperature_at_viscous_sublayer_top
  long_name = potential temperature at viscous sublayer top over water
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_qz0]
  standard_name = specific_humidity_at_viscous_sublayer_top
  long_name = specific humidity at_viscous sublayer top over water
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_uz0]
  standard_name = u_wind_component_at_viscous_sublayer_top
  long_name = u wind component at viscous sublayer top over water
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_vz0]
  standard_name = v_wind_component_at_viscous_sublayer_top
  long_name = v wind component at viscous sublayer top over water
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_akhs]
  standard_name = heat_exchange_coefficient_for_MYJ_schemes
  long_name = surface heat exchange_coefficient for MYJ schemes
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_akms]
  standard_name = momentum_exchange_coefficient_for_MYJ_schemes
  long_name = surface momentum exchange_coefficient for MYJ schemes
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_chkqlm]
  standard_name = surface_layer_evaporation_switch
  long_name = surface layer evaporation switch
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_elflx]
  standard_name = kinematic_surface_latent_heat_flux
  long_name = kinematic surface latent heat flux
  units = m s-1 kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_a1u]
  standard_name = weight_for_momentum_at_viscous_sublayer_top
  long_name = weight for momentum at viscous layer top
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_a1t]
  standard_name = weight_for_potental_temperature_at_viscous_sublayer_top
  long_name = weight for potental temperature at viscous layer top
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)
[phy_myj_a1q]
  standard_name = weight_for_specific_humidity_at_viscous_sublayer_top
  long_name = weight for Specfic Humidity at viscous layer top
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_myjsfc .or. do_myjpbl)

########################################################################
[ccpp-table-properties]
  name = GFS_cldprop_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_cldprop_type
  type = ddt
[cv]
  standard_name = fraction_of_convective_cloud
  long_name = fraction of convective cloud
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cvt]
  standard_name = pressure_at_top_of_convective_cloud
  long_name = convective cloud top pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cvb]
  standard_name = pressure_at_bottom_of_convective_cloud
  long_name = convective cloud bottom pressure
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_radtend_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_radtend_type
  type = ddt
[sfcfsw]
  standard_name = sw_fluxes_sfc
  long_name = sw radiation fluxes at sfc
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = sfcfsw_type
[sfcflw]
  standard_name = lw_fluxes_sfc
  long_name = lw radiation fluxes at sfc
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = sfcflw_type
[htrsw]
  standard_name = tendency_of_air_temperature_due_to_shortwave_heating_on_radiation_time_step
  long_name = total sky sw heating rate
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[htrlw]
  standard_name = tendency_of_air_temperature_due_to_longwave_heating_on_radiation_time_step
  long_name = total sky lw heating rate
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[sfalb]
  standard_name = surface_diffused_shortwave_albedo
  long_name = mean surface diffused sw albedo
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[coszen]
  standard_name = cosine_of_zenith_angle
  long_name = mean cos of zenith angle over rad call period
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[coszdg]
  standard_name = daytime_mean_cosz_over_rad_call_period
  long_name = daytime mean cosz over rad call period
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsflw]
  standard_name = surface_midlayer_air_temperature_in_longwave_radiation
  long_name = surface air temp during lw calculation
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[semis]
  standard_name = surface_longwave_emissivity
  long_name = surface lw emissivity in fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[swhc]
  standard_name = tendency_of_air_temperature_due_to_shortwave_heating_assuming_clear_sky_on_radiation_time_step
  long_name = clear sky sw heating rates
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[lwhc]
  standard_name = tendency_of_air_temperature_due_to_longwave_heating_assuming_clear_sky_on_radiation_time_step
  long_name = clear sky lw heating rates
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[lwhd]
  standard_name = tendency_of_air_temperature_due_to_longwave_heating_for_idea
  long_name = idea sky lw heating rates
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension,6)
  type = real
  kind = kind_phys

########################################################################
[ccpp-table-properties]
  name = GFS_diag_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_diag_type
  type = ddt
[fluxr]
  standard_name = cumulative_radiation_diagnostic
  long_name = time-accumulated 2D radiation-related diagnostic fields
  units = various
  dimensions = (horizontal_loop_extent,number_of_radiation_diagnostic_variables)
  type = real
  kind = kind_phys
[topfsw]
  standard_name = sw_fluxes_top_atmosphere
  long_name = sw radiation fluxes at toa
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = topfsw_type
[topflw]
  standard_name = lw_fluxes_top_atmosphere
  long_name = lw radiation fluxes at top
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = topflw_type
[srunoff]
  standard_name = surface_runoff
  long_name = surface water runoff (from lsm)
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evbsa]
  standard_name = cumulative_soil_upward_latent_heat_flux_multiplied_by_timestep
  long_name = cumulative soil upward latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evcwa]
  standard_name = cumulative_canopy_upward_latent_heat_flu_multiplied_by_timestep
  long_name = cumulative canopy upward latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snohfa]
  standard_name = cumulative_snow_freezing_rain_upward_latent_heat_flux_multiplied_by_timestep
  long_name = cumulative latent heat flux due to snow and frz rain multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[transa]
  standard_name = cumulative_transpiration_flux_multiplied_by_timestep
  long_name = cumulative total plant transpiration rate multiplied by timestep
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sbsnoa]
  standard_name = cumulative_snow_deposition_sublimation_upward_latent_heat_flux_multiplied_by_timestep
  long_name = cumulative latent heat flux from snow depo/subl multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snowca]
  standard_name = cumulative_surface_snow_area_fraction_multiplied_by_timestep
  long_name = cumulative surface snow area fraction multiplied by timestep
  units = s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[soilm]
  standard_name = soil_moisture_content
  long_name = soil moisture
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tmpmin]
  standard_name = minimum_temperature_at_2m
  long_name = min temperature at 2m height
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tmpmax]
  standard_name = maximum_temperature_at_2m
  long_name = max temperature at 2m height
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dusfc]
  standard_name = cumulative_surface_x_momentum_flux_for_diag_multiplied_by_timestep
  long_name = cumulative sfc x momentum flux multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dvsfc]
  standard_name = cumulative_surface_y_momentum_flux_for_diag_multiplied_by_timestep
  long_name = cumulative sfc y momentum flux multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dtsfc]
  standard_name = cumulative_surface_upward_sensible_heat_flux_for_diag_multiplied_by_timestep
  long_name = cumulative sfc sensible heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dqsfc]
  standard_name = cumulative_surface_upward_latent_heat_flux_for_diag_multiplied_by_timestep
  long_name = cumulative sfc latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dusfc_ls]
  standard_name = integrated_x_momentum_flux_from_large_scale_gwd
  long_name = integrated x momentum flux from large scale gwd
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real 
  kind = kind_phys
  active = (gwd_opt == 33)
[dvsfc_ls]
  standard_name = integrated_y_momentum_flux_from_large_scale_gwd
  long_name = integrated y momentum flux from large scale gwd
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dusfc_bl]
  standard_name = integrated_x_momentum_flux_from_blocking_drag
  long_name = integrated x momentum flux from blocking drag
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dvsfc_bl]
  standard_name = integrated_y_momentum_flux_from_blocking_drag
  long_name = integrated y momentum flux from blocking drag
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dusfc_ss]
  standard_name = integrated_x_momentum_flux_from_small_scale_gwd
  long_name = integrated x momentum flux from small scale gwd
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dvsfc_ss]
  standard_name = integrated_y_momentum_flux_from_small_scale_gwd
  long_name = integrated y momentum flux from small scale gwd
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dusfc_fd]
  standard_name = integrated_x_momentum_flux_from_form_drag
  long_name = integrated x momentum flux from form drag
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dvsfc_fd]
  standard_name = integrated_y_momentum_flux_from_form_drag
  long_name = integrated y momentum flux from form drag
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dtaux2d_ls]
  standard_name = x_momentum_tendency_from_large_scale_gwd
  long_name = x momentum tendency from large scale gwd
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dtauy2d_ls]
  standard_name = y_momentum_tendency_from_large_scale_gwd
  long_name = y momentum tendency from large scale gwd
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dtaux2d_bl]
  standard_name = x_momentum_tendency_from_blocking_drag
  long_name = x momentum tendency from blocking drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dtauy2d_bl]
  standard_name = y_momentum_tendency_from_blocking_drag
  long_name = y momentum tendency from blocking drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dtaux2d_ss]
  standard_name = x_momentum_tendency_from_small_scale_gwd
  long_name = x momentum tendency from small scale gwd
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dtauy2d_ss]
  standard_name = y_momentum_tendency_from_small_scale_gwd
  long_name = y momentum tendency from small scale gwd
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  active = (gwd_opt == 33)
  kind = kind_phys
[dtaux2d_fd]
  standard_name = x_momentum_tendency_from_form_drag
  long_name = x momentum tendency from form drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[dtauy2d_fd]
  standard_name = y_momentum_tendency_from_form_drag
  long_name = y momentum tendency from form drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (gwd_opt == 33)
[totprcp]
  standard_name = accumulated_lwe_thickness_of_precipitation_amount
  long_name = accumulated total precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totice]
  standard_name = accumulated_lwe_thickness_of_ice_amount
  long_name = accumulated ice precipitation
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totsnw]
  standard_name = accumulated_lwe_thickness_of_snow_amount
  long_name = accumulated snow precipitation
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totgrp]
  standard_name = accumulated_lwe_thickness_of_graupel_amount
  long_name = accumulated graupel precipitation
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totprcpb]
  standard_name = accumulated_lwe_thickness_of_precipitation_amount_in_bucket
  long_name = accumulated total precipitation in bucket
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[toticeb]
  standard_name = accumulated_lwe_thickness_of_ice_amount_in_bucket
  long_name = accumulated ice precipitation in bucket
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totsnwb]
  standard_name = accumulated_lwe_thickness_of_snow_amount_in_bucket
  long_name = accumulated snow precipitation in bucket
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[totgrpb]
  standard_name = accumulated_lwe_thickness_of_graupel_amount_in_bucket
  long_name = accumulated graupel precipitation in bucket
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[train]
  standard_name = accumulated_change_of_air_temperature_due_to_FA_scheme
  long_name = accumulated change of air temperature due to FA MP scheme
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[gflux]
  standard_name = cumulative_surface_ground_heat_flux_multiplied_by_timestep
  long_name = cumulative groud conductive heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dlwsfc]
  standard_name = cumulative_surface_downwelling_longwave_flux_multiplied_by_timestep
  long_name = cumulative surface downwelling LW flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ulwsfc]
  standard_name = cumulative_surface_upwelling_longwave_flux_multiplied_by_timestep
  long_name = cumulative surface upwelling LW flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[suntim]
  standard_name = duration_of_sunshine
  long_name = sunshine duration time
  units = s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[runoff]
  standard_name = total_runoff
  long_name = total water runoff
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ep]
  standard_name = cumulative_surface_upward_potential_latent_heat_flux_multiplied_by_timestep
  long_name = cumulative surface upward potential latent heat flux multiplied by timestep
  units = W m-2 s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cldwrk]
  standard_name = cumulative_cloud_work_function
  long_name = cumulative cloud work function (valid only with sas)
  units = m2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dugwd]
  standard_name = time_integral_of_x_stress_due_to_gravity_wave_drag
  long_name = vertically integrated u change by OGWD
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dvgwd]
  standard_name = time_integral_of_y_stress_due_to_gravity_wave_drag
  long_name = vertically integrated v change by OGWD
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[psmean]
  standard_name = cumulative_surface_pressure_multiplied_by_timestep
  long_name = cumulative surface pressure multiplied by timestep
  units = Pa s
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cnvprcp]
  standard_name = cumulative_lwe_thickness_of_convective_precipitation_amount
  long_name = cumulative convective precipitation
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cnvprcpb]
  standard_name = cumulative_lwe_thickness_of_convective_precipitation_amount_in_bucket
  long_name = cumulative convective precipitation in bucket
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[spfhmin]
  standard_name = minimum_specific_humidity_at_2m
  long_name = minimum specific humidity at 2m height
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[spfhmax]
  standard_name = maximum_specific_humidity_at_2m
  long_name = maximum specific humidity at 2m height
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[u10mmax]
  standard_name = maximum_x_wind_at_10m
  long_name = maximum x wind at 10 m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[v10mmax]
  standard_name = maximum_y_wind_at_10m
  long_name = maximum y wind at 10 m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[wind10mmax]
  standard_name = maximum_wind_at_10m
  long_name = maximum wind speed at 10 m
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[u10max]
  standard_name = maximum_u_wind_at_10m_over_maximum_hourly_time_interval
  long_name = maximum u wind at 10m over maximum hourly time interval
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[v10max]
  standard_name = maximum_v_wind_at_10m_over_maximum_hourly_time_interval
  long_name = maximum v wind at 10m over maximum hourly time interval
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[spd10max]
  standard_name = maximum_wind_at_10m_over_maximum_hourly_time_interval
  long_name = maximum wind at 10m over maximum hourly time interval
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rain]
  standard_name = lwe_thickness_of_precipitation_amount_on_dynamics_timestep
  long_name = total rain at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rainc]
  standard_name = lwe_thickness_of_convective_precipitation_amount_on_dynamics_timestep
  long_name = convective rain at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ice]
  standard_name = lwe_thickness_of_ice_amount_on_dynamics_timestep
  long_name = ice fall at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snow]
  standard_name = lwe_thickness_of_snow_amount_on_dynamics_timestep
  long_name = snow fall at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[graupel]
  standard_name = lwe_thickness_of_graupel_amount_on_dynamics_timestep
  long_name = graupel fall at this time step
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[u10m]
  standard_name = x_wind_at_10m
  long_name = 10 meter u wind speed
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[v10m]
  standard_name = y_wind_at_10m
  long_name = 10 meter v wind speed
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dpt2m]
  standard_name = dewpoint_temperature_at_2m
  long_name = 2 meter dewpoint temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zlvl]
  standard_name = height_above_ground_at_lowest_model_layer
  long_name = layer 1 height above ground (not MSL)
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[psurf]
  standard_name = surface_air_pressure_diag
  long_name = surface air pressure diagnostic
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[pwat]
  standard_name = column_precipitable_water
  long_name = precipitable water
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[t1]
  standard_name = air_temperature_at_lowest_model_layer_for_diag
  long_name = layer 1 temperature for diag
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[q1]
  standard_name = water_vapor_specific_humidity_at_lowest_model_layer_for_diag
  long_name = layer 1 specific humidity for diag
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[u1]
  standard_name = x_wind_at_lowest_model_layer_for_diag
  long_name = layer 1 x wind for diag
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[v1]
  standard_name = y_wind_at_lowest_model_layer_for_diag
  long_name = layer 1 y wind for diag
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[chh]
  standard_name = surface_drag_mass_flux_for_heat_and_moisture_in_air
  long_name = thermal exchange coefficient
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cmm]
  standard_name = surface_drag_wind_speed_for_momentum_in_air
  long_name = momentum exchange coefficient
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dlwsfci]
  standard_name = surface_downwelling_longwave_flux
  long_name = surface downwelling longwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ulwsfci]
  standard_name = surface_upwelling_longwave_flux
  long_name = surface upwelling longwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dswsfci]
  standard_name = surface_downwelling_shortwave_flux
  long_name = surface downwelling shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[nswsfci]
  standard_name = surface_net_downwelling_shortwave_flux
  long_name = surface net downwelling shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[uswsfci]
  standard_name = surface_upwelling_shortwave_flux
  long_name = surface upwelling shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dusfci]
  standard_name = instantaneous_surface_x_momentum_flux_for_diag
  long_name = instantaneous sfc x momentum flux multiplied by timestep
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dvsfci]
  standard_name = instantaneous_surface_y_momentum_flux_for_diag
  long_name = instantaneous sfc y momentum flux multiplied by timestep
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dtsfci]
  standard_name = instantaneous_surface_upward_sensible_heat_flux_for_diag
  long_name = instantaneous sfc sensible heat flux multiplied by timestep
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dqsfci]
  standard_name = instantaneous_surface_upward_latent_heat_flux_for_diag
  long_name = instantaneous sfc latent heat flux multiplied by timestep
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gfluxi]
  standard_name = instantaneous_surface_ground_heat_flux
  long_name = instantaneous sfc ground heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[epi]
  standard_name = instantaneous_surface_potential_evaporation
  long_name = instantaneous sfc potential evaporation
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[smcwlt2]
  standard_name = volume_fraction_of_condensed_water_in_soil_at_wilting_point
  long_name = wilting point (volumetric)
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[smcref2]
  standard_name = threshold_volume_fraction_of_condensed_water_in_soil
  long_name = soil moisture threshold (volumetric)
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sr]
  standard_name = ratio_of_snowfall_to_rainfall
  long_name = snow ratio: ratio of snow to total precipitation (explicit only)
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[wet1]
  standard_name = normalized_soil_wetness
  long_name = normalized soil wetness
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (.not. flag_for_land_surface_scheme == flag_for_ruc_land_surface_scheme)
[tdomr]
  standard_name = dominant_rain_type
  long_name = dominant rain type
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tdomzr]
  standard_name = dominant_freezing_rain_type
  long_name = dominant freezing rain type
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tdomip]
  standard_name = dominant_sleet_type
  long_name = dominant sleet type
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tdoms]
  standard_name = dominant_snow_type
  long_name = dominant snow type
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[skebu_wts]
  standard_name = weights_for_stochastic_skeb_perturbation_of_x_wind_flipped
  long_name = weights for stochastic skeb perturbation of x wind, flipped
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[skebv_wts]
  standard_name = weights_for_stochastic_skeb_perturbation_of_y_wind_flipped
  long_name = weights for stochastic skeb perturbation of y wind, flipped
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[sppt_wts]
  standard_name = weights_for_stochastic_sppt_perturbation_flipped
  long_name = weights for stochastic sppt perturbation, flipped
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[shum_wts]
  standard_name = weights_for_stochastic_shum_perturbation_flipped
  long_name = weights for stochastic shum perturbation, flipped
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[zmtnblck]
  standard_name = level_of_dividing_streamline
  long_name = level of the dividing streamline
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[du3dt(:,:,1)]
  standard_name = cumulative_change_in_x_wind_due_to_PBL
  long_name = cumulative change in x wind due to PBL
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[du3dt(:,:,2)]
  standard_name = cumulative_change_in_x_wind_due_to_orographic_gravity_wave_drag
  long_name = cumulative change in x wind due to orographic gravity wave drag
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[du3dt(:,:,3)]
  standard_name = cumulative_change_in_x_wind_due_to_deep_convection
  long_name = cumulative change in x wind due to deep convection
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[du3dt(:,:,4)]
  standard_name = cumulative_change_in_x_wind_due_to_convective_gravity_wave_drag
  long_name = cumulative change in x wind due to convective gravity wave drag
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[du3dt(:,:,5)]
  standard_name = cumulative_change_in_x_wind_due_to_rayleigh_damping
  long_name = cumulative change in x wind due to Rayleigh damping
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[du3dt(:,:,6)]
  standard_name = cumulative_change_in_x_wind_due_to_shallow_convection
  long_name = cumulative change in x wind due to shallow convection
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[du3dt(:,:,7)]
  standard_name = cumulative_change_in_x_wind_due_to_physics
  long_name = cumulative change in x wind due to physics
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[du3dt(:,:,8)]
  standard_name = cumulative_change_in_x_wind_due_to_non_physics_processes
  long_name = cumulative change in x wind due to non-physics processes
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dv3dt(:,:,1)]
  standard_name = cumulative_change_in_y_wind_due_to_PBL
  long_name = cumulative change in y wind due to PBL
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dv3dt(:,:,2)]
  standard_name = cumulative_change_in_y_wind_due_to_orographic_gravity_wave_drag
  long_name = cumulative change in y wind due to orographic gravity wave drag
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dv3dt(:,:,3)]
  standard_name = cumulative_change_in_y_wind_due_to_deep_convection
  long_name = cumulative change in y wind due to deep convection
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dv3dt(:,:,4)]
  standard_name = cumulative_change_in_y_wind_due_to_convective_gravity_wave_drag
  long_name = cumulative change in y wind due to convective gravity wave drag
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dv3dt(:,:,5)]
  standard_name = cumulative_change_in_y_wind_due_to_rayleigh_damping
  long_name = cumulative change in y wind due to Rayleigh damping
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dv3dt(:,:,6)]
  standard_name = cumulative_change_in_y_wind_due_to_shallow_convection
  long_name = cumulative change in y wind due to shallow convection
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dv3dt(:,:,7)]
  standard_name = cumulative_change_in_y_wind_due_to_physics
  long_name = cumulative change in y wind due to physics
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dv3dt(:,:,8)]
  standard_name = cumulative_change_in_y_wind_due_to_non_physics_processes
  long_name = cumulative change in y wind due to non-physics processes
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,1)]
  standard_name = cumulative_change_in_temperature_due_to_longwave_radiation
  long_name = cumulative change in temperature due to longwave radiation
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,2)]
  standard_name = cumulative_change_in_temperature_due_to_shortwave_radiation
  long_name = cumulative change in temperature due to shortwave radiation
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,3)]
  standard_name = cumulative_change_in_temperature_due_to_PBL
  long_name = cumulative change in temperature due to PBL
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,4)]
  standard_name = cumulative_change_in_temperature_due_to_deep_convection
  long_name = cumulative change in temperature due to deep convection
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,5)]
  standard_name = cumulative_change_in_temperature_due_to_shallow_convection
  long_name = cumulative change in temperature due to shallow convection
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,6)]
  standard_name = cumulative_change_in_temperature_due_to_microphysics
  long_name = cumulative change in temperature due to microphysics
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,7)]
  standard_name = cumulative_change_in_temperature_due_to_orographic_gravity_wave_drag
  long_name = cumulative change in temperature due to orographic gravity wave drag
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,8)]
  standard_name = cumulative_change_in_temperature_due_to_rayleigh_damping
  long_name = cumulative change in temperature due to Rayleigh damping
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,9)]
  standard_name = cumulative_change_in_temperature_due_to_convective_gravity_wave_drag
  long_name = cumulative change in temperature due to convective gravity wave drag
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,10)]
  standard_name = cumulative_change_in_temperature_due_to_physics
  long_name = cumulative change in temperature due to physics
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dt3dt(:,:,11)]
  standard_name = cumulative_change_in_temperature_due_to_non_physics_processes
  long_name = cumulative change in temperature due to non-physics processed
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D)
[dq3dt(:,:,1)]
  standard_name = cumulative_change_in_water_vapor_specific_humidity_due_to_PBL
  long_name = cumulative change in water vapor specific humidity due to PBL
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,2)]
  standard_name = cumulative_change_in_water_vapor_specific_humidity_due_to_deep_convection
  long_name = cumulative change in water vapor specific humidity due to deep convection
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,3)]
  standard_name = cumulative_change_in_water_vapor_specific_humidity_due_to_shallow_convection
  long_name = cumulative change in water vapor specific humidity due to shallow convection
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,4)]
  standard_name = cumulative_change_in_water_vapor_specific_humidity_due_to_microphysics
  long_name = cumulative change in water vapor specific humidity due to microphysics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,5)]
  standard_name = cumulative_change_in_ozone_mixing_ratio_due_to_PBL
  long_name = cumulative change in ozone mixing ratio due to PBL
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,6)]
  standard_name = cumulative_change_in_ozone_concentration_due_to_production_and_loss_rate
  long_name = cumulative change in ozone concentration due to production and loss rate
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,7)]
  standard_name = cumulative_change_in_ozone_concentration_due_to_ozone_mixing_ratio
  long_name = cumulative change in ozone concentration due to ozone mixing ratio
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,8)]
  standard_name = cumulative_change_in_ozone_concentration_due_to_temperature
  long_name = cumulative change in ozone concentration due to temperature
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,9)]
  standard_name = cumulative_change_in_ozone_concentration_due_to_overhead_ozone_column
  long_name = cumulative change in ozone concentration due to overhead ozone column
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,10)]
  standard_name = cumulative_change_in_water_vapor_specific_humidity_due_to_physics
  long_name = cumulative change in water vapor specific humidity due to physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,11)]
  standard_name = cumulative_change_in_ozone_concentration_due_to_physics
  long_name = cumulative change in ozone concentration due to physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,12)]
  standard_name = cumulative_change_in_water_vapor_specific_humidity_due_to_non_physics_processes
  long_name = cumulative change in water vapor specific humidity due to non-physics processes
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[dq3dt(:,:,13)]
  standard_name = cumulative_change_in_ozone_concentration_due_to_non_physics_processes
  long_name = cumulative change in ozone_concentration due to non-physics processes
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_diagnostics_3D .and. flag_tracer_diagnostics_3D)
[refdmax]
  standard_name = maximum_reflectivity_at_1km_agl_over_maximum_hourly_time_interval
  long_name = maximum reflectivity at 1km agl over maximum hourly time interval
  units = dBZ
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[refdmax263k]
  standard_name = maximum_reflectivity_at_minus10c_over_maximum_hourly_time_interval
  long_name = maximum reflectivity at minus10c over maximum hourly time interval
  units = dBZ
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[t02max]
  standard_name = maximum_temperature_at_2m_over_maximum_hourly_time_interval
  long_name = maximum temperature at 2m over maximum hourly time interval
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[t02min]
  standard_name = minimum_temperature_at_2m_over_maximum_hourly_time_interval
  long_name = minumum temperature at 2m over maximum hourly time interval
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rh02max]
  standard_name = maximum_relative_humidity_at_2m_over_maximum_hourly_time_interval
  long_name = maximum relative humidity at 2m over maximum hourly time interval
  units = %
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rh02min]
  standard_name = minimum_relative_humidity_at_2m_over_maximum_hourly_time_interval
  long_name = minumum relative humidity at 2m over maximum hourly time interval
  units = %
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[upd_mf]
  standard_name = cumulative_atmosphere_updraft_convective_mass_flux
  long_name = cumulative updraft mass flux
  units = kg m-1 s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dwn_mf]
  standard_name = cumulative_atmosphere_downdraft_convective_mass_flux
  long_name = cumulative downdraft mass flux
  units = kg m-1 s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[det_mf]
  standard_name = cumulative_atmosphere_detrainment_convective_mass_flux
  long_name = cumulative detrainment mass flux
  units = kg m-1 s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[refl_10cm]
  standard_name = radar_reflectivity_10cm
  long_name = instantaneous refl_10cm
  units = dBZ
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[cldfra]
  standard_name = instantaneous_3d_cloud_fraction
  long_name = instantaneous 3D cloud fraction for all MPs
  units = frac
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[ndust]
  standard_name = number_of_dust_bins_for_diagnostics
  long_name = number of dust bins for diagnostics
  units = count
  dimensions = ()
  type = integer
[nseasalt]
  standard_name = number_of_seasalt_bins_for_diagnostics
  long_name = number of seasalt bins for diagnostics
  units = count
  dimensions = ()
  type = integer
[ntchmdiag]
  standard_name = number_of_chemical_tracers_for_diagnostics
  long_name = number of chemical tracers for diagnostic output
  units = count
  dimensions = ()
  type = integer
[duem]
  standard_name = instantaneous_dust_emission_flux
  long_name = instantaneous dust emission flux
  units = kg m-2 s-1
  dimensions = (horizonal_dimension,number_of_dust_bins_for_diagnostics)
  type = real
  kind = kind_phys
  active = (number_of_dust_bins_for_diagnostics > 0)
[ssem]
  standard_name = instantaneous_seasalt_emission_flux
  long_name = instantaneous sea salt emission flux
  units = kg m-2 s-1
  dimensions = (horizonal_dimension,number_of_seasalt_bins_for_diagnostics)
  type = real
  kind = kind_phys
  active = (number_of_seasalt_bins_for_diagnostics > 0)
[sedim]
  standard_name = instantaneous_sedimentation
  long_name = instantaneous sedimentation
  units = kg m-2 s-1
  dimensions = (horizonal_dimension,number_of_chemical_tracers_for_diagnostics)
  type = real
  kind = kind_phys
  active = (number_of_chemical_tracers_for_diagnostics > 0)
[drydep]
  standard_name = instantaneous_dry_deposition
  long_name = instantaneous dry deposition
  units = kg m-2 s-1
  dimensions = (horizonal_dimension,number_of_chemical_tracers_for_diagnostics)
  type = real
  kind = kind_phys
  active = (number_of_chemical_tracers_for_diagnostics > 0)
[wetdpl]
  standard_name = instantaneous_large_scale_wet_deposition
  long_name = instantaneous large-scale wet deposition
  units = kg m-2 s-1
  dimensions = (horizonal_dimension,number_of_chemical_tracers_for_diagnostics)
  type = real
  kind = kind_phys
  active = (number_of_chemical_tracers_for_diagnostics > 0)
[wetdpc]
  standard_name = instantaneous_convective_scale_wet_deposition
  long_name = instantaneous convective-scale wet deposition
  units = kg m-2 s-1
  dimensions = (horizonal_dimension,number_of_chemical_tracers_for_diagnostics)
  type = real
  kind = kind_phys
  active = (number_of_chemical_tracers_for_diagnostics > 0)
[abem]
  standard_name = instantaneous_anthopogenic_and_biomass_burning_emissions
  long_name = instantaneous anthopogenic and biomass burning emissions for black carbon, organic carbon, and sulfur dioxide
  units = ug m-2 s-1
  dimensions = (horizontal_loop_extent,6)
  type = real
  kind = kind_phys
[aecm]
  standard_name = instantaneous_aerosol_column_mass_densities
  long_name = instantaneous aerosol column mass densities for pm2.5, black carbon, organic carbon, sulfate, dust, sea salt
  units = g m-2
  dimensions = (horizontal_loop_extent,6)
  type = real
  kind = kind_phys
[edmf_a]
  standard_name = emdf_updraft_area
  long_name = updraft area from mass flux scheme
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[edmf_w]
  standard_name = emdf_updraft_vertical_velocity
  long_name = updraft vertical velocity from mass flux scheme
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[edmf_qt]
  standard_name = emdf_updraft_total_water
  long_name = updraft total water from mass flux scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[edmf_thl]
  standard_name = emdf_updraft_theta_l
  long_name = updraft theta-l from mass flux scheme
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[edmf_ent]
  standard_name = emdf_updraft_entrainment_rate
  long_name = updraft entranment rate from mass flux scheme
  units = s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[edmf_qc]
  standard_name = emdf_updraft_cloud_water
  long_name = updraft cloud water from mass flux scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[sub_thl]
  standard_name = theta_subsidence_tendency
  long_name = updraft theta subsidence tendency
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[sub_sqv]
  standard_name = water_vapor_subsidence_tendency
  long_name = updraft water vapor subsidence tendency
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[det_thl]
  standard_name = theta_detrainment_tendency
  long_name = updraft theta detrainment tendency
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[det_sqv]
  standard_name = water_vapor_detrainment_tendency
  long_name = updraft water vapor detrainment tendency
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf .and. (mynn_output_flag .ne. 0))
[nupdraft]
  standard_name = number_of_plumes
  long_name = number of plumes per grid column
  units = count
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (do_mynnedmf)
[maxMF]
  standard_name = maximum_mass_flux
  long_name = maximum mass flux within a column
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[ktop_shallow]
  standard_name = k_level_of_highest_reaching_plume
  long_name = k-level of highest reaching plume
  units = count
  dimensions = (horizontal_loop_extent)
  type = integer
[ktop_plume]
  standard_name = k_level_of_highest_plume
  long_name = k-level of highest plume
  units = count
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (do_mynnedmf)
[exch_h]
  standard_name = atmosphere_heat_diffusivity_for_mynnpbl
  long_name = diffusivity for heat for MYNN PBL (defined for all mass levels)
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[exch_m]
  standard_name = atmosphere_momentum_diffusivity_for_mynnpbl
  long_name = diffusivity for momentum for MYNN PBL (defined for all mass levels)
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (do_mynnedmf)
[zmtb]
  standard_name = time_integral_of_height_of_mountain_blocking
  long_name = time integral of height of mountain blocking drag
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zlwb]
  standard_name = time_integral_of_height_of_low_level_wave_breaking
  long_name = time integral of height of drag due to low level wave breaking
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zogw]
  standard_name = time_integral_of_height_of_launch_level_of_orographic_gravity_wave
  long_name = time integral of height of launch level of orographic gravity wave
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_tofd]
  standard_name = time_integral_of_momentum_flux_due_to_turbulent_orographic_form_drag
  long_name = time integral of momentum flux due to TOFD
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_mtb]
  standard_name = time_integral_of_momentum_flux_due_to_mountain_blocking_drag
  long_name = time integral of momentum flux due to mountain blocking drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_ogw]
  standard_name = time_integral_of_momentum_flux_due_to_orographic_gravity_wave_drag
  long_name = time integral of momentum flux due to orographic gravity wave drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_ngw]
  standard_name = time_integral_of_momentum_flux_due_to_nonstationary_gravity_wave
  long_name = time integral of momentum flux due to nonstationary gravity waves
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[du3dt_mtb]
  standard_name = time_integral_of_change_in_x_wind_due_to_mountain_blocking_drag
  long_name = time integral of change in x wind due to mountain blocking drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (diag_ugwp_flag)
[du3dt_ogw]
  standard_name = time_integral_of_change_in_x_wind_due_to_orographic_gravity_wave_drag
  long_name = time integral of change in x wind due to orographic gw drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (diag_ugwp_flag)
[du3dt_tms]
  standard_name = time_integral_of_change_in_x_wind_due_to_turbulent_orographic_form_drag
  long_name = time integral of change in x wind due to TOFD
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (diag_ugwp_flag)
[du3dt_ngw]
  standard_name = time_integral_of_change_in_x_wind_due_to_nonstationary_gravity_wave
  long_name = time integral of change in x wind due to NGW
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (diag_ugwp_flag)
[dv3dt_ngw]
  standard_name = time_integral_of_change_in_y_wind_due_to_nonstationary_gravity_wave
  long_name = time integral of change in y wind due to NGW
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (diag_ugwp_flag)
[aux2d]
  standard_name = auxiliary_2d_arrays
  long_name = auxiliary 2d arrays to output (for debugging)
  units = none
  dimensions = (horizontal_loop_extent,number_of_3d_auxiliary_arrays)
  type = real
  kind = kind_phys
  active = (number_of_2d_auxiliary_arrays > 0)
[aux3d]
  standard_name = auxiliary_3d_arrays
  long_name = auxiliary 3d arrays to output (for debugging)
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_3d_auxiliary_arrays)
  type = real
  kind = kind_phys
  active = (number_of_2d_auxiliary_arrays > 0)


########################################################################
[ccpp-table-properties]
  name = GFS_interstitial_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_interstitial_type
  type = ddt
[qv_r]
  standard_name = humidity_mixing_ratio
  long_name = the ratio of the mass of water vapor to the mass of dry air
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[qc_r]
  standard_name = cloud_liquid_water_mixing_ratio
  long_name = the ratio of the mass of liquid water to the mass of dry air
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[qr_r]
  standard_name = cloud_rain_water_mixing_ratio
  long_name = the ratio of the mass rain water to the mass of dry air
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[qi_r]
  standard_name = cloud_ice_mixing_ratio
  long_name = the ratio of the mass of ice to the mass of dry air
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[qs_r]
  standard_name = cloud_snow_mixing_ratio
  long_name = the ratio of the mass of snow to mass of dry air
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[qg_r]
  standard_name = mass_weighted_rime_factor_mixing_ratio
  long_name = the ratio of the mass of rime factor to mass of dry air
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[f_ice]
  standard_name = fraction_of_ice_water_cloud
  long_name = fraction of ice water cloud
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[f_rain]
  standard_name = fraction_of_rain_water_cloud
  long_name = fraction of rain water cloud
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[f_rimef]
  standard_name = rime_factor
  long_name = rime factor
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[cwm]
  standard_name = total_cloud_condensate_mixing_ratio_updated_by_physics
  long_name = total cloud condensate mixing ratio (except water vapor) updated by physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_fer_hires_microphysics_scheme)
[adjsfculw_ocean]
  standard_name = surface_upwelling_longwave_flux_over_ocean_interstitial
  long_name = surface upwelling longwave flux at current time over ocean (temporary use as interstitial)
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjsfculw_land]
  standard_name = surface_upwelling_longwave_flux_over_land_interstitial
  long_name = surface upwelling longwave flux at current time over land (temporary use as interstitial)
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjsfculw_ice]
  standard_name = surface_upwelling_longwave_flux_over_ice_interstitial
  long_name = surface upwelling longwave flux at current time over ice (temporary use as interstitial)
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjnirbmd]
  standard_name = surface_downwelling_direct_near_infrared_shortwave_flux
  long_name = surface downwelling beam near-infrared shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjnirbmu]
  standard_name = surface_upwelling_direct_near_infrared_shortwave_flux
  long_name = surface upwelling beam near-infrared shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjnirdfd]
  standard_name = surface_downwelling_diffuse_near_infrared_shortwave_flux
  long_name = surface downwelling diffuse near-infrared shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjnirdfu]
  standard_name = surface_upwelling_diffuse_near_infrared_shortwave_flux
  long_name = surface upwelling diffuse near-infrared shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjvisbmd]
  standard_name = surface_downwelling_direct_ultraviolet_and_visible_shortwave_flux
  long_name = surface downwelling beam ultraviolet plus visible shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjvisbmu]
  standard_name = surface_upwelling_direct_ultraviolet_and_visible_shortwave_flux
  long_name = surface upwelling beam ultraviolet plus visible shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjvisdfu]
  standard_name = surface_upwelling_diffuse_ultraviolet_and_visible_shortwave_flux
  long_name = surface upwelling diffuse ultraviolet plus visible shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[adjvisdfd]
  standard_name = surface_downwelling_diffuse_ultraviolet_and_visible_shortwave_flux
  long_name = surface downwelling diffuse ultraviolet plus visible shortwave flux at current time
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[aerodp]
  standard_name = atmosphere_optical_thickness_due_to_ambient_aerosol_particles
  long_name = vertical integrated optical depth for various aerosol species
  units = none
  dimensions = (horizontal_loop_extent,number_of_species_for_aerosol_optical_depth)
  type = real
  kind = kind_phys
[alb1d]
  standard_name = surface_albedo_perturbation
  long_name = surface albedo perturbation
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[alpha]
  standard_name = cloud_overlap_decorrelation_parameter
  long_name = cloud overlap decorrelation parameter for RRTMG (but not for RRTMGP)
  units = frac
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[bexp1d]
  standard_name = perturbation_of_soil_type_b_parameter
  long_name = perturbation of soil type "b" parameter
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[canopy_save]
  standard_name = canopy_water_amount_save
  long_name = canopy water amount before entering a physics scheme
  units = kg m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[cd]
  standard_name = surface_drag_coefficient_for_momentum_in_air
  long_name = surface exchange coeff for momentum
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cd_ocean]
  standard_name = surface_drag_coefficient_for_momentum_in_air_over_ocean
  long_name = surface exchange coeff for momentum over ocean
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cd_land]
  standard_name = surface_drag_coefficient_for_momentum_in_air_over_land
  long_name = surface exchange coeff for momentum over land
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cd_ice]
  standard_name = surface_drag_coefficient_for_momentum_in_air_over_ice
  long_name = surface exchange coeff for momentum over ice
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cdq]
  standard_name = surface_drag_coefficient_for_heat_and_moisture_in_air
  long_name = surface exchange coeff heat & moisture
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cdq_ocean]
  standard_name = surface_drag_coefficient_for_heat_and_moisture_in_air_over_ocean
  long_name = surface exchange coeff heat & moisture over ocean
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cdq_land]
  standard_name = surface_drag_coefficient_for_heat_and_moisture_in_air_over_land
  long_name = surface exchange coeff heat & moisture over land
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cdq_ice]
  standard_name = surface_drag_coefficient_for_heat_and_moisture_in_air_over_ice
  long_name = surface exchange coeff heat & moisture over ice
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[chh_ocean]
  standard_name = surface_drag_mass_flux_for_heat_and_moisture_in_air_over_ocean
  long_name = thermal exchange coefficient over ocean
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[chh_land]
  standard_name = surface_drag_mass_flux_for_heat_and_moisture_in_air_over_land
  long_name = thermal exchange coefficient over land
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[chh_ice]
  standard_name = surface_drag_mass_flux_for_heat_and_moisture_in_air_over_ice
  long_name = thermal exchange coefficient over ice
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[chk_land]
  standard_name = surface_conductance_for_heat_and_moisture_in_air_over_land
  long_name = surface conductance for heat & moisture over land
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[cf_upi]
  standard_name = convective_cloud_fraction_for_microphysics
  long_name = convective cloud fraction for microphysics
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[clcn]
  standard_name = convective_cloud_volume_fraction
  long_name = convective cloud volume fraction
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[cldf]
  standard_name = cloud_area_fraction
  long_name = fraction of grid box area in which updrafts occur
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cldsa]
  standard_name = cloud_area_fraction_for_radiation
  long_name = fraction of clouds for low, middle, high, total and BL
  units = frac
  dimensions = (horizontal_loop_extent,5)
  type = real
  kind = kind_phys
[cldtaulw]
  standard_name = cloud_optical_depth_layers_at_10mu_band
  long_name = approx 10mu band layer cloud optical depth
  units = none
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[cldtausw]
  standard_name = cloud_optical_depth_layers_at_0p55mu_band
  long_name = approx .55mu band layer cloud optical depth
  units = none
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[cld1d]
  standard_name = cloud_work_function
  long_name = cloud work function
  units = m2 s-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[clouds(:,:,1)]
  standard_name = total_cloud_fraction
  long_name = layer total cloud fraction
  units = frac
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[clouds(:,:,2)]
  standard_name = cloud_liquid_water_path
  long_name = layer cloud liquid water path
  units = g m-2
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[clouds(:,:,3)]
  standard_name = mean_effective_radius_for_liquid_cloud
  long_name = mean effective radius for liquid cloud
  units = um
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[clouds(:,:,4)]
  standard_name = cloud_ice_water_path
  long_name = layer cloud ice water path
  units = g m-2
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[clouds(:,:,5)]
  standard_name = mean_effective_radius_for_ice_cloud
  long_name = mean effective radius for ice cloud
  units = um
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[clouds(:,:,6)]
  standard_name = cloud_rain_water_path
  long_name = cloud rain water path
  units = g m-2
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[clouds(:,:,7)]
  standard_name = mean_effective_radius_for_rain_drop
  long_name = mean effective radius for rain drop
  units = um
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[clouds(:,:,8)]
  standard_name = cloud_snow_water_path
  long_name = cloud snow water path
  units = g m-2
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[clouds(:,:,9)]
  standard_name = mean_effective_radius_for_snow_flake
  long_name = mean effective radius for snow flake
  units = um
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[clw]
  standard_name = convective_transportable_tracers
  long_name = array to contain cloud water and other convective trans. tracers
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_tracers_for_convective_transport)
  type = real
  kind = kind_phys
[clw(:,:,1)]
  standard_name = ice_water_mixing_ratio_convective_transport_tracer
  long_name = ratio of mass of ice water to mass of dry air plus vapor (without condensates) in the convectively transported tracer array
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[clw(:,:,2)]
  standard_name = cloud_condensed_water_mixing_ratio_convective_transport_tracer
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates) in the convectively transported tracer array
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[clw(:,:,index_for_turbulent_kinetic_energy_convective_transport_tracer)]
  standard_name = turbulent_kinetic_energy_convective_transport_tracer
  long_name = turbulent kinetic energy in the convectively transported tracer array
  units = m2 s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[clx]
  standard_name = fraction_of_grid_box_with_subgrid_orography_higher_than_critical_height
  long_name = frac. of grid box with by subgrid orography higher than critical height
  units = frac
  dimensions = (horizontal_loop_extent,4)
  type = real
  kind = kind_phys
[cmc]
  standard_name = canopy_water_amount_in_m
  long_name = canopy water amount in m
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[clxss]
  standard_name = fraction_of_grid_box_with_subgrid_orography_higher_than_critical_height_small_scale
  long_name = frac. of grid box with by subgrid orography higher than critical height small scale
  units = frac
  dimensions = (horizontal_loop_extent,4)
  type = real
  kind = kind_phys
  active = (gwd_opt == 3 .or. gwd_opt == 33)
[cmm_ocean]
  standard_name = surface_drag_wind_speed_for_momentum_in_air_over_ocean
  long_name = momentum exchange coefficient over ocean
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cmm_land]
  standard_name = surface_drag_wind_speed_for_momentum_in_air_over_land
  long_name = momentum exchange coefficient over land
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cmm_ice]
  standard_name = surface_drag_wind_speed_for_momentum_in_air_over_ice
  long_name = momentum exchange coefficient over ice
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cnv_dqldt]
  standard_name = tendency_of_cloud_water_due_to_convective_microphysics
  long_name = tendency of cloud water due to convective microphysics
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[cnv_fice]
  standard_name = ice_fraction_in_convective_tower
  long_name = ice fraction in convective tower
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[cnv_mfd]
  standard_name = detrained_mass_flux
  long_name = detrained mass flux
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[cnv_ndrop]
  standard_name = number_concentration_of_cloud_liquid_water_particles_for_detrainment
  long_name = droplet number concentration in convective detrainment
  units = m-3
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[cnv_nice]
  standard_name = number_concentration_of_ice_crystals_for_detrainment
  long_name = crystal number concentration in convective detrainment
  units = m-3
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[cnvc]
  standard_name = convective_cloud_cover
  long_name = convective cloud cover
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[cnvw]
  standard_name = convective_cloud_water_mixing_ratio
  long_name = moist convective cloud water mixing ratio
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[ctei_r]
  standard_name = cloud_top_entrainment_instability_value
  long_name = cloud top entrainment instability value
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ctei_rml]
  standard_name = grid_sensitive_critical_cloud_top_entrainment_instability_criteria
  long_name = grid sensitive critical cloud top entrainment instability criteria
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[cumabs]
  standard_name = maximum_column_heating_rate
  long_name = maximum heating rate in column
  units = K s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dd_mf]
  standard_name = instantaneous_atmosphere_downdraft_convective_mass_flux
  long_name = (downdraft mass flux) * delt
  units = kg m-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[de_lgth]
  standard_name = cloud_decorrelation_length
  long_name = cloud decorrelation length
  units = km
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[del]
  standard_name = air_pressure_difference_between_midlayers
  long_name = air pressure difference between midlayers
  units = Pa
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[del_gz]
  standard_name = geopotential_difference_between_midlayers_divided_by_midlayer_virtual_temperature
  long_name = difference between mid-layer geopotentials divided by mid-layer virtual temperature
  units = m2 s-2 K-1
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
[delr]
  standard_name = layer_pressure_thickness_for_radiation
  long_name = layer pressure thickness on radiation levels
  units = hPa
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[dkt]
  standard_name = atmosphere_heat_diffusivity
  long_name = diffusivity for heat
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension_minus_one)
  type = real
  kind = kind_phys
[dlength]
  standard_name = characteristic_grid_length_scale
  long_name = representative horizontal length scale of grid box
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dqdt]
  standard_name = tendency_of_tracers_due_to_model_physics
  long_name = updated tendency of the tracers due to model physics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_tracers)
  type = real
  kind = kind_phys
[dqdt(:,:,index_for_water_vapor)]
  standard_name = tendency_of_water_vapor_specific_humidity_due_to_model_physics
  long_name = water vapor specific humidity tendency due to model physics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dqdt(:,:,index_for_liquid_cloud_condensate)]
  standard_name = tendency_of_liquid_cloud_water_mixing_ratio_due_to_model_physics
  long_name = cloud condensed water mixing ratio tendency due to model physics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dqdt(:,:,index_for_ice_cloud_condensate)]
  standard_name = tendency_of_ice_cloud_water_mixing_ratio_due_to_model_physics
  long_name = cloud condensed water mixing ratio tendency due to model physics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dqdt(:,:,index_for_ozone)]
  standard_name = tendency_of_ozone_mixing_ratio_due_to_model_physics
  long_name = ozone mixing ratio tendency due to model physics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dqdt(:,:,index_for_liquid_cloud_number_concentration)]
  standard_name = tendency_of_cloud_droplet_number_concentration_due_to_model_physics
  long_name = number concentration of cloud droplets (liquid) tendency due to model physics
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (index_for_liquid_cloud_number_concentration > 0)
[dqdt(:,:,index_for_ice_cloud_number_concentration)]
  standard_name = tendency_of_ice_number_concentration_due_to_model_physics
  long_name = number concentration of ice tendency due to model physics
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dqdt(:,:,index_for_water_friendly_aerosols)]
  standard_name = tendency_of_water_friendly_aerosol_number_concentration_due_to_model_physics
  long_name = number concentration of water-friendly aerosols tendency due to model physics
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (index_for_water_friendly_aerosols > 0)
[dqdt(:,:,index_for_ice_friendly_aerosols)]
  standard_name = tendency_of_ice_friendly_aerosol_number_concentration_due_to_model_physics
  long_name = number concentration of ice-friendly aerosols tendency due to model physics
  units = kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (index_for_ice_friendly_aerosols > 0)
[dqdt(:,:,index_for_rain_water)]
  standard_name = tendency_of_rain_water_mixing_ratio_due_to_model_physics
  long_name = ratio of mass of rain water tendency to mass of dry air plus vapor (without condensates) due to model physics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dqdt(:,:,index_for_snow_water)]
  standard_name = tendency_of_snow_water_mixing_ratio_due_to_model_physics
  long_name = ratio of mass of snow water tendency to mass of dry air plus vapor (without condensates) due to model physics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dqdt(:,:,index_for_graupel)]
  standard_name = tendency_of_graupel_mixing_ratio_due_to_model_physics
  long_name = ratio of mass of graupel tendency to mass of dry air plus vapor (without condensates) due to model physics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dqdt(:,:,index_for_turbulent_kinetic_energy)]
  standard_name = tendency_of_turbulent_kinetic_energy_due_to_model_physics
  long_name = turbulent kinetic energy tendency due to model physics
  units = J s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dqsdt2]
  standard_name = saturation_specific_humidity_slope
  long_name = saturation specific humidity slope at lowest model layer
  units = K-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[dqsfc1]
  standard_name = instantaneous_surface_upward_latent_heat_flux
  long_name = surface upward latent heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[drain]
  standard_name = subsurface_runoff_flux
  long_name = subsurface runoff flux
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[drain_in_m_sm1]
  standard_name = subsurface_runoff_flux_in_m_sm1
  long_name = subsurface runoff flux in m s-1
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[dtdt]
  standard_name = tendency_of_air_temperature_due_to_model_physics
  long_name = air temperature tendency due to model physics
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dtdtc]
  standard_name = tendency_of_air_temperature_due_to_radiative_heating_assuming_clear_sky
  long_name = clear sky radiative (shortwave + longwave) heating rate at current time
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dtsfc1]
  standard_name = instantaneous_surface_upward_sensible_heat_flux
  long_name = surface upward sensible heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dtzm]
  standard_name = mean_change_over_depth_in_sea_water_temperature
  long_name = mean of dT(z)  (zsea1 to zsea2)
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dt_mf]
  standard_name = instantaneous_atmosphere_detrainment_convective_mass_flux
  long_name = (detrainment mass flux) * delt
  units = kg m-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dudt]
  standard_name = tendency_of_x_wind_due_to_model_physics
  long_name = zonal wind tendency due to model physics
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dusfcg]
  standard_name = instantaneous_x_stress_due_to_gravity_wave_drag
  long_name = zonal surface stress due to orographic gravity wave drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dusfc1]
  standard_name = instantaneous_surface_x_momentum_flux
  long_name = x momentum flux
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dvdftra]
  standard_name = tendency_of_vertically_diffused_tracer_concentration
  long_name = updated tendency of the tracers due to vertical diffusion in PBL scheme
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_vertical_diffusion_tracers)
  type = real
  kind = kind_phys
[dvdt]
  standard_name = tendency_of_y_wind_due_to_model_physics
  long_name = meridional wind tendency due to model physics
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dvsfcg]
  standard_name = instantaneous_y_stress_due_to_gravity_wave_drag
  long_name = meridional surface stress due to orographic gravity wave drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dvsfc1]
  standard_name = instantaneous_surface_y_momentum_flux
  long_name = y momentum flux
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dzlyr]
  standard_name = layer_thickness_for_radiation
  long_name = layer thickness on radiation levels
  units = km
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[elvmax]
  standard_name = maximum_subgrid_orography
  long_name = maximum of subgrid orography
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[semis_ocean]
  standard_name = surface_longwave_emissivity_over_ocean_interstitial
  long_name = surface lw emissivity in fraction over ocean (temporary use as interstitial)
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[semis_land]
  standard_name = surface_longwave_emissivity_over_land_interstitial
  long_name = surface lw emissivity in fraction over land (temporary use as interstitial)
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[semis_ice]
  standard_name = surface_longwave_emissivity_over_ice_interstitial
  long_name = surface lw emissivity in fraction over ice (temporary use as interstitial)
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ep1d]
  standard_name = surface_upward_potential_latent_heat_flux
  long_name = surface upward potential latent heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ep1d_ocean]
  standard_name = surface_upward_potential_latent_heat_flux_over_ocean
  long_name = surface upward potential latent heat flux over ocean
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ep1d_land]
  standard_name = surface_upward_potential_latent_heat_flux_over_land
  long_name = surface upward potential latent heat flux over land
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ep1d_ice]
  standard_name = surface_upward_potential_latent_heat_flux_over_ice
  long_name = surface upward potential latent heat flux over ice
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evapq]
  standard_name = kinematic_surface_upward_latent_heat_flux_reduced_by_surface_roughness
  long_name = kinematic surface upward latent heat flux reduced by surface roughness
  units = kg kg-1 m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evap_ocean]
  standard_name = kinematic_surface_upward_latent_heat_flux_over_ocean
  long_name = kinematic surface upward latent heat flux over ocean
  units = kg kg-1 m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evap_land]
  standard_name = kinematic_surface_upward_latent_heat_flux_over_land
  long_name = kinematic surface upward latent heat flux over land
  units = kg kg-1 m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evap_ice]
  standard_name = kinematic_surface_upward_latent_heat_flux_over_ice
  long_name = kinematic surface upward latent heat flux over ice
  units = kg kg-1 m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evbs]
  standard_name = soil_upward_latent_heat_flux
  long_name = soil upward latent heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[evcw]
  standard_name = canopy_upward_latent_heat_flux
  long_name = canopy upward latent heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[faerlw]
  standard_name = aerosol_optical_properties_for_longwave_bands_01_16
  long_name = aerosol optical properties for longwave bands 01-16
  units = various
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation,number_of_aerosol_bands_for_longwave_radiation,number_of_aerosol_output_fields_for_longwave_radiation)
  type = real
  kind = kind_phys
[faerlw(:,:,:,1)]
  standard_name = aerosol_optical_depth_for_longwave_bands_01_16
  long_name = aerosol optical depth for longwave bands 01-16
  units = none
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation,number_of_aerosol_bands_for_longwave_radiation)
  type = real
  kind = kind_phys
[faerlw(:,:,:,2)]
  standard_name = aerosol_single_scattering_albedo_for_longwave_bands_01_16
  long_name = aerosol single scattering albedo for longwave bands 01-16
  units = frac
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation,number_of_aerosol_bands_for_longwave_radiation)
  type = real
  kind = kind_phys
[faerlw(:,:,:,3)]
  standard_name = aerosol_asymmetry_parameter_for_longwave_bands_01_16
  long_name = aerosol asymmetry parameter for longwave bands 01-16
  units = none
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation,number_of_aerosol_bands_for_longwave_radiation)
  type = real
  kind = kind_phys
[faersw]
  standard_name = aerosol_optical_properties_for_shortwave_bands_01_16
  long_name = aerosol optical properties for shortwave bands 01-16
  units = various
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation,number_of_aerosol_bands_for_shortwave_radiation,number_of_aerosol_output_fields_for_shortwave_radiation)
  type = real
  kind = kind_phys
[faersw(:,:,:,1)]
  standard_name = aerosol_optical_depth_for_shortwave_bands_01_16
  long_name = aerosol optical depth for shortwave bands 01-16
  units = none
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation,number_of_aerosol_bands_for_shortwave_radiation)
  type = real
  kind = kind_phys
[faersw(:,:,:,2)]
  standard_name = aerosol_single_scattering_albedo_for_shortwave_bands_01_16
  long_name = aerosol single scattering albedo for shortwave bands 01-16
  units = frac
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation,number_of_aerosol_bands_for_shortwave_radiation)
  type = real
  kind = kind_phys
[faersw(:,:,:,3)]
  standard_name = aerosol_asymmetry_parameter_for_shortwave_bands_01_16
  long_name = aerosol asymmetry parameter for shortwave bands 01-16
  units = none
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation,number_of_aerosol_bands_for_shortwave_radiation)
  type = real
  kind = kind_phys
[ffhh_ocean]
  standard_name = Monin_Obukhov_similarity_function_for_heat_over_ocean
  long_name = Monin-Obukhov similarity function for heat over ocean
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ffhh_land]
  standard_name = Monin_Obukhov_similarity_function_for_heat_over_land
  long_name = Monin-Obukhov similarity function for heat over land
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ffhh_ice]
  standard_name = Monin_Obukhov_similarity_function_for_heat_over_ice
  long_name = Monin-Obukhov similarity function for heat over ice
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fh2]
  standard_name = Monin_Obukhov_similarity_function_for_heat_at_2m
  long_name = Monin-Obukhov similarity parameter for heat at 2m
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fh2_ocean]
  standard_name = Monin_Obukhov_similarity_function_for_heat_at_2m_over_ocean
  long_name = Monin-Obukhov similarity parameter for heat at 2m over ocean
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fh2_land]
  standard_name = Monin_Obukhov_similarity_function_for_heat_at_2m_over_land
  long_name = Monin-Obukhov similarity parameter for heat at 2m over land
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fh2_ice]
  standard_name = Monin_Obukhov_similarity_function_for_heat_at_2m_over_ice
  long_name = Monin-Obukhov similarity parameter for heat at 2m over ice
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[flag_cice]
  standard_name = flag_for_cice
  long_name = flag for cice
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
[flag_guess]
  standard_name = flag_for_guess_run
  long_name = flag for guess run
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
[flag_iter]
  standard_name = flag_for_iteration
  long_name = flag for iteration
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
[flag_lsm]
  standard_name = flag_for_calling_land_surface_model
  long_name = flag for calling land surface model
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[flag_lsm_glacier]
  standard_name = flag_for_calling_land_surface_model_glacier
  long_name = flag for calling land surface model over glacier
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[ffmm_ocean]
  standard_name = Monin_Obukhov_similarity_function_for_momentum_over_ocean
  long_name = Monin-Obukhov similarity function for momentum over ocean
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ffmm_land]
  standard_name = Monin_Obukhov_similarity_function_for_momentum_over_land
  long_name = Monin-Obukhov similarity function for momentum over land
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ffmm_ice]
  standard_name = Monin_Obukhov_similarity_function_for_momentum_over_ice
  long_name = Monin-Obukhov similarity function for momentum over ice
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fm10]
  standard_name = Monin_Obukhov_similarity_function_for_momentum_at_10m
  long_name = Monin-Obukhov similarity parameter for momentum at 10m
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fm10_ocean]
  standard_name = Monin_Obukhov_similarity_function_for_momentum_at_10m_over_ocean
  long_name = Monin-Obukhov similarity parameter for momentum at 10m over ocean
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fm10_land]
  standard_name = Monin_Obukhov_similarity_function_for_momentum_at_10m_over_land
  long_name = Monin-Obukhov similarity parameter for momentum at 10m over land
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fm10_ice]
  standard_name = Monin_Obukhov_similarity_function_for_momentum_at_10m_over_ice
  long_name = Monin-Obukhov similarity parameter for momentum at 10m over ice
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[frain]
  standard_name = dynamics_to_physics_timestep_ratio
  long_name = ratio of dynamics timestep to physics timestep
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[frland]
  standard_name = land_area_fraction_for_microphysics
  long_name = land area fraction used in microphysics schemes
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fscav]
  standard_name = fraction_of_tracer_scavenged
  long_name = fraction of the tracer (aerosols) that is scavenged by convection
  units = km-1
  dimensions = (number_of_tracers_scavenged)
  type = real
  kind = kind_phys
[fswtr]
  standard_name = fraction_of_cloud_top_water_scavenged
  long_name = fraction of the tracer (cloud top water) that is scavenged by convection
  units = km-1
  dimensions = (number_of_tracers_scavenged)
  type = real
  kind = kind_phys
[gabsbdlw]
  standard_name = surface_downwelling_longwave_flux_absorbed_by_ground
  long_name = total sky surface downward longwave flux absorbed by the ground
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gabsbdlw_ocean]
  standard_name = surface_downwelling_longwave_flux_absorbed_by_ground_over_ocean
  long_name = total sky surface downward longwave flux absorbed by the ground over ocean
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gabsbdlw_land]
  standard_name = surface_downwelling_longwave_flux_absorbed_by_ground_over_land
  long_name = total sky surface downward longwave flux absorbed by the ground over land
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gabsbdlw_ice]
  standard_name = surface_downwelling_longwave_flux_absorbed_by_ground_over_ice
  long_name = total sky surface downward longwave flux absorbed by the ground over ice
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gamma]
  standard_name = anisotropy_of_subgrid_orography
  long_name = anisotropy of subgrid orography
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gamq]
  standard_name = countergradient_mixing_term_for_water_vapor
  long_name = countergradient mixing term for water vapor
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gamt]
  standard_name = countergradient_mixing_term_for_temperature
  long_name = countergradient mixing term for temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gasvmr(:,:,1)]
  standard_name = volume_mixing_ratio_co2
  long_name = volume mixing ratio co2
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gasvmr(:,:,2)]
  standard_name = volume_mixing_ratio_n2o
  long_name = volume mixing ratio no2
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gasvmr(:,:,3)]
  standard_name = volume_mixing_ratio_ch4
  long_name = volume mixing ratio ch4
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gasvmr(:,:,4)]
  standard_name = volume_mixing_ratio_o2
  long_name = volume mixing ratio o2
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gasvmr(:,:,5)]
  standard_name = volume_mixing_ratio_co
  long_name = volume mixing ratio co
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gasvmr(:,:,6)]
  standard_name = volume_mixing_ratio_cfc11
  long_name = volume mixing ratio cfc11
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gasvmr(:,:,7)]
  standard_name = volume_mixing_ratio_cfc12
  long_name = volume mixing ratio cfc12
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gasvmr(:,:,8)]
  standard_name = volume_mixing_ratio_cfc22
  long_name = volume mixing ratio cfc22
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gasvmr(:,:,9)]
  standard_name = volume_mixing_ratio_ccl4
  long_name = volume mixing ratio ccl4
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gasvmr(:,:,10)]
  standard_name = volume_mixing_ratio_cfc113
  long_name = volume mixing ratio cfc113
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[gflx]
  standard_name = upward_heat_flux_in_soil
  long_name = soil heat flux
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gflx_ocean]
  standard_name = upward_heat_flux_in_soil_over_ocean
  long_name = soil heat flux over ocean
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gflx_land]
  standard_name = upward_heat_flux_in_soil_over_land
  long_name = soil heat flux over land
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gflx_ice]
  standard_name = upward_heat_flux_in_soil_over_ice
  long_name = soil heat flux over ice
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[graupelmp]
  standard_name = lwe_thickness_of_graupel_amount
  long_name = explicit graupel fall on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_gfdl_microphysics_scheme .or. flag_for_microphysics_scheme == flag_for_thompson_microphysics_scheme)
[gwdcu]
  standard_name = tendency_of_x_wind_due_to_convective_gravity_wave_drag
  long_name = zonal wind tendency due to convective gravity wave drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gwdcv]
  standard_name = tendency_of_y_wind_due_to_convective_gravity_wave_drag
  long_name = meridional wind tendency due to convective gravity wave drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[h2o_coeff]
  standard_name = number_of_coefficients_in_h2o_forcing_data
  long_name = number of coefficients in h2o forcing data
  units = index
  dimensions = ()
  type = integer
[h2o_pres]
  standard_name = natural_log_of_h2o_forcing_data_pressure_levels
  long_name = natural log of h2o forcing data pressure levels
  units = log(Pa)
  dimensions = (vertical_dimension_of_h2o_forcing_data)
  type = real
  kind = kind_phys
[hefac]
  standard_name = surface_upward_latent_heat_flux_reduction_factor
  long_name = surface upward latent heat flux reduction factor from canopy heat storage
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[hffac]
  standard_name = surface_upward_sensible_heat_flux_reduction_factor
  long_name = surface upward sensible heat flux reduction factor from canopy heat storage
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[hflxq]
  standard_name = kinematic_surface_upward_sensible_heat_flux_reduced_by_surface_roughness
  long_name = kinematic surface upward sensible heat flux reduced by surface roughness
  units = K m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[hflx_ocean]
  standard_name = kinematic_surface_upward_sensible_heat_flux_over_ocean
  long_name = kinematic surface upward sensible heat flux over ocean
  units = K m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[hflx_land]
  standard_name = kinematic_surface_upward_sensible_heat_flux_over_land
  long_name = kinematic surface upward sensible heat flux over land
  units = K m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[hflx_ice]
  standard_name = kinematic_surface_upward_sensible_heat_flux_over_ice
  long_name = kinematic surface upward sensible heat flux over ice
  units = K m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[htlwc]
  standard_name = tendency_of_air_temperature_due_to_longwave_heating_on_radiation_time_step_and_radiation_levels
  long_name = total sky heating rate due to longwave radiation
  units = K s-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[htlw0]
  standard_name = tendency_of_air_temperature_due_to_longwave_heating_assuming_clear_sky_on_radiation_time_step_and_radiation_levels
  long_name = clear sky heating rate due to longwave radiation
  units = K s-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[htswc]
  standard_name = tendency_of_air_temperature_due_to_shortwave_heating_on_radiation_time_step_and_radiation_levels
  long_name = total sky heating rate due to shortwave radiation
  units = K s-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[htsw0]
  standard_name = tendency_of_air_temperature_due_to_shortwave_heating_assuming_clear_sky_on_radiation_time_step_and_radiation_levels
  long_name = clear sky heating rates due to shortwave radiation
  units = K s-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[icemp]
  standard_name = lwe_thickness_of_ice_amount
  long_name = explicit ice fall on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_gfdl_microphysics_scheme .or. flag_for_microphysics_scheme == flag_for_thompson_microphysics_scheme)
[dry]
  standard_name = flag_nonzero_land_surface_fraction
  long_name = flag indicating presence of some land surface area fraction
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
[idxday]
  standard_name = daytime_points
  long_name = daytime points
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[icy]
  standard_name = flag_nonzero_sea_ice_surface_fraction
  long_name = flag indicating presence of some sea ice surface area fraction
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
[lake]
  standard_name = flag_nonzero_lake_surface_fraction
  long_name = flag indicating presence of some lake surface area fraction
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
[ocean]
  standard_name = flag_nonzero_ocean_surface_fraction
  long_name = flag indicating presence of some ocean surface area fraction
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
[ipr]
  standard_name = horizontal_index_of_printed_column
  long_name = horizontal index of printed column
  units = index
  dimensions = ()
  type = integer
[islmsk]
  standard_name = sea_land_ice_mask
  long_name = sea/land/ice mask (=0/1/2)
  units = flag
  dimensions = (horizontal_loop_extent)
  type = integer
[islmsk_cice]
  standard_name = sea_land_ice_mask_cice
  long_name = sea/land/ice mask cice (=0/1/2)
  units = flag
  dimensions = (horizontal_loop_extent)
  type = integer
[itc]
  standard_name = number_of_aerosol_tracers_for_convection
  long_name = number of aerosol tracers transported/scavenged by convection
  units = count
  dimensions = ()
  type = integer
[wet]
  standard_name = flag_nonzero_wet_surface_fraction
  long_name = flag indicating presence of some ocean or lake surface area fraction
  units = flag
  dimensions = (horizontal_loop_extent)
  type = logical
[kb]
  standard_name = vertical_index_difference_between_layer_and_lower_bound
  long_name = vertical index difference between layer and lower bound
  units = index
  dimensions = ()
  type = integer
[kbot]
  standard_name = vertical_index_at_cloud_base
  long_name = vertical index at cloud base
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[kcnv]
  standard_name = flag_deep_convection
  long_name = flag indicating whether convection occurs in column (0 or 1)
  units = flag
  dimensions = (horizontal_loop_extent)
  type = integer
[kd]
  standard_name = vertical_index_difference_between_inout_and_local
  long_name = vertical index difference between in/out and local
  units = index
  dimensions = ()
  type = integer
[kinver]
  standard_name = index_of_highest_temperature_inversion
  long_name = index of highest temperature inversion
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[kpbl]
  standard_name = vertical_index_at_top_of_atmosphere_boundary_layer
  long_name = vertical index at top atmospheric boundary layer
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[kt]
  standard_name = vertical_index_difference_between_layer_and_upper_bound
  long_name = vertical index difference between layer and upper bound
  units = index
  dimensions = ()
  type = integer
[ktop]
  standard_name = vertical_index_at_cloud_top
  long_name = vertical index at cloud top
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[latidxprnt]
  standard_name = latitude_index_in_debug_printouts
  long_name = latitude index in debug printouts
  units = index
  dimensions = ()
  type = integer
[levi]
  standard_name = vertical_interface_dimension
  long_name = vertical interface dimension
  units = count
  dimensions = ()
  type = integer
[levh2o]
  standard_name = vertical_dimension_of_h2o_forcing_data
  long_name = number of vertical layers in h2o forcing data
  units = count
  dimensions = ()
  type = integer
[levozp]
  standard_name = vertical_dimension_of_ozone_forcing_data
  long_name = number of vertical layers in ozone forcing data
  units = count
  dimensions = ()
  type = integer
[lmk]
  standard_name = adjusted_vertical_layer_dimension_for_radiation
  long_name = adjusted number of vertical layers for radiation
  units = count
  dimensions = ()
  type = integer
[lmp]
  standard_name = adjusted_vertical_level_dimension_for_radiation
  long_name = adjusted number of vertical levels for radiation
  units = count
  dimensions = ()
  type = integer
[mbota]
  standard_name = model_layer_number_at_cloud_base
  long_name = vertical indices for low, middle and high cloud bases
  units = index
  dimensions = (horizontal_loop_extent,3)
  type = integer
[mg3_as_mg2]
  standard_name = flag_mg3_as_mg2
  long_name = flag for controlling prep for Morrison-Gettelman microphysics
  units = flag
  dimensions = ()
  type = logical
[mtopa]
  standard_name = model_layer_number_at_cloud_top
  long_name = vertical indices for low, middle and high cloud tops
  units = index
  dimensions = (horizontal_loop_extent,3)
  type = integer
[nbdlw]
  standard_name = number_of_aerosol_bands_for_longwave_radiation
  long_name = number of aerosol bands for longwave radiation
  units = count
  dimensions = ()
  type = integer
[nbdsw]
  standard_name = number_of_aerosol_bands_for_shortwave_radiation
  long_name = number of aerosol bands for shortwave radiation
  units = count
  dimensions = ()
  type = integer
[ncgl]
  standard_name = local_graupel_number_concentration
  long_name = number concentration of graupel local to physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[ncpi]
  standard_name = local_ice_number_concentration
  long_name = number concentration of ice local to physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_shoc)
[ncpl]
  standard_name = local_condesed_water_number_concentration
  long_name = number concentration of condensed water local to physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_shoc)
[ncpr]
  standard_name = local_rain_number_concentration
  long_name = number concentration of rain local to physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[ncps]
  standard_name = local_snow_number_concentration
  long_name = number concentration of snow local to physics
  units = kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[ncstrac]
  standard_name = number_of_tracers_for_CS
  long_name = number of convectively transported tracers in Chikira-Sugiyama deep convection scheme
  units = count
  dimensions = ()
  type = integer
[nday]
  standard_name = daytime_points_dimension
  long_name = daytime points dimension
  units = count
  dimensions = ()
  type = integer
[nf_aelw]
  standard_name = number_of_aerosol_output_fields_for_longwave_radiation
  long_name = number of aerosol output fields for longwave radiation
  units = count
  dimensions = ()
  type = integer
[nf_aesw]
  standard_name = number_of_aerosol_output_fields_for_shortwave_radiation
  long_name = number of aerosol output fields for shortwave radiation
  units = count
  dimensions = ()
  type = integer
[nn]
  standard_name = number_of_tracers_for_convective_transport
  long_name = number of tracers for convective transport
  units = count
  dimensions = ()
  type = integer
[nncl]
  standard_name = number_of_tracers_for_cloud_condensate
  long_name = number of tracers for cloud condensate
  units = count
  dimensions = ()
  type = integer
[nsamftrac]
  standard_name = number_of_tracers_for_samf
  long_name = number of tracers for scale-aware mass flux schemes
  units = count
  dimensions = ()
  type = integer
[nscav]
  standard_name = number_of_tracers_scavenged
  long_name = number of tracers scavenged
  units = count
  dimensions = ()
  type = integer
[nspc1]
  standard_name = number_of_species_for_aerosol_optical_depth
  long_name = number of species for output aerosol optical depth plus total
  units = count
  dimensions = ()
  type = integer
[ntiwx]
  standard_name = index_for_ice_cloud_condensate_vertical_diffusion_tracer
  long_name = index for ice cloud condensate in the vertically diffused tracer array
  units = index
  dimensions = ()
  type = integer
[ntk]
  standard_name = index_for_turbulent_kinetic_energy_convective_transport_tracer
  long_name = index for turbulent kinetic energy in the convectively transported tracer array
  units = index
  dimensions = ()
  type = integer
[ntkev]
  standard_name = index_for_turbulent_kinetic_energy_vertical_diffusion_tracer
  long_name = index for turbulent kinetic energy in the vertically diffused tracer array
  units = index
  dimensions = ()
  type = integer
[nvdiff]
  standard_name = number_of_vertical_diffusion_tracers
  long_name = number of tracers to diffuse vertically
  units = count
  dimensions = ()
  type = integer
[oa4]
  standard_name = asymmetry_of_subgrid_orography
  long_name = asymmetry of subgrid orography
  units = none
  dimensions = (horizontal_loop_extent,4)
  type = real
  kind = kind_phys
[varss]
  standard_name = standard_deviation_of_subgrid_orography_small_scale
  long_name = standard deviation of subgrid orography small scale
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (gwd_opt == 3 .or. gwd_opt == 33)
[oa4ss]
  standard_name = asymmetry_of_subgrid_orography_small_scale
  long_name = asymmetry of subgrid orography small scale
  units = none
  dimensions = (horizontal_loop_extent,4)
  type = real
  kind = kind_phys
  active = (gwd_opt == 3 .or. gwd_opt == 33)
[oc]
  standard_name = convexity_of_subgrid_orography
  long_name = convexity of subgrid orography
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[ocss]
  standard_name = convexity_of_subgrid_orography_small_scale
  long_name = convexity of subgrid orography small scale
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (gwd_opt == 3 .or. gwd_opt == 33)
[olyr]
  standard_name = ozone_concentration_at_layer_for_radiation
  long_name = ozone concentration layer
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[otspt]
  standard_name = flag_convective_tracer_transport
  long_name = flag to enable tracer transport by updrafts/downdrafts[(:,1)] or subsidence [(:,2)]
  units = flag
  dimensions = (number_of_tracers_plus_one,2)
  type = logical
[oz_coeff]
  standard_name = number_of_coefficients_in_ozone_forcing_data
  long_name = number of coefficients in ozone forcing data
  units = index
  dimensions = ()
  type = integer
[oz_coeffp5]
  standard_name = number_of_coefficients_in_ozone_forcing_data_plus_five
  long_name = number of coefficients in ozone forcing data plus five
  units = index
  dimensions = ()
  type = integer
[oz_pres]
  standard_name = natural_log_of_ozone_forcing_data_pressure_levels
  long_name = natural log of ozone forcing data pressure levels
  units = log(Pa)
  dimensions = (vertical_dimension_of_ozone_forcing_data)
  type = real
  kind = kind_phys
[phys_hydrostatic]
  standard_name = flag_for_hydrostatic_heating_from_physics
  long_name = flag for use of hydrostatic heating in physics
  units = flag
  dimensions = ()
  type = logical
[plvl]
  standard_name = air_pressure_at_interface_for_radiation_in_hPa
  long_name = air pressure at vertical interface for radiation calculation
  units = hPa
  dimensions = (horizontal_loop_extent,adjusted_vertical_level_dimension_for_radiation)
  type = real
  kind = kind_phys
[plyr]
  standard_name = air_pressure_at_layer_for_radiation_in_hPa
  long_name = air pressure at vertical layer for radiation calculation
  units = hPa
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[prnum]
  standard_name = prandtl_number
  long_name = turbulent Prandtl number
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[q2mp]
  standard_name = specific_humidity_at_2m_from_noahmp
  long_name = 2 meter specific humidity from noahmp
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)
[qgl]
  standard_name = local_graupel_mixing_ratio
  long_name = ratio of mass of graupel to mass of dry air plus vapor (without condensates) local to physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme .or. flag_for_shoc)
[qicn]
  standard_name = mass_fraction_of_convective_cloud_ice
  long_name = mass fraction of convective cloud ice water
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[qlcn]
  standard_name = mass_fraction_of_convective_cloud_liquid_water
  long_name = mass fraction of convective cloud liquid water
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[qlyr]
  standard_name = water_vapor_specific_humidity_at_layer_for_radiation
  long_name = specific humidity layer
  units = kg kg-1
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[qrn]
  standard_name = local_rain_water_mixing_ratio
  long_name = ratio of mass of rain water to mass of dry air plus vapor (without condensates) local to physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme .or. flag_for_shoc)
[qsnw]
  standard_name = local_snow_water_mixing_ratio
  long_name = ratio of mass of snow water to mass of dry air plus vapor (without condensates) local to physics
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme .or. flag_for_shoc)
[prcpmp]
  standard_name = lwe_thickness_of_explicit_precipitation_amount
  long_name = explicit precipitation (rain, ice, snow, graupel, ...) on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qss_ocean]
  standard_name = surface_specific_humidity_over_ocean
  long_name = surface air saturation specific humidity over ocean
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qss_land]
  standard_name = surface_specific_humidity_over_land
  long_name = surface air saturation specific humidity over land
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qss_ice]
  standard_name = surface_specific_humidity_over_ice
  long_name = surface air saturation specific humidity over ice
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[qs1]
  standard_name = saturation_specific_humidity_at_lowest_model_layer
  long_name = saturation specific humidity at lowest model layer
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[qv1]
  standard_name = bounded_specific_humidity_at_lowest_model_layer_over_land
  long_name = specific humidity at lowest model layer over land bounded between a nonzero epsilon and saturation
  units = kg kg-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[radar_reset]
  standard_name = flag_for_resetting_radar_reflectivity_calculation
  long_name = flag for resetting radar reflectivity calculation
  units = flag
  dimensions = ()
  type = logical
[raddt]
  standard_name = time_step_for_radiation
  long_name = radiation time step
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
[raincd]
  standard_name = lwe_thickness_of_deep_convective_precipitation_amount
  long_name = deep convective rainfall amount on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[raincs]
  standard_name = lwe_thickness_of_shallow_convective_precipitation_amount
  long_name = shallow convective rainfall amount on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rainmcadj]
  standard_name = lwe_thickness_of_moist_convective_adj_precipitation_amount
  long_name = adjusted moist convective rainfall amount on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rainmp]
  standard_name = lwe_thickness_of_explicit_rain_amount
  long_name = explicit rain on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_gfdl_microphysics_scheme .or. flag_for_microphysics_scheme == flag_for_thompson_microphysics_scheme)
[rainp]
  standard_name = tendency_of_rain_water_mixing_ratio_due_to_microphysics
  long_name = tendency of rain water mixing ratio due to microphysics
  units = kg kg-1 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[rb]
  standard_name = bulk_richardson_number_at_lowest_model_level
  long_name = bulk Richardson number at the surface
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rb_ocean]
  standard_name = bulk_richardson_number_at_lowest_model_level_over_ocean
  long_name = bulk Richardson number at the surface over ocean
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rb_land]
  standard_name = bulk_richardson_number_at_lowest_model_level_over_land
  long_name = bulk Richardson number at the surface over land
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[rb_ice]
  standard_name = bulk_richardson_number_at_lowest_model_level_over_ice
  long_name = bulk Richardson number at the surface over ice
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[reset]
  standard_name = flag_reset_maximum_hourly_fields
  long_name = flag for resetting maximum hourly fields
  units = flag
  dimensions = ()
  type = logical
[rhc]
  standard_name = critical_relative_humidity
  long_name = critical relative humidity
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[rho1]
  standard_name = air_density_at_lowest_model_layer
  long_name = air density at lowest model layer
  units = kg m-3
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[runoff]
  standard_name = surface_runoff_flux
  long_name = surface runoff flux
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[runoff_in_m_sm1]
  standard_name = surface_runoff_flux_in_m_sm1
  long_name = surface runoff flux in m s-1
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[save_q(:,:,index_for_ozone)]
  standard_name = ozone_mixing_ratio_save
  long_name = ozone mixing ratio before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[save_q(:,:,index_for_liquid_cloud_condensate)]
  standard_name = cloud_condensed_water_mixing_ratio_save
  long_name = ratio of mass of cloud water to mass of dry air plus vapor (without condensates) before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[save_q(:,:,index_for_ice_cloud_condensate)]
  standard_name = ice_water_mixing_ratio_save
  long_name = cloud ice water mixing ratio before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[save_q(:,:,index_for_water_vapor)]
  standard_name = water_vapor_specific_humidity_save
  long_name = water vapor specific humidity before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[save_q]
  standard_name = tracer_concentration_save
  long_name = tracer concentration before entering a physics scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_tracers)
  type = real
  kind = kind_phys
[save_t]
  standard_name = air_temperature_save
  long_name = air temperature before entering a physics scheme
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[save_tcp]
  standard_name = air_temperature_save_from_convective_parameterization
  long_name = air temperature after cumulus parameterization
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[save_u]
  standard_name = x_wind_save
  long_name = x-wind before entering a physics scheme
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[save_v]
  standard_name = y_wind_save
  long_name = y-wind before entering a physics scheme
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[sbsno]
  standard_name = snow_deposition_sublimation_upward_latent_heat_flux
  long_name = latent heat flux from snow depo/subl
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[scmpsw]
  standard_name = components_of_surface_downward_shortwave_fluxes
  long_name = derived type for special components of surface downward shortwave fluxes
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = cmpfsw_type
[sfcalb(:,1)]
  standard_name = surface_albedo_due_to_near_IR_direct
  long_name = surface albedo due to near IR direct beam
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfcalb(:,2)]
  standard_name = surface_albedo_due_to_near_IR_diffused
  long_name = surface albedo due to near IR diffused beam
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfcalb(:,3)]
  standard_name = surface_albedo_due_to_UV_and_VIS_direct
  long_name = surface albedo due to UV+VIS direct beam
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sfcalb(:,4)]
  standard_name = surface_albedo_due_to_UV_and_VIS_diffused
  long_name = surface albedo due to UV+VIS diffused beam
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sigma]
  standard_name = slope_of_subgrid_orography
  long_name = slope of subgrid orography
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sigmaf]
  standard_name = bounded_vegetation_area_fraction
  long_name = areal fractional cover of green vegetation bounded on the bottom
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[sigmafrac]
  standard_name = convective_updraft_area_fraction
  long_name = convective updraft area fraction
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[sigmatot]
  standard_name = convective_updraft_area_fraction_at_model_interfaces
  long_name = convective updraft area fraction at model interfaces
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[skip_macro]
  standard_name = flag_skip_macro
  long_name = flag to skip cloud macrophysics in Morrison scheme
  units = flag
  dimensions = ()
  type = logical
[slc_save]
  standard_name = volume_fraction_of_unfrozen_soil_moisture_save
  long_name = liquid soil moisture before entering a physics scheme
  units = frac
  dimensions = (horizontal_loop_extent,soil_vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[slopetype]
  standard_name = surface_slope_classification
  long_name = surface slope type at each grid cell
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[smcmax]
  standard_name = soil_porosity
  long_name = volumetric soil porosity
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[smc_save]
  standard_name = volume_fraction_of_soil_moisture_save
  long_name = total soil moisture before entering a physics scheme
  units = frac
  dimensions = (horizontal_loop_extent,soil_vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[snowc]
  standard_name = surface_snow_area_fraction
  long_name = surface snow area fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snowd_ocean]
  standard_name = surface_snow_thickness_water_equivalent_over_ocean
  long_name = water equivalent snow depth over ocean
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snowd_land]
  standard_name = surface_snow_thickness_water_equivalent_over_land
  long_name = water equivalent snow depth over land
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snowd_land_save]
  standard_name = surface_snow_thickness_water_equivalent_over_land_save
  long_name = water equivalent snow depth over land before entering a physics scheme
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[snowd_ice]
  standard_name = surface_snow_thickness_water_equivalent_over_ice
  long_name = water equivalent snow depth over ice
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snow_depth]
  standard_name = actual_snow_depth
  long_name = actual snow depth
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[snohf]
  standard_name = snow_freezing_rain_upward_latent_heat_flux
  long_name = latent heat flux due to snow and frz rain
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[snohf_snow]
  standard_name = latent_heat_flux_from_precipitating_snow
  long_name = latent heat flux due to precipitating snow
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[snohf_frzgra]
  standard_name = latent_heat_flux_from_freezing_rain
  long_name = latent heat flux due to freezing rain
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[snohf_snowmelt]
  standard_name = latent_heat_flux_due_to_snowmelt
  long_name = latent heat flux due to snowmelt phase change
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[snowmp]
  standard_name = lwe_thickness_of_snow_amount
  long_name = explicit snow fall on physics timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_gfdl_microphysics_scheme .or. flag_for_microphysics_scheme == flag_for_thompson_microphysics_scheme)
[snowmt]
  standard_name = surface_snow_melt
  long_name = snow melt during timestep
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[soilm_in_m]
  standard_name = soil_moisture_content_in_m
  long_name = soil moisture in meters
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[soiltype]
  standard_name = soil_type_classification
  long_name = soil type at each grid cell
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[stc_save]
  standard_name = soil_temperature_save
  long_name = soil temperature before entering a physics scheme
  units = K
  dimensions = (horizontal_loop_extent,soil_vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[sthick]
  standard_name = soil_layer_thickness
  long_name = soil layer thickness
  units = m
  dimensions = (soil_vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[stress]
  standard_name = surface_wind_stress
  long_name = surface wind stress
  units = m2 s-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[stress_ocean]
  standard_name = surface_wind_stress_over_ocean
  long_name = surface wind stress over ocean
  units = m2 s-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[stress_land]
  standard_name = surface_wind_stress_over_land
  long_name = surface wind stress over land
  units = m2 s-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[stress_ice]
  standard_name = surface_wind_stress_over_ice
  long_name = surface wind stress over ice
  units = m2 s-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[t2mmp]
  standard_name = temperature_at_2m_from_noahmp
  long_name = 2 meter temperature from noahmp
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noahmp_land_surface_scheme)
[theta]
  standard_name = angle_from_east_of_maximum_subgrid_orographic_variations
  long_name = angle with_respect to east of maximum subgrid orographic variations
  units = degree
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[th1]
  standard_name = potential_temperature_at_lowest_model_layer
  long_name = potential_temperature_at_lowest_model_layer
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[tice]
  standard_name = sea_ice_temperature_interstitial
  long_name = sea ice surface skin temperature use as interstitial
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tlvl]
  standard_name = air_temperature_at_interface_for_radiation
  long_name = air temperature at vertical interface for radiation calculation
  units = K
  dimensions = (horizontal_loop_extent,adjusted_vertical_level_dimension_for_radiation)
  type = real
  kind = kind_phys
[tlyr]
  standard_name = air_temperature_at_layer_for_radiation
  long_name = air temperature at vertical layer for radiation calculation
  units = K
  dimensions = (horizontal_loop_extent,adjusted_vertical_layer_dimension_for_radiation)
  type = real
  kind = kind_phys
[tprcp_ocean]
  standard_name = nonnegative_lwe_thickness_of_precipitation_amount_on_dynamics_timestep_over_ocean
  long_name = total precipitation amount in each time step over ocean
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tprcp_land]
  standard_name = nonnegative_lwe_thickness_of_precipitation_amount_on_dynamics_timestep_over_land
  long_name = total precipitation amount in each time step over land
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tprcp_ice]
  standard_name = nonnegative_lwe_thickness_of_precipitation_amount_on_dynamics_timestep_over_ice
  long_name = total precipitation amount in each time step over ice
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tprcp_rate_land]
  standard_name = total_precipitation_rate_on_dynamics_timestep_over_land
  long_name = total precipitation rate in each time step over land
  units = kg m-2 s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[tracers_start_index]
  standard_name = start_index_of_other_tracers
  long_name = beginning index of the non-water tracer species
  units = index
  dimensions = ()
  type = integer
[tracers_total]
  standard_name = number_of_total_tracers
  long_name = total number of tracers
  units = count
  dimensions = ()
  type = integer
[trans_aero]
  standard_name = flag_for_aerosol_convective_transport_and_PBL_diffusion
  long_name = flag for aerosol convective transport and PBL diffusion
  units = flag
  dimensions = ()
  type = logical
[trans]
  standard_name = transpiration_flux
  long_name = total plant transpiration rate
  units = W m-2
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tseal]
  standard_name = surface_skin_temperature_for_nsst
  long_name = ocean surface skin temperature
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfa]
  standard_name = surface_air_temperature_for_radiation
  long_name = lowest model layer air temperature for radiation
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfc_ocean]
  standard_name = surface_skin_temperature_over_ocean_interstitial
  long_name = surface skin temperature over ocean (temporary use as interstitial)
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfc_land]
  standard_name = surface_skin_temperature_over_land_interstitial
  long_name = surface skin temperature over land  (temporary use as interstitial)
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfc_land_save]
  standard_name = surface_skin_temperature_over_land_interstitial_save
  long_name = surface skin temperature over land before entering a physics scheme (temporary use as interstitial)
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[tsfc_ice]
  standard_name = surface_skin_temperature_over_ice_interstitial
  long_name = surface skin temperature over ice   (temporary use as interstitial)
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsfg]
  standard_name = surface_ground_temperature_for_radiation
  long_name = surface ground temperature for radiation
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsurf]
  standard_name = surface_skin_temperature_after_iteration
  long_name = surface skin temperature after iteration
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsurf_ocean]
  standard_name = surface_skin_temperature_after_iteration_over_ocean
  long_name = surface skin temperature after iteration over ocean
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsurf_land]
  standard_name = surface_skin_temperature_after_iteration_over_land
  long_name = surface skin temperature after iteration over land
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tsurf_ice]
  standard_name = surface_skin_temperature_after_iteration_over_ice
  long_name = surface skin temperature after iteration over ice
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tracers_water]
  standard_name = number_of_water_tracers
  long_name = number of water-related tracers
  units = count
  dimensions = ()
  type = integer
[ud_mf]
  standard_name = instantaneous_atmosphere_updraft_convective_mass_flux
  long_name = (updraft mass flux) * delt
  units = kg m-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[uustar_ocean]
  standard_name = surface_friction_velocity_over_ocean
  long_name = surface friction velocity over ocean
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[uustar_land]
  standard_name = surface_friction_velocity_over_land
  long_name = surface friction velocity over land
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[uustar_ice]
  standard_name = surface_friction_velocity_over_ice
  long_name = surface friction velocity over ice
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vdftra]
  standard_name = vertically_diffused_tracer_concentration
  long_name = tracer concentration diffused by PBL scheme
  units = kg kg-1
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_vertical_diffusion_tracers)
  type = real
  kind = kind_phys
[lndp_vgf]
  standard_name = magnitude_of_perturbation_of_vegetation_fraction
  long_name = magnitude of perturbation of vegetation fraction
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[vegf1d]
  standard_name = perturbation_of_vegetation_fraction
  long_name = perturbation of vegetation fraction
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[vegtype]
  standard_name = vegetation_type_classification
  long_name = vegetation type at each grid cell
  units = index
  dimensions = (horizontal_loop_extent)
  type = integer
[w_upi]
  standard_name = vertical_velocity_for_updraft
  long_name = vertical velocity for updraft
  units = m s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_microphysics_scheme == flag_for_morrison_gettelman_microphysics_scheme)
[wcbmax]
  standard_name = maximum_updraft_velocity_at_cloud_base
  long_name = maximum updraft velocity at cloud base
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[weasd_ocean]
  standard_name = water_equivalent_accumulated_snow_depth_over_ocean
  long_name = water equiv of acc snow depth over ocean
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[weasd_land]
  standard_name = water_equivalent_accumulated_snow_depth_over_land
  long_name = water equiv of acc snow depth over land
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[weasd_land_save]
  standard_name = water_equivalent_accumulated_snow_depth_over_land_save
  long_name = water equiv of acc snow depth over land before entering a physics scheme
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_land_surface_scheme == flag_for_noah_wrfv4_land_surface_scheme)
[weasd_ice]
  standard_name = water_equivalent_accumulated_snow_depth_over_ice
  long_name = water equiv of acc snow depth over ice
  units = mm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[wind]
  standard_name = wind_speed_at_lowest_model_layer
  long_name = wind speed at lowest model level
  units = m s-1
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[work1]
  standard_name = grid_size_related_coefficient_used_in_scale_sensitive_schemes
  long_name = grid size related coefficient used in scale-sensitive schemes
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[work2]
  standard_name = grid_size_related_coefficient_used_in_scale_sensitive_schemes_complement
  long_name = complement to work1
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[work3]
  standard_name = ratio_of_exner_function_between_midlayer_and_interface_at_lowest_model_layer
  long_name = Exner function ratio bt midlayer and interface at 1st layer
  units = ratio
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xcosz]
  standard_name = instantaneous_cosine_of_zenith_angle
  long_name = cosine of zenith angle at current time
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xlai1d]
  standard_name = perturbation_of_leaf_area_index
  long_name = perturbation of leaf area index
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[xmu]
  standard_name = zenith_angle_temporal_adjustment_factor_for_shortwave_fluxes
  long_name = zenith angle temporal adjustment factor for shortwave
  units = none
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[z01d]
  standard_name = perturbation_of_momentum_roughness_length
  long_name = perturbation of momentum roughness length
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorl_ocean]
  standard_name = surface_roughness_length_over_ocean_interstitial
  long_name = surface roughness length over ocean (temporary use as interstitial)
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorl_land]
  standard_name = surface_roughness_length_over_land_interstitial
  long_name = surface roughness length over land  (temporary use as interstitial)
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zorl_ice]
  standard_name = surface_roughness_length_over_ice_interstitial
  long_name = surface roughness length over ice   (temporary use as interstitial)
  units = cm
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zt1d]
  standard_name = perturbation_of_heat_to_momentum_roughness_length_ratio
  long_name = perturbation of heat to momentum roughness length ratio
  units = frac
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[gw_dudt]
  standard_name = tendency_of_x_wind_due_to_ugwp
  long_name = zonal wind tendency due to UGWP
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gw_dvdt]
  standard_name = tendency_of_y_wind_due_to_ugwp
  long_name = meridional wind tendency due to UGWP
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gw_dtdt]
  standard_name = tendency_of_air_temperature_due_to_ugwp
  long_name = air temperature tendency due to UGWP
  units = K s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[gw_kdis]
  standard_name = eddy_mixing_due_to_ugwp
  long_name = eddy mixing due to UGWP
  units = m2 s-1
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[zmtb]
  standard_name = height_of_mountain_blocking
  long_name = height of mountain blocking drag
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zlwb]
  standard_name = height_of_low_level_wave_breaking
  long_name = height of drag due to low level wave breaking
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[zogw]
  standard_name = height_of_launch_level_of_orographic_gravity_wave
  long_name = height of launch level of orographic gravity wave
  units = m
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_tofd]
  standard_name = instantaneous_momentum_flux_due_to_turbulent_orographic_form_drag
  long_name = instantaneous momentum flux due to TOFD
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_mtb]
  standard_name = instantaneous_momentum_flux_due_to_mountain_blocking_drag
  long_name = instantaneous momentum flux due to mountain blocking drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_ogw]
  standard_name = instantaneous_momentum_flux_due_to_orographic_gravity_wave_drag
  long_name = instantaneous momentum flux due to orographic gravity wave drag
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[tau_ngw]
  standard_name = instantaneous_momentum_flux_due_to_nonstationary_gravity_wave
  long_name = instantaneous momentum flux due to nonstationary gravity waves
  units = Pa
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[dudt_mtb]
  standard_name = instantaneous_change_in_x_wind_due_to_mountain_blocking_drag
  long_name = instantaneous change in x wind due to mountain blocking drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dudt_ogw]
  standard_name = instantaneous_change_in_x_wind_due_to_orographic_gravity_wave_drag
  long_name = instantaneous change in x wind due to orographic gw drag
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[dudt_tms]
  standard_name = instantaneous_change_in_x_wind_due_to_turbulent_orographic_form_drag
  long_name = instantaneous change in x wind due to TOFD
  units = m s-2
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[p_lay]
  standard_name = air_pressure_at_layer_for_RRTMGP_in_hPa
  long_name = air pressure layer
  units = hPa
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[p_lev]
  standard_name = air_pressure_at_interface_for_RRTMGP_in_hPa
  long_name = air pressure level
  units = hPa
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[t_lay]
  standard_name = air_temperature_at_layer_for_RRTMGP
  long_name = air temperature layer
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[t_lev]
  standard_name = air_temperature_at_interface_for_RRTMGP
  long_name = air temperature layer
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[tv_lay]
  standard_name = virtual_temperature
  long_name = layer virtual temperature
  units = K
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[relhum]
  standard_name = relative_humidity
  long_name = layer relative humidity
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[deltaZ]
  standard_name = layer_thickness
  long_name = layer_thickness
  units = m
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[tracer]
  standard_name = chemical_tracers
  long_name = chemical tracers
  units = g g-1
  dimensions = (horizontal_loop_extent,vertical_dimension,number_of_tracers)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[cloud_overlap_param]
  standard_name = cloud_overlap_param
  long_name = cloud overlap parameter for RRTMGP (but not for RRTMG)
  units = km
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[precip_overlap_param]
  standard_name = precip_overlap_param
  long_name = precipitation overlap parameter
  units = km
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[ipsdsw0]
  standard_name = initial_permutation_seed_sw
  long_name = initial seed for McICA SW 
  units = none
  dimensions = ()
  type = integer
[ipsdlw0]
  standard_name = initial_permutation_seed_lw
  long_name = initial seed for McICA LW 
  units = none
  dimensions = ()
  type = integer
[cldtausw]
  standard_name = RRTMGP_cloud_optical_depth_layers_at_0_55mu_band
  long_name = approx .55mu band layer cloud optical depth
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[cldtaulw]
  standard_name = RRTMGP_cloud_optical_depth_layers_at_10mu_band
  long_name = approx 10mu band layer cloud optical depth
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
[fluxlwUP_allsky]
  standard_name = RRTMGP_lw_flux_profile_upward_allsky
  long_name = RRTMGP upward longwave all-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[fluxlwDOWN_allsky]
  standard_name = RRTMGP_lw_flux_profile_downward_allsky
  long_name = RRTMGP downward longwave all-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[fluxlwUP_clrsky]
  standard_name = RRTMGP_lw_flux_profile_upward_clrsky
  long_name = RRTMGP upward longwave clr-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[fluxlwDOWN_clrsky]
  standard_name = RRTMGP_lw_flux_profile_downward_clrsky
  long_name = RRTMGP downward longwave clr-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[sktp1r]
  standard_name = surface_skin_temperature_at_previous_time_step
  long_name = surface skin temperature at previous time step
  units = K
  dimensions = (horizontal_loop_extent)
  type = real
  kind = kind_phys
[fluxlwUP_jac]
  standard_name = RRTMGP_jacobian_of_lw_flux_profile_upward
  long_name = RRTMGP Jacobian upward longwave flux profile
  units = W m-2 K-1
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
[fluxlwDOWN_jac]
  standard_name = RRTMGP_jacobian_of_lw_flux_profile_downward
  long_name = RRTMGP Jacobian downward of longwave flux profile
  units = W m-2 K-1
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
[fluxswUP_allsky]
  standard_name = RRTMGP_sw_flux_profile_upward_allsky
  long_name = RRTMGP upward shortwave all-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[fluxswDOWN_allsky]
  standard_name = RRTMGP_sw_flux_profile_downward_allsky
  long_name = RRTMGP downward shortwave all-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[fluxswUP_clrsky]
  standard_name = RRTMGP_sw_flux_profile_upward_clrsky
  long_name = RRTMGP upward shortwave clr-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[fluxswDOWN_clrsky]
  standard_name = RRTMGP_sw_flux_profile_downward_clrsky
  long_name = RRTMGP downward shortwave clr-sky flux profile
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[flxprf_lw]
  standard_name = RRTMGP_lw_fluxes
  long_name = lw fluxes total sky / csk and up / down at levels
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = proflw_type
  active = (flag_for_rrtmgp_radiation_scheme)
[flxprf_sw]
  standard_name = RRTMGP_sw_fluxes
  long_name = sw fluxes total sky / csk and up / down at levels
  units = W m-2
  dimensions = (horizontal_loop_extent,vertical_dimension_plus_one)
  type = profsw_type
  active = (flag_for_rrtmgp_radiation_scheme)
[aerosolslw]
  standard_name = RRTMGP_aerosol_optical_properties_for_longwave_bands_01_16
  long_name = aerosol optical properties for longwave bands 01-16
  units = various
  dimensions = (horizontal_loop_extent,vertical_dimension, number_of_lw_bands_rrtmgp,number_of_aerosol_output_fields_for_longwave_radiation)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[aerosolslw(:,:,:,1)]
  standard_name = RRTMGP_aerosol_optical_depth_for_longwave_bands_01_16
  long_name = aerosol optical depth for longwave bands 01-16
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension, number_of_lw_bands_rrtmgp)
  type = real
  kind = kind_phys
[aerosolslw(:,:,:,2)]
  standard_name = RRTMGP_aerosol_single_scattering_albedo_for_longwave_bands_01_16
  long_name = aerosol single scattering albedo for longwave bands 01-16
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension, number_of_lw_bands_rrtmgp)
  type = real
  kind = kind_phys
[aerosolslw(:,:,:,3)]
  standard_name = RRTMGP_aerosol_asymmetry_parameter_for_longwave_bands_01_16
  long_name = aerosol asymmetry parameter for longwave bands 01-16
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension, number_of_lw_bands_rrtmgp)
  type = real
  kind = kind_phys
[aerosolssw]
  standard_name = RRTMGP_aerosol_optical_properties_for_shortwave_bands_01_16
  long_name = aerosol optical properties for shortwave bands 01-16
  units = various
  dimensions = (horizontal_loop_extent,vertical_dimension, number_of_sw_bands_rrtmgp, number_of_aerosol_output_fields_for_shortwave_radiation)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[aerosolssw(:,:,:,1)]
  standard_name = RRTMGP_aerosol_optical_depth_for_shortwave_bands_01_16
  long_name = aerosol optical depth for shortwave bands 01-16
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension, number_of_sw_bands_rrtmgp)
  type = real
  kind = kind_phys
[aerosolssw(:,:,:,2)]
  standard_name = RRTMGP_aerosol_single_scattering_albedo_for_shortwave_bands_01_16
  long_name = aerosol single scattering albedo for shortwave bands 01-16
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension, number_of_sw_bands_rrtmgp)
  type = real
  kind = kind_phys
[aerosolssw(:,:,:,3)]
  standard_name = RRTMGP_aerosol_asymmetry_parameter_for_shortwave_bands_01_16
  long_name = aerosol asymmetry parameter for shortwave bands 01-16
  units = none
  dimensions = (horizontal_loop_extent,vertical_dimension, number_of_sw_bands_rrtmgp)
  type = real
  kind = kind_phys
[icseed_lw]
  standard_name = seed_random_numbers_lw_for_RRTMGP
  long_name = seed for random number generation for longwave radiation
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_rrtmgp_radiation_scheme)
[icseed_sw]
  standard_name = seed_random_numbers_sw_for_RRTMGP
  long_name = seed for random number generation for shortwave radiation
  units = none
  dimensions = (horizontal_loop_extent)
  type = integer
  active = (flag_for_rrtmgp_radiation_scheme)
[precip_frac]
  standard_name = precipitation_fraction_by_layer
  long_name = precipitation fraction in each layer
  units = frac
  dimensions = (horizontal_loop_extent,vertical_dimension)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[sw_gas_props]
  standard_name = coefficients_for_sw_gas_optics
  long_name = DDT containing spectral information for RRTMGP SW radiation scheme
  units = DDT
  dimensions = ()
  type = ty_gas_optics_rrtmgp
[sw_cloud_props]
  standard_name = coefficients_for_sw_cloud_optics
  long_name = DDT containing spectral information for RRTMGP SW radiation scheme
  units = DDT
  dimensions = ()
  type = ty_cloud_optics
[sw_optical_props_clrsky]
  standard_name = shortwave_optical_properties_for_clear_sky
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str
[sw_optical_props_cloudsByBand]
  standard_name = shortwave_optical_properties_for_cloudy_atmosphere_by_band
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str
[sw_optical_props_precipByBand]
  standard_name = shortwave_optical_properties_for_precipitation_by_band
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str  
[sw_optical_props_precip]
  standard_name = shortwave_optical_properties_for_precipitation
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str  
[sw_optical_props_clouds]
  standard_name = shortwave_optical_properties_for_cloudy_atmosphere
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str
[sw_optical_props_aerosol]
  standard_name = shortwave_optical_properties_for_aerosols
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_2str
[gas_concentrations]
  standard_name = Gas_concentrations_for_RRTMGP_suite
  long_name = DDT containing gas concentrations for RRTMGP radiation scheme
  units = DDT
  dimensions = ()
  type = ty_gas_concs
[sources]
  standard_name = longwave_source_function
  long_name = Fortran DDT containing RRTMGP source functions
  units = DDT
  dimensions = ()
  type = ty_source_func_lw
[lw_gas_props]
  standard_name = coefficients_for_lw_gas_optics
  long_name = DDT containing spectral information for RRTMGP LW radiation scheme
  units = DDT
  dimensions = ()
  type = ty_gas_optics_rrtmgp
[lw_cloud_props]
  standard_name = coefficients_for_lw_cloud_optics
  long_name = DDT containing spectral information for RRTMGP LW radiation scheme
  units = DDT
  dimensions = ()
  type = ty_cloud_optics
[lw_optical_props_clrsky]
  standard_name = longwave_optical_properties_for_clear_sky
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_1scl
[lw_optical_props_clouds]
  standard_name = longwave_optical_properties_for_cloudy_atmosphere
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_1scl
[lw_optical_props_precip]
  standard_name = longwave_optical_properties_for_precipitation
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_1scl
[lw_optical_props_cloudsByBand]
  standard_name = longwave_optical_properties_for_cloudy_atmosphere_by_band
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_1scl
[lw_optical_props_precipByBand]
  standard_name = longwave_optical_properties_for_precipitation_by_band
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_1scl
[lw_optical_props_aerosol]
  standard_name = longwave_optical_properties_for_aerosols
  long_name = Fortran DDT containing RRTMGP optical properties
  units = DDT
  dimensions = ()
  type = ty_optical_props_1scl
[sfc_emiss_byband]
  standard_name = surface_emissivity_in_each_RRTMGP_LW_band
  long_name = surface emissivity in each RRTMGP LW band
  units = none
  dimensions = (number_of_lw_bands_rrtmgp,horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[sec_diff_byband]
  standard_name = secant_of_diffusivity_angle_each_RRTMGP_LW_band
  long_name = secant of diffusivity angle in each RRTMGP LW band
  units = none
  dimensions = (number_of_lw_bands_rrtmgp,horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[sfc_alb_nir_dir]
  standard_name = surface_albedo_nearIR_direct
  long_name = near-IR (direct) surface albedo (sfc_alb_nir_dir)
  units = none
  dimensions = (number_of_sw_bands_rrtmgp,horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[sfc_alb_nir_dif]
  standard_name = surface_albedo_nearIR_diffuse
  long_name = near-IR (diffuse) surface albedo (sfc_alb_nir_dif)
  units = none
  dimensions = (number_of_sw_bands_rrtmgp,horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[sfc_alb_uvvis_dir]
  standard_name =  surface_albedo_uvvis_dir
  long_name = UVVIS (direct) surface albedo (sfc_alb_uvvis_dir)
  units = none
  dimensions = (number_of_sw_bands_rrtmgp,horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[sfc_alb_uvvis_dif]
  standard_name =  surface_albedo_uvvis_dif
  long_name = UVVIS (diffuse) surface albedo (sfc_alb_uvvis_dif)
  units = none
  dimensions = (number_of_sw_bands_rrtmgp,horizontal_loop_extent)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[toa_src_lw]
  standard_name = toa_incident_lw_flux_by_spectral_point
  long_name = TOA longwave incident flux at each spectral points
  units = W m-2
  dimensions = (horizontal_loop_extent,number_of_lw_spectral_points_rrtmgp)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[toa_src_sw]
  standard_name = toa_incident_sw_flux_by_spectral_point
  long_name = TOA shortwave incident flux at each spectral points
  units = W m-2
  dimensions = (horizontal_loop_extent,number_of_sw_spectral_points_rrtmgp)
  type = real
  kind = kind_phys
  active = (flag_for_rrtmgp_radiation_scheme)
[active_gases_array]
  standard_name = list_of_active_gases_used_by_RRTMGP
  long_name = list of active gases used by RRTMGP
  units = none
  dimensions =  (number_of_active_gases_used_by_RRTMGP)
  type = character
  kind = len=128
  active = (flag_for_rrtmgp_radiation_scheme)

########################################################################
[ccpp-table-properties]
  name = GFS_data_type
  type = ddt
  dependencies = 

[ccpp-arg-table]
  name = GFS_data_type
  type = ddt
[Statein]
  standard_name = GFS_statein_type_instance
  long_name = prognostic state data in from dycore
  units = DDT
  dimensions = ()
  type = GFS_statein_type
[Stateout]
  standard_name = GFS_stateout_type_instance
  long_name = prognostic state or tendencies return to dycore
  units = DDT
  dimensions = ()
  type = GFS_stateout_type
[Sfcprop]
  standard_name = GFS_sfcprop_type_instance
  long_name = surface fields
  units = DDT
  dimensions = ()
  type = GFS_sfcprop_type
[Coupling]
  standard_name = GFS_coupling_type_instance
  long_name = fields to/from coupling with other components (land/ice/ocean)
  units = DDT
  dimensions = ()
  type = GFS_coupling_type
[Grid]
  standard_name = GFS_grid_type_instance
  long_name = grid and interpolation related data
  units = DDT
  dimensions = ()
  type = GFS_grid_type
[Tbd]
  standard_name = GFS_tbd_type_instance
  long_name = to be determined data that doesn't fit in any one container
  units = DDT
  dimensions = ()
  type = GFS_tbd_type
[Cldprop]
  standard_name = GFS_cldprop_type_instance
  long_name = cloud fields needed by radiation from physics
  units = DDT
  dimensions = ()
  type = GFS_cldprop_type
[Radtend]
  standard_name = GFS_radtend_type_instance
  long_name = radiation tendencies needed in physics
  units = DDT
  dimensions = ()
  type = GFS_radtend_type
[Intdiag]
  standard_name = GFS_diag_type_instance
  long_name = fields targeted for diagnostic output
  units = DDT
  dimensions = ()
  type = GFS_diag_type

########################################################################
[ccpp-table-properties]
  name = GFS_typedefs
  type = module
  relative_path = ../../ccpp/physics/physics
  dependencies = machine.F,physcons.F90,radlw_param.f,radsw_param.f,GFDL_parse_tracers.F90
  dependencies = rte-rrtmgp/rrtmgp/mo_gas_optics_rrtmgp.F90,rte-rrtmgp/rte/mo_optical_props.F90,rte-rrtmgp/extensions/cloud_optics/mo_cloud_optics.F90
  dependencies = rte-rrtmgp/rrtmgp/mo_gas_concentrations.F90,rte-rrtmgp/rte/mo_rte_config.F90,rte-rrtmgp/rte/mo_source_functions.F90

[ccpp-arg-table]
  name = GFS_typedefs
  type = module
[GFS_cldprop_type]
  standard_name = GFS_cldprop_type
  long_name = definition of type GFS_cldprop_type
  units = DDT
  dimensions = ()
  type = GFS_cldprop_type
[GFS_control_type]
  standard_name = GFS_control_type
  long_name = definition of type GFS_control_type
  units = DDT
  dimensions = ()
  type = GFS_control_type
[GFS_coupling_type]
  standard_name = GFS_coupling_type
  long_name = definition of type GFS_coupling_type
  units = DDT
  dimensions = ()
  type = GFS_coupling_type
[GFS_data_type]
  standard_name = GFS_data_type
  long_name = definition of type GFS_data_type
  units = DDT
  dimensions = ()
  type = GFS_data_type
[GFS_diag_type]
  standard_name = GFS_diag_type
  long_name = definition of type GFS_diag_type
  units = DDT
  dimensions = ()
  type = GFS_diag_type
[GFS_grid_type]
  standard_name = GFS_grid_type
  long_name = definition of type GFS_grid_type
  units = DDT
  dimensions = ()
  type = GFS_grid_type
[GFS_interstitial_type]
  standard_name = GFS_interstitial_type
  long_name = definition of type GFS_interstitial_type
  units = DDT
  dimensions = ()
  type = GFS_interstitial_type
[GFS_radtend_type]
  standard_name = GFS_radtend_type
  long_name = definition of type GFS_radtend_type
  units = DDT
  dimensions = ()
  type = GFS_radtend_type
[GFS_sfcprop_type]
  standard_name = GFS_sfcprop_type
  long_name = definition of type GFS_sfcprop_type
  units = DDT
  dimensions = ()
  type = GFS_sfcprop_type
[GFS_statein_type]
  standard_name = GFS_statein_type
  long_name = definition of type GFS_statein_type
  units = DDT
  dimensions = ()
  type = GFS_statein_type
[GFS_stateout_type]
  standard_name = GFS_stateout_type
  long_name = definition of type GFS_stateout_type
  units = DDT
  dimensions = ()
  type = GFS_stateout_type
[GFS_tbd_type]
  standard_name = GFS_tbd_type
  long_name = definition of type GFS_tbd_type
  units = DDT
  dimensions = ()
  type = GFS_tbd_type
[LTP]
  standard_name = extra_top_layer
  long_name = extra top layer for radiation
  units = none
  dimensions = ()
  type = integer
[huge]
  standard_name = netcdf_float_fillvalue
  long_name = definition of NetCDF float FillValue
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_cliq]
  standard_name = specific_heat_of_liquid_water_at_constant_pressure
  long_name = specific heat of liquid water at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_cp]
  standard_name = specific_heat_of_dry_air_at_constant_pressure
  long_name = specific heat of dry air at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_cvap]
  standard_name = specific_heat_of_water_vapor_at_constant_pressure
  long_name = specific heat of water vapor at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_eps]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants
  long_name = rd/rv
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_epsq]
  standard_name = minimum_value_of_specific_humidity
  long_name = floor value for specific humidity
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_epsqs]
  standard_name = minimum_value_of_saturation_mixing_ratio
  long_name = floor value for saturation mixing ratio
  units = kg kg-1
  dimensions = ()
  type = real
  kind = kind_phys  
[con_epsm1]
  standard_name = ratio_of_dry_air_to_water_vapor_gas_constants_minus_one
  long_name = (rd/rv) - 1
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_rocp]
  standard_name = ratio_of_gas_constant_dry_air_to_specific_heat_of_dry_air_at_constant_pressure
  long_name = (rd/cp)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_rog]
  standard_name = ratio_of_gas_constant_dry_air_to_gravitational_acceleration
  long_name = (rd/g)
  units = J s2 K-1 kg-1 m-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_fvirt]
  standard_name = ratio_of_vapor_to_dry_air_gas_constants_minus_one
  long_name = (rv/rd) - 1 (rv = ideal gas constant for water vapor)
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_g]
  standard_name = gravitational_acceleration
  long_name = gravitational acceleration
  units = m s-2
  dimensions = ()
  type = real
  kind = kind_phys
[con_hvap]
  standard_name = latent_heat_of_vaporization_of_water_at_0C
  long_name = latent heat of evaporation/sublimation
  units = J kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_hfus]
  standard_name = latent_heat_of_fusion_of_water_at_0C
  long_name = latent heat of fusion
  units = J kg-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_pi]
  standard_name = pi
  long_name = ratio of a circle's circumference to its diameter
  units = none
  dimensions = ()
  type = real
  kind = kind_phys
[con_rd]
  standard_name = gas_constant_dry_air
  long_name = ideal gas constant for dry air
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_rv]
  standard_name = gas_constant_water_vapor
  long_name = ideal gas constant for water vapor
  units = J kg-1 K-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_t0c]
  standard_name = temperature_at_zero_celsius
  long_name = temperature at 0 degree Celsius
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[con_ttp]
  standard_name = triple_point_temperature_of_water
  long_name = triple point temperature of water
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[cimin]
  standard_name = minimum_sea_ice_concentration
  long_name = minimum sea ice concentration
  units = frac
  dimensions = ()
  type = real
  kind = kind_phys
[rlapse]
  standard_name = air_temperature_lapse_rate_constant
  long_name = environmental air temperature lapse rate constant
  units = K m-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_jcal]
  standard_name = joules_per_calorie_constant
  long_name = joules per calorie constant
  units = J cal-1
  dimensions = ()
  type = real
  kind = kind_phys
[con_rhw0]
  standard_name = sea_water_reference_density
  long_name = sea water reference density
  units = kg m-3
  dimensions = ()
  type = real
  kind = kind_phys
[con_sbc]
  standard_name = stefan_boltzmann_constant
  long_name = Stefan-Boltzmann constant
  units = W m-2 K-4
  dimensions = ()
  type = real
  kind = kind_phys
[con_tice]
  standard_name = freezing_point_temperature_of_seawater
  long_name = freezing point temperature of seawater
  units = K
  dimensions = ()
  type = real
  kind = kind_phys
[con_p0]
  standard_name = standard_atmospheric_pressure
  long_name = standard atmospheric pressure
  units = Pa
  dimensions = ()
  type = real
  kind = kind_phys
[rhowater]
  standard_name = liquid_water_density
  long_name = density of liquid water
  units = kg m-3
  dimensions = ()
  type = real
  kind = kind_phys
[con_csol]
  standard_name = specific_heat_of_ice_at_constant_pressure
  long_name = specific heat of ice at constant pressure
  units = J kg-1 K-1
  dimensions = ()
  type = real 
  kind = kind_phys
